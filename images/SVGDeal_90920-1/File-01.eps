%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 27.0)
%%For: SANGPENA
%%CreationDate: 09/11/22
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 27.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 27.0.0 x602 R agm 5.769 ct 6.516%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.2-c000 79.1b65a79, 2022/06/13-17:46:14        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator 27.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-11-09T09:16:12+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-11-09T09:16:12+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-11-09T09:16:12+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>28</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAHAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8H86fml5zg13U/qV&#xA;6LfyrH6Btr+2ih5tFNH8DwmcM0nOTlVkU/CpK0A5ZiZMs72+l3ui02jljjxmXjE8jtE2dhfeennz&#xA;obvQfyg843/mrypJd6g3q3dndSWcl1RE9cKiSrIUjAVDxmCkDaor3yzT5TONlo7a0EdLqDCP0kAj&#xA;4s3y91Kld3dtZ2s13dSrBbW6NLPM5CqiIOTMxPQADFSaSTTfzA8l6kxS11i2EocRiGZvq8pZtl4x&#xA;zem7BjsCBQnbJZImBAl6SeVteLLHILgRIDuc35heRFnEB8wacJSSAPrMVCQCTQ8qbU38Mq8SPeG+&#xA;eOUIiUgRE9TyRdj5q8uX88cFlqMFy81fQaNwySkAkiKQfBIQFJIUkjIR1GOUzASiZDpYv5I4DV1s&#xA;muXMUHrGrWekaXdanesVtbSMyScRViB0VR3Zjso7nATSJSAFnkHgnmH8zX84TXNvcaTHb2wie20+&#xA;K8ubkW4lfkRNcpCtuWBb0gaFggDcS3LbH/MRJp1Eu1MMpAG677++iyvyl5psvL/nR9BsVp5L1adI&#xA;dGu3ZxDDdiAs8UckvwlZXTiiKft9KljWWOfqI6d7m6KcJcYiTsRw7GiK9VS8j08/J65l7luxVL/M&#xA;PmDSPLui3mt6xcLa6bYRmW5napCqNgABuWYkBQNydsVfJHnD/nMfz5d3rv5V0y30zRlcrBNdRNcT&#xA;yAbfG3IRLXrxUGn8xwWOTPw5cPFRrvTD8u/+czNbXVIbPz1ZW8umysEfU7JGjmh5H7ckXJ1kRe4U&#xA;Bvn0wsH1la3Vtd2sN3ayLNbXCLLBMhqro4DKykdQQajFVXFXYq8K/Nnz9r0XmO8stHupYY9PRLeN&#xA;IZ3h5TyUJciKrt8bCL4hxB37740pGU+EGnW5hmyZCIEiMKs/0j9/3PRPI2teYL3S9Hn1J2uLnUIW&#xA;e9jdURrdouQeoSOMKVk4xsrEktUgKFOXxOzsIRkABL6urMckydiriQASTQDck4qxe7/M/wAg2l19&#xA;Vm1qD1a0Pp85UB93jVkH35Sc8B1dtj7D1k48Qxyr5fYd2RWd9Z31slzZTx3NtIKpNEwdD8mUkZaC&#xA;DydbkxSxy4ZAxkOhVsLW7FXl/m/81NTfzInlLydDHcas8noTXkvxRo4FWCKNjwoSzHYUOxzCy6k8&#xA;XBDm9X2d2DjGA6nVEjHVgDmR5+/oPtTCfyn+acdkbi384ibU1HP6s9pCtuzfyBqGg9+P0DJnFlr6&#xA;t/c48O0OzzLhOnqHfxy4vf8AgqH5b/mnNreoS+XtfgWz1+3LoOPwpK0RIkTiSeMi0NR0O/TBg1PE&#xA;eGX1NnbXYIwQGbCeLCfsvl8Ep/Mr8y/Jdvc3um3ITWmmtWtbeK3EUot7pDIs3qsSWi5coxzRGoVP&#xA;cZlGUREyJ+n5/Dz+TzuPBlyTjCETKUuX47nj+h+ZbaziQavPqtwLa3aPS7P1YJ44ZfTMHqxSSrHK&#xA;oQbrVj8Xb4a5jabDLUkxw1y9XSvI9Ldj2jjjohec7xlQGxs0NxRJ2ve6rbqXsf8Azj9a6ZYeX5ZF&#xA;1CR59WkEkVpOjwKBCCjGJXHGR6giRoncCiryNMyBpjhJjLm4ep7ROr4Z90eEGqsDvetZJxXlP/OQ&#xA;3m1NN8p/oOCA3Oo6qUlRBIYgsVrPFK9XXdWenFPep7ZCWrjglGUu9y9N2Tm1sZwx1Yief3e8vFvL&#xA;nmiFby/sbrT5pLYrp10JDcRozXEE7yxJwP7r45I/i40+nbNL7TSGvnjyYpcPBGcdwT9Qonbls4mH&#xA;Ry7HvFqBcp1IcPcPt/UgrbS9aSX/ABNPBZqt/p36TfR4rnjexx1JeSKKT04vTjSQ8qMG6DwGayGq&#xA;xCYw+v0z4OIx9N7bE87Pydx2xmnqtLGEOGI4YGXeeDi5DlW/vZR5d83HTNbsZn0iec2ElrDc3Hrw&#xA;8Z4YpZ5aJExC+oizLJX4GLdTxG+bLsqei1nFllGvVKgCa4oxjd/Dkdqefw9sYDp4xFg0B8n0zpOq&#xA;2Orabb6lYSeraXSCSJ6FTQ9QymhVlOzKdwdjnRAgiw3ggiwg/N3l9PMPly+0dpPRNyg9KUgsFljc&#xA;SRsygiqh0FRXcYyFimOSAnExPUU8Lh/K7zfDqFvb6vZmzspZkt31CF4rqMNIeKlY1dZipY9Si0G7&#xA;UAOYI0hvns86OxMnFRI4fx0Zn5q85+WptU0zyvOhsvLtle+nqepzApFysQCttCU5MCJWi9V3CqIy&#xA;aHeq5RnHYfjZ6rRRMoyliB9AINDkN4y+x6fY6ppmoCY2F5Bdi3kMNx6EiSenKoBMb8CeLAEbHfLW&#xA;pE4q+ef+c1dSvoPy/wBHsYSy2t7qQ+tEbBvShdkRvYseXzXFXmflG0jPlaOxuZoLTSbf0BcyExxv&#xA;FPIoRLiSV0dTBHJ/eCo+I9a5q4x4yb9/v8nttdrvyscUcQHHGEYnuied9xN8+5id/wDkpr/mTW9V&#xA;n8k3cPmS2t4FvbiaOluTJMzn6vAshBnZVSvJdiPA7Zn4fpqqp5PWZDkyGZq5GzXLd9Sf84r6le33&#xA;5K6L9aLMbWS5toZGNS0Uc7cPoUHgPYZa4r1rFUv1u/u7O0VrSNHuJWMcRmJWIOUZkDsOgd1EY36s&#xA;OvQqvAfzl1eWW8ke40u3CXsf1G6vjEGgvPTCsBUtJHytZ9qCTrVWr2qMDKV0aiLsb/Y0fncmOfDw&#xA;AxPUy272ef8AOOllpdv5CJsohHMLlobqgUCsSLwC8QPh4vz3/aZsungOKRibu/n7vLp8GrQ0cfFd&#xA;mRJP49z1LA5jiQBU7AdTir50/NP80rzX7ybStKmMWhwsUZkNDckbFmI/Y/lXv1PtrNRqDI0OT6X2&#xA;D2FHTxGTILyn/Y/t7yhNO8u6elrbRP5fudUguI7KS61qE3A9D60Q0ixKn7tyiuqCqn4w1a9BGMB3&#xA;Xy3bs2smZEjLHGQZgQPDvw8rvcWRf9UhLvK/nHVfJHmGdbKf63YRzPFdW3IiKdEbjzXqFagqrfwy&#xA;OPKcctuTka7s3HrsI4xwzqwesfL3d4fTejavY6xpdtqdhJ6lpdIJIm6HwII7FSKEeObWMhIWHy3U&#xA;6eeHIccxUoqXmO+l0/y9ql/F/e2lpPPH/rRxM4/EYMhqJPky0WIZM0IHlKUR8y8Q1Hzdonl78zNE&#xA;eCkumaHZx2N1JGORLyo5mlqN2YNNVu5IPfNdLKIZB3AU95h7Oy6nQZAdsmWZkL8qoe7bbyp6/dfm&#xA;D5KttNbUX1m0e3C8lEcqPI232VjB5lvamZ5zwAuw8Zj7I1Up8Axyv3GvnyeL+T/MtnqOu+b71gtt&#xA;dXccur6WXNCk1i7XCLy3/Zry/wAnlmuxZAZSPxHwe47R0UseHBH6oxIxy8xMcJ+3l50s84flX5l1&#xA;DW7Cy0jTHaa3WSC5u5F9G2MUA4QymUjiTIrD4U5MOnbIQ0eQSlHpexed7P7Xx4JxyHuogPPNNnfQ&#xA;vMcUuoaRbXD2E0kF7p+oRLOgYgwurRq4VivKu5psDvksOWWGRDv+28OPW6SOWAFA3ZAvfah3efuf&#xA;Tvl7RlvNM0y5tIreHTJIrSa1lXn9ZjtIHFzBZUbktI5KKX5brtxB+LNvxcW/e+c8PDt3MyxQ8Q/N&#xA;D8oPPnm3z415b3ttBot1HHDBfg1uLJIIi4R4GCiZJLjl9l60c7bVzEzaUZJgyOwHJ3Gh7YnpcMoY&#xA;xU5SB4vd0r8cywex/JX814+UT6JayJCRJHc3V1C0kzWgZ4qRxtxjaZ6BW5EITVhmOOztzvQ35ebh&#xA;9uaka84ybjOEOEm/q/Bv5p1d+QfzcutButMfylZLJNZ3Vl9dGpxLccZH9SMJIsYPp9jGTRjStBU5&#xA;rI+zxGcZfE2E4y4a22Fcr590ujVizmOAYzueHhtKbz8mfzQuXsri+8u212wuFu7aKLUURrOVAEUX&#xA;BKorr8POsfPrTiaZ0HaMJajNLJE8PEKI57Ohw9mSxwEYy6UdvN9BeQPLt35c8o2GkXsiS3kPqyXT&#xA;xFmj9W4meeRYy4ViitIQtQNu2TxwEIiI6O0xwEIiI6MhybN4P+aTfmFonnVNf9d205JBFpM0XpuE&#xA;EsTho0t2ZmMgHL1P3bVX4wRx+DFzzMPVdB1+fBqpz/derbYD9XXvCWWenzyWV5q0uq6Pd/XS9zqF&#xA;vezRyJHIhZ/rCjeJ2HM8uHIb8WU0oKOMA0ZQ4r5E9U6PTdo4YmeP+MHi2Px5be96v+VHlS58veW5&#xA;EuwFur+drlowhQxx8FjjSjBW+zHzoygryoRtmbigYijzbdHgOPHUjcuZZpljlPPPzx8i2vnryafL&#xA;ZVv0hLJ9a02VeIMc1upJI5lEYsjFOJZa8q1ABIVfO2p3nmH8s9ZPk1NXuJo54UVZ5bWGFZImhDLH&#xA;I5QusiRsE/vCV6A0pk8uHTeESTIZK+F/tcjs6eolqoQqMsZlXMA132dtufnyR/kq5/M7Uby5tPIt&#xA;zJLeaiY49RvZwktvCip6YeV2EsUZiT7PEB2Gy+AwdHmmSeKPpr5Hvvn8Lp3PbPZ+DHijIZP34+oC&#xA;pXue4AD5DbvfUPkfylp/lDylpfluwJa20yARCQ7GRyS0shHYySMzH55lvPJ5iq2SOORCkih0bZlY&#xA;Agj3BxV8/wD58eYtO8wa1YeX9PtZ59R06aWJpKKUlaconpwopZ3b1Y+JrShFAGrUbjsqgJzJHCOf&#xA;3up7UsmMQDxHl9yz8pPLHmy11ue3kvr7TptPvojdaGjukRVXQTTTipiZZI0ZYz+2NxUcTmr12olm&#xA;z8Q+l2miwRxYOE/U+hcrZIfUrRrzTrq0WQxNcwyRCUdVLqV5D5VwSFim3Dk4JxlV8JB+TwC1/JLz&#xA;rDAk31a2ku5JXj4SyqY4UQ0ErA1EnPqBQ0HUEnbWjSzfRMntPpZEi5CNdBufLyr+w98ng/JPzWIV&#xA;kfzbLDcoP3cUKy+mvfirCWPiB7Jlw0sv5zqp+0+nuhgBj51f+5P3pNN+SPm24aaC6+pu6IzW2pQv&#xA;wZ2AqqSx8V5cztyPxA71YCmVnSyPNzY+0+mjRjx+cT94N7V3cj3Dm9Q/LTy3qHl3yhaabqDD62pe&#xA;WWNSGEZkYtwBBINO9O+ZeCBjGi8p23rYanUyyQ+nYe+urJLu1hu7Sa1nHKG4jaKVelVcFWH3HLSL&#xA;FOsx5DCQkOYNvB9L/IqZfN7aXrF2V0xopLiznt+PqXCROisp5V9Nl9VeXwn28RrI6P10Ts+g5/ao&#xA;HTeJij+8sAg8o2D8+Rr7VO38jaNdeQfLWrny9cW2razqNnY38HqzF7eC4uzBLOFJYDjEOY5Ar88y&#xA;vyeN54e1WtBu4+7h/B+1dov5J3U3nW7tTcLJoGl3CLPcmnqS1jSb0Ao/a4yKGPT9WYsNIeMj+EPR&#xA;an2njHSxlVZskTQ6Dcji+Y2/Be/5tHzpgP5lf8qkrB/jL0PrXIel6fq/W6cTWv1X9/6fHx+Hp+1T&#xA;KsvDXq5N+Djv0c2YaF+jP0LYfor/AI5n1eP6l9uvo8Bwr6nx149eXxeO+TjVCuTVK7N80dkmLsVd&#xA;irsVdirsVdirAPzmp/h6x9P/AHt+ur9WrTj/AHUnP1P2uHH+X9rjms7W8PwDx3V9O92fZPieOOCr&#xA;rr3PGLr9Jf4fbn6PqfV39bh9njwNOHL4f+C2zl8fh+PvxVxfpeoyeL4G3DfD+h9TCtBXr7/2Z3bw&#xA;jsVQGs/oz6vH9f5U9QfV/S9T1/V4t/c+j+95cOVeG/HlX4a4qo6f/hv9CwfVPq/6JoPT5U4V/wAr&#xA;nvzr9rl8Veu+Kpjb/V/RT6vw9Cn7v06cKe1NsVVMVdirsVeH6N+gv+hgX5fWOdbv6lz4f720l9fl&#xA;x/3T6fPh+1Wlcqx3xSri8+7yb8n0Rvh8u/zr9L3DLWh2KuxV2KuxV2KuxV2KpD5v/QP1KH9K+t6v&#xA;qD6j9T9X656v/Lv6H72tPtce3XbKsvDW/wC12HZ3jcZ8Oqr1cVcNf0uLb3fYxVfS5fvf8YehVqV9&#xA;SlKiv91+++Xf6cp/07tzfT8pfw/T6WX+VP8AD/6K/wBwVfqvqv6/P1PW9ev7z1/W/e+p489/opl+&#xA;Lhr0ul7Q8bxP331UK5VXThr017tn/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:ab67176d-fe1b-4548-a327-3dcb65f47c03</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:ab67176d-fe1b-4548-a327-3dcb65f47c03</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:cc654264-698e-434c-916a-3a694158e360</stRef:instanceID>
            <stRef:documentID>xmp.did:cc654264-698e-434c-916a-3a694158e360</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1f61e805-5390-4a5c-ba76-c77dbca74e35</stEvt:instanceID>
                  <stEvt:when>2022-11-09T09:14:12+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 27.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ab67176d-fe1b-4548-a327-3dcb65f47c03</stEvt:instanceID>
                  <stEvt:when>2022-11-09T09:16:12+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 27.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
200.543 573.333 mo
204.121 569.541 203.607 563.891 206.655 559.849 cv
206.936 559.476 206.82 558.782 207.122 558.449 cv
217.244 547.267 223.482 532.767 236.759 524.252 cv
245.859 518.416 255.743 515.584 266.411 514.509 cv
281.504 512.988 295.426 516.011 308.385 523.835 cv
315.938 528.396 321.847 534.583 326.01 542.254 cv
327.89 545.719 330.111 547.153 333.884 546.516 cv
334.85 546.353 336.015 546.145 336.831 546.52 cv
343.137 549.413 344.672 545.673 345.685 540.567 cv
347.067 533.602 350.22 527.219 353.095 520.246 cv
344.345 520.531 336.09 519.773 327.842 517.992 cv
313.328 514.857 302.054 501.668 302.005 486.911 cv
301.995 483.77 301.819 480.616 302.049 477.492 cv
302.213 475.273 301.461 473.797 299.957 472.246 cv
294.019 466.126 290.426 459.165 293.241 450.356 cv
293.871 448.383 292.81 447.074 291.814 445.878 cv
282.034 434.125 280.165 420.672 283.556 406.284 cv
288.502 385.292 301.514 369.88 318.268 357.146 cv
329.768 348.406 342.558 342.376 356.807 340.248 cv
382.89 336.353 407.318 350.2 413.3 377.459 cv
414.135 381.264 414.874 385.197 413.934 389.163 cv
413.522 390.899 413.975 392.302 415.269 393.663 cv
424.366 403.231 425.492 415.233 418.497 426.421 cv
414.471 432.861 409.067 437.899 402.911 442.246 cv
401.35 443.349 399.32 443.986 398.058 446.933 cv
412.68 444.66 426.917 445.342 441.865 445.21 cv
438.829 439.396 434.564 435.193 432.264 429.788 cv
428.527 421.009 426.61 412.056 427.78 402.413 cv
428.369 397.563 425.49 392.869 426.066 387.857 cv
426.096 387.601 425.393 387.221 424.992 386.961 cv
417.526 382.115 415.801 378.479 418.839 370.829 cv
420.214 367.365 419.529 364.83 418.082 362.024 cv
406.314 339.2 418.806 303.278 449.308 298.559 cv
459.17 297.033 469.107 297.91 478.518 301.87 cv
480.107 302.539 481.819 304.224 483.083 301.556 cv
484.302 298.982 487.996 297.102 485.121 293.349 cv
476.748 282.423 469.489 270.81 464.228 258.043 cv
458.214 243.447 456.027 228.615 461.853 213.368 cv
466.491 201.233 479.652 192.381 492.658 191.98 cv
509.534 191.461 525.003 195.758 539.263 204.572 cv
542.478 206.559 544.156 204.993 546.292 202.876 cv
563.954 185.364 585.152 175.878 610.143 176.171 cv
628.352 176.385 643.927 183.834 657.8 195.366 cv
679.079 213.056 689.888 236.562 695.511 262.901 cv
699.105 279.736 701.347 296.769 700.391 314.048 cv
699.836 324.072 698.799 334.077 696.2 343.804 cv
695.601 346.042 695.877 346.938 697.76 348.154 cv
711.482 357.016 718.674 370.203 720.155 385.972 cv
721.466 399.938 716.021 417.194 700.08 425.578 cv
696.18 427.629 695.114 430.333 694.716 434.026 cv
692.836 451.455 683.168 462.95 667.534 470.053 cv
657.688 474.527 647.504 476.378 636.798 474.626 cv
631.144 473.701 632.173 478.72 630.925 481.321 cv
629.542 484.201 633.01 483.785 634.256 484.208 cv
653.642 490.798 672.498 498.587 690.625 508.151 cv
695.245 510.589 700.394 508.571 705.291 509.046 cv
714.9 509.977 723.042 513.063 727.395 522.462 cv
728.394 524.619 729.965 525.014 732.165 525.143 cv
751.501 526.276 768.71 532.859 782.283 546.877 cv
793.182 558.133 799.808 571.582 799.442 587.843 cv
799.342 592.324 798.085 596.58 796.184 600.231 cv
793.872 604.671 793.661 609.195 793.039 613.812 cv
791.84 622.719 788.505 630.383 780.332 635.121 cv
778.781 636.02 778.128 637.211 777.665 638.986 cv
774.618 650.659 767.387 658.349 755.539 661.363 cv
754.248 661.691 753.206 661.943 752.196 663.092 cv
742.082 674.589 724.405 677.08 710.788 669.234 cv
704.33 665.513 698.953 660.69 694.903 654.485 cv
693.621 652.52 692.4 651.709 690.071 652.243 cv
671.144 656.588 653.526 640.686 649.955 625.457 cv
648.11 617.592 648.186 609.698 648.991 601.763 cv
649.197 599.731 649.49 597.951 647.638 596.349 cv
644.168 593.348 641.943 589.459 640.64 585.08 cv
639.463 581.122 636.735 578.943 633.106 577.143 cv
617.527 569.419 602 561.619 585.587 555.732 cv
582.655 554.681 580.842 554.989 578.861 557.457 cv
568.74 570.068 561.185 584.197 554.274 598.697 cv
552.535 602.346 553.231 606.578 552.936 610.468 cv
552.296 618.887 550.758 627.069 548.828 635.231 cv
548.687 635.826 548.871 636.498 548.928 637.607 cv
556.893 634.228 564.821 632.583 573.148 634.319 cv
573.631 634.42 574.231 634.22 574.627 634.436 cv
580.48 637.623 586.673 636.761 592.875 636.089 cv
604.927 634.784 613.17 640.951 619.442 650.267 cv
626.268 660.407 629.858 671.928 632.479 683.753 cv
632.829 685.333 633.177 687.649 632.349 688.626 cv
628.666 692.973 631.849 696.082 633.686 699.588 cv
642.469 716.355 648.899 733.969 651.532 752.757 cv
653.701 768.231 653.145 783.459 644.124 797.116 cv
639.154 804.643 631.965 808.654 622.999 809.153 cv
620.512 809.291 618.712 809.902 616.872 811.651 cv
599.861 827.821 568.744 827.919 551.637 811.81 cv
540.284 801.119 533.126 788.22 531.883 772.397 cv
531.564 768.342 525.988 764.891 521.458 765.903 cv
511.912 768.036 502.377 768.873 492.519 767.958 cv
473.755 766.215 458.887 757.901 447.395 743.212 cv
437.797 730.946 431.788 716.792 426.338 702.389 cv
425.106 699.13 423.619 696.783 420.201 695.245 cv
409.854 690.587 400.577 684.197 392.364 676.345 cv
390.926 674.97 389.977 674.799 388.196 675.879 cv
383.395 678.793 378.393 681.373 373.495 684.129 cv
372.013 684.962 371.244 686.352 370.38 687.838 cv
365.221 696.707 358.333 703.129 347.242 703.105 cv
345.353 703.101 344.094 703.882 342.77 705.506 cv
335.469 714.457 326.208 719.981 314.429 720.811 cv
312.855 720.922 311.312 721.375 310.023 722.737 cv
294.874 738.75 267.199 733.702 254.527 717.39 cv
243.887 703.694 236.126 688.857 234.817 671.225 cv
234.685 669.439 233.611 668.173 232.57 666.912 cv
217.006 648.075 207.058 626.587 202.215 602.687 cv
201.951 601.387 201.763 600.095 200.543 599.284 cv
200.543 590.634 200.543 581.983 200.543 573.333 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0470588 .00392157 .00392157 rgb
f
465.014 593.192 mo
466.273 591.825 465.839 590.368 465.014 589.087 cv
456.786 576.32 448.55 563.601 435.932 554.461 cv
425.544 546.937 414.434 542.347 401.404 540.886 cv
384.098 538.945 369.919 545.542 355.986 553.994 cv
355.016 554.583 354.324 555.803 353.081 555.185 cv
351.543 554.42 352.662 553.218 352.871 552.17 cv
355.009 541.449 357.737 530.963 363.893 521.674 cv
365.676 518.983 367.154 518.194 370.026 520.5 cv
374.477 524.074 379.86 524.558 385.377 523.914 cv
386.921 523.682 388.616 524.587 390.021 523.299 cv
404.502 518.048 413.936 506.224 424.953 496.463 cv
429.907 492.074 434.94 487.771 439.777 483.256 cv
441.821 481.348 444.018 481.298 446.209 482.178 cv
456.223 486.199 465.858 491.04 475.467 495.939 cv
479.001 497.74 477.903 499.015 475.418 500.555 cv
468.326 504.949 462.042 510.275 457.235 517.14 cv
449.059 528.815 445.131 541.323 451.261 555.168 cv
455.157 563.966 465.187 570.354 476.642 570.695 cv
492.822 571.176 503.556 562.252 513.311 551.108 cv
514.446 549.811 514.992 547.282 517.126 547.803 cv
519.05 548.274 519.071 550.732 519.605 552.403 cv
522.562 561.659 525.486 570.928 528.216 580.253 cv
528.942 582.735 529.89 582.93 531.987 581.873 cv
539.599 578.035 547.285 574.34 554.892 570.491 cv
555.645 570.11 556.199 569.398 556.988 570.11 cv
557.889 570.924 557.727 572.005 557.054 572.803 cv
551.534 579.338 548.919 587.476 544.765 594.759 cv
543.451 597.061 542.868 599.306 542.94 601.826 cv
543.407 618.247 539.966 633.992 533.553 648.938 cv
527.39 663.3 517.841 674.749 503.769 682.714 cv
491.83 689.471 479.587 693.16 465.954 694.177 cv
445.51 695.701 427.783 689.145 411.162 678.241 cv
405.051 674.233 399.401 669.626 394.451 664.224 cv
393.502 663.188 392.893 662.247 391.255 663.247 cv
382.991 668.288 374.349 672.617 365.499 676.525 cv
364.127 677.131 363.696 678.061 363.179 679.398 cv
361.087 684.806 357.502 689.067 352.396 691.92 cv
351.448 692.45 350.409 693.281 349.174 692.391 cv
347.821 691.418 348.806 690.367 348.974 689.286 cv
351.348 674.038 351.735 658.809 350.819 643.33 cv
349.872 627.331 347.878 611.502 344.985 595.861 cv
342.793 584.014 339.455 572.237 334.753 560.981 cv
334.361 560.042 332.654 558.78 334.239 557.592 cv
335.323 556.78 336.71 556.986 338.075 557.364 cv
345.49 559.42 350.462 564.719 355.274 570.219 cv
356.34 571.437 357.172 572.86 358.149 574.241 cv
360.11 573.131 359.619 571.207 359.212 570.216 cv
357.019 564.886 360.046 562.223 364.023 559.956 cv
371.593 555.64 379.329 552.461 388.189 550.812 cv
406.543 547.396 420.872 554.595 433.891 565.695 cv
441.387 572.085 448.61 579.049 452.368 588.734 cv
453.185 590.84 455.401 592.512 456.806 594.559 cv
459.01 597.771 461.117 593.493 463.394 594.111 cv
464.476 594.761 464.852 594.165 465.014 593.192 cv
cp
.960784 .219608 .192157 rgb
f
494.733 297.498 mo
499.32 290.191 504.449 283.226 510.582 277.212 cv
518.504 269.444 525.763 271.459 529.252 281.965 cv
530.189 284.786 530.665 287.759 531.611 291.751 cv
534.359 287.636 535.394 283.593 535.995 279.57 cv
536.599 275.52 537.89 274.503 541.977 275.998 cv
551.654 279.539 561.443 282.764 570.641 287.478 cv
572.059 288.205 573.838 288.512 574.702 290.365 cv
568.884 294.245 562.207 297.087 558.321 303.317 cv
559.427 304.518 560.429 303.884 561.349 303.806 cv
564.496 303.541 567.63 303.05 570.78 302.926 cv
587.572 302.264 596.703 310.454 597.837 327.151 cv
597.995 329.468 597.887 331.803 597.91 334.13 cv
597.919 334.941 598.223 336.363 599.01 335.684 cv
602.745 332.463 603.057 336.646 604.049 338.104 cv
611.576 349.154 621.659 356.041 635.046 357.73 cv
637.173 357.998 638.75 358.463 639.464 360.872 cv
640.191 363.328 639.547 365.036 637.732 366.598 cv
631.67 371.816 624.456 373.974 616.658 374.584 cv
611.522 374.986 606.359 375.251 601.42 376.875 cv
590.591 380.434 586.957 390.159 593.145 399.714 cv
594.659 402.052 593.443 403.379 592.707 405.103 cv
587.857 416.472 593.858 427.998 605.282 429.117 cv
610.8 429.657 615.377 427.199 619.387 423.844 cv
623.073 420.759 626.449 417.288 629.835 413.862 cv
635.909 407.716 642.877 403.018 651.232 400.658 cv
674.841 393.99 692.409 410.627 687.132 434.587 cv
682.806 454.228 665.972 466.479 643.401 466.407 cv
632.453 466.373 622.412 463.363 613.384 457.138 cv
612.01 456.19 611.104 455.092 609.177 456.621 cv
593.237 469.274 574.354 471.556 554.968 471.147 cv
549.266 471.026 544.416 471.851 539.449 474.684 cv
532.37 478.722 524.779 481.727 516.555 482.774 cv
495.438 485.463 479.886 477.226 470.607 458.095 cv
469.151 455.093 467.239 453.061 464.421 451.352 cv
450.051 442.639 439.503 430.987 436.559 413.771 cv
436.252 411.978 436.378 410.112 436.071 408.319 cv
435.366 404.207 438.948 405.19 440.844 404.113 cv
443.511 402.598 443.374 404.989 444.02 406.283 cv
448.062 414.375 456.914 417.095 464.592 412.176 cv
467.118 410.557 468.146 410.847 470.193 412.842 cv
473.699 416.259 477.66 419.317 482.909 419.745 cv
480.538 422.543 477.62 420.754 474.909 420.699 cv
470.539 420.624 466.352 419.665 462.302 418.065 cv
461.437 417.723 460.582 416.663 459.656 417.683 cv
458.67 418.769 459.501 419.888 460.034 420.872 cv
460.843 422.368 462.011 423.818 463.6 424.207 cv
467.254 425.101 468.245 427.79 469.266 430.911 cv
472.331 440.28 476.418 449.152 482.752 456.855 cv
494.305 470.905 510.362 471.178 521.84 457.129 cv
530.665 446.326 533.331 433.277 533.417 419.76 cv
533.444 415.412 535.651 412.737 537.596 409.563 cv
538.619 407.894 539.808 408.634 541.044 409.025 cv
549.053 411.56 556.67 411.189 562.732 404.767 cv
569.356 397.75 569.731 388.899 568.687 379.928 cv
568.297 376.581 565.961 378.438 564.53 378.952 cv
551.742 383.544 538.692 386.534 524.998 385.434 cv
520.248 385.053 515.532 384.259 510.046 383.557 cv
514.51 379.81 510.767 377.806 509.309 375.488 cv
507.431 372.501 505.822 375.365 504.405 376.109 cv
482.47 387.63 460.959 385.698 440.41 373.138 cv
428.691 365.975 422.672 354.562 423.58 340.67 cv
424.476 326.97 430.995 316.248 443.85 310.344 cv
454.735 305.346 465.717 306.802 476.18 311.631 cv
489.548 317.801 499.286 327.919 504.638 341.628 cv
506.623 346.713 509.293 344.34 511.985 343.707 cv
515.938 342.777 513.577 339.971 512.745 338.708 cv
509.515 333.807 511.148 330.294 514.488 326.119 cv
520.247 318.918 524.177 310.644 525.628 301.384 cv
526.407 296.416 526.364 291.509 521.721 288.337 cv
516.881 285.03 511.903 286.168 507.169 288.934 cv
502.539 291.64 498.897 295.527 495.076 299.197 cv
494.531 298.718 494.417 298.152 494.733 297.498 cv
cp
.996078 .847059 .737255 rgb
f
707.901 534.646 mo
736.536 528.659 761.003 534.901 780.01 557.535 cv
788.811 568.015 791.93 579.06 789.728 590.109 cv
786.915 588.705 786.185 584.685 781.948 584.519 cv
785.727 597.88 791.014 611.344 779.695 624.349 cv
777.998 618.913 777.249 613.905 774.282 609.772 cv
773.612 608.839 772.87 607.434 771.702 607.788 cv
770.031 608.294 770.607 609.986 770.829 611.239 cv
772.335 619.741 772.025 628.175 769.359 636.378 cv
767.276 642.787 764.049 648.463 756.656 651.248 cv
756.908 644.947 756.356 639.233 753.28 634.109 cv
752.63 633.026 752.045 631.34 750.477 631.75 cv
748.852 632.175 749.275 633.963 749.288 635.199 cv
749.336 639.857 749.468 644.498 748.502 649.107 cv
746.001 661.036 737.561 667.169 725.649 664.974 cv
716.363 663.263 708.728 658.332 702.668 651.058 cv
701.293 649.407 700.381 647.878 702.932 646.196 cv
704.968 644.855 706.103 643.844 707.795 646.878 cv
709.666 650.235 712.163 646.954 714.232 646.404 cv
717.114 645.637 715.145 643.711 714.492 642.514 cv
709.995 634.271 702.904 629.001 694.467 625.288 cv
692.702 624.511 691.484 624.713 691.237 626.716 cv
690.996 628.674 687.744 630.688 691.071 632.626 cv
693.618 634.109 696.544 634.962 698.668 637.198 cv
690.543 644.129 674.641 643.266 666.727 635.41 cv
661.631 630.351 658.389 624.332 657.647 617.021 cv
655.734 598.167 662.274 581.754 672.039 566.23 cv
673.006 564.693 673.917 563.119 674.799 561.532 cv
674.913 561.329 674.697 560.942 674.634 560.642 cv
666.976 561.683 660.401 569.925 651.842 589.436 cv
648.194 585.221 646.419 580.628 646.277 575.358 cv
646.101 568.77 647.311 562.378 650.053 556.437 cv
657.931 539.364 669.928 526.15 687.572 518.966 cv
697.703 514.841 708.02 514.217 717.342 521.521 cv
721.417 524.713 721.208 525.25 716.482 527.258 cv
713.052 528.715 709.433 530.081 707.901 534.646 cv
cp
.996078 .996078 .996078 rgb
f
690.538 313.894 mo
690.524 329.395 689.005 344.753 686.207 359.993 cv
685.998 361.134 685.81 362.289 685.754 363.445 cv
685.717 364.209 685.481 365.208 686.54 365.55 cv
687.527 365.869 688.058 365.088 688.528 364.436 cv
689.011 363.767 689.379 363.012 689.772 362.281 cv
693.309 355.705 693.308 355.705 698.826 361.081 cv
711.654 373.581 714.548 393.024 705.727 407.702 cv
704.876 409.117 703.88 410.471 702.787 411.709 cv
700.789 413.97 698.427 416.682 695.715 416.973 cv
691.911 417.38 692.598 412.81 691.311 410.547 cv
684.346 398.294 673.95 391.815 659.97 392.033 cv
655.476 392.103 654.479 390.631 653.804 386.822 cv
649.113 360.346 641.052 334.899 629.909 310.435 cv
625.565 300.897 620.726 291.601 615.198 282.698 cv
613.589 280.108 613.912 279.01 616.47 277.287 cv
638.496 262.448 642.169 226.925 623.801 207.784 cv
612.56 196.071 592.709 193.249 577.068 201.186 cv
570.763 204.386 565.206 208.592 560.891 214.231 cv
556.538 219.92 554.397 213.722 551.867 212.301 cv
548.187 210.235 552.093 208.763 553.287 207.727 cv
572.819 190.783 595.051 182.902 621.01 188.07 cv
634.545 190.764 645.625 197.791 654.914 207.79 cv
674.665 229.052 684.503 254.778 688.481 283.066 cv
689.918 293.28 690.554 303.571 690.538 313.894 cv
cp
.960784 .219608 .192157 rgb
f
291.741 722.994 mo
301.744 710.233 302.534 695.835 298.72 681.802 cv
294.595 666.631 293.138 651.169 290.433 635.848 cv
287.913 621.566 284.076 607.61 278.487 594.225 cv
272.729 580.434 264.476 568.575 250.893 561.215 cv
244.191 557.583 237.043 556.5 229.634 557.551 cv
223.641 558.4 219.382 561.703 217.474 567.483 cv
218.268 568.496 218.873 568.349 219.448 567.926 cv
228.686 561.126 237.793 560.596 247.639 566.529 cv
260.575 574.325 269.024 585.912 274.309 599.758 cv
282 619.911 286.519 640.841 288.194 662.356 cv
288.39 664.876 288.906 667.252 289.656 669.641 cv
293.504 681.884 295.092 694.391 292.442 707.039 cv
289.175 722.626 279.036 726.622 266.867 716.467 cv
253.78 705.547 246.787 690.689 243.51 674.062 cv
242.981 671.379 243.911 670.158 246.758 669.884 cv
257.844 668.815 268.912 667.571 279.986 666.379 cv
281.264 666.242 282.533 666.029 283.918 665.836 cv
283.403 663.452 281.574 663.353 280.042 663.2 cv
267.746 661.969 255.465 661.378 243.558 665.664 cv
241.847 666.28 240.835 666.193 239.785 664.689 cv
223.489 641.326 210.906 616.445 209.047 587.398 cv
208.479 578.515 210.089 569.853 214.274 561.787 cv
220.68 549.443 231.862 543.97 245.427 546.913 cv
267.001 551.594 279.604 566.351 287.919 585.542 cv
297.539 607.743 301.955 631.231 304.225 655.181 cv
304.463 657.69 304.934 660.073 305.755 662.454 cv
310.482 676.18 312.37 690.236 310.368 704.701 cv
308.916 715.189 302.511 721.643 291.741 722.994 cv
cp
.992157 .745098 .498039 rgb
f
371.167 363.817 mo
370.728 366.345 372.52 367.676 373.487 369.294 cv
377.003 375.18 379.813 381.35 381.678 387.956 cv
382.219 389.872 382.489 391.411 380.107 392.366 cv
375.008 394.41 370.399 397.393 365.644 400.561 cv
363.779 395.318 361.571 390.521 358.401 386.211 cv
356.413 383.509 354.192 381.025 351.413 379.164 cv
350.291 378.413 348.685 377.138 347.428 378.48 cv
346.273 379.712 347.856 380.902 348.509 381.94 cv
351.26 386.315 353.655 390.85 355.543 395.674 cv
357.944 401.811 359.99 407.655 354.983 413.793 cv
352.728 416.558 351.828 420.561 352.774 424.255 cv
353.878 428.567 351.092 429.166 348.234 429.501 cv
345.425 429.83 342.21 430.773 341.588 426.029 cv
340.416 417.099 335.591 409.937 329.657 403.466 cv
328.323 402.011 326.686 400.806 325.073 399.645 cv
323.901 398.801 322.347 397.575 321.119 399.041 cv
320.219 400.115 321.352 401.523 322.074 402.617 cv
325.839 408.318 329.313 414.185 331.663 420.623 cv
332.682 423.417 333.518 426.312 334.087 429.23 cv
335.043 434.13 334.225 438.641 329.643 441.498 cv
325.107 444.326 320.614 443.085 316.511 440.43 cv
311.72 437.329 307.834 433.215 304.509 428.58 cv
303.633 427.359 302.618 425.643 301.053 426.387 cv
299.424 427.161 300.337 429.07 300.734 430.402 cv
303.247 438.826 308.522 445.039 316.401 448.833 cv
326.614 453.751 335.797 450.415 340.065 439.91 cv
341.424 436.565 342.76 435.62 346.117 436.45 cv
347.815 436.869 350.21 437.054 351.474 436.173 cv
355.978 433.034 359.145 435.567 362.919 437.693 cv
372.556 443.122 389.857 438.597 395.57 429.437 cv
396.208 428.412 397.576 427.217 396.393 425.964 cv
395.421 424.934 394.207 426.004 393.219 426.5 cv
388.598 428.819 383.878 430.865 378.764 431.814 cv
376.974 432.146 375.145 432.449 373.334 432.447 cv
368.462 432.441 363.966 431.32 361.489 426.596 cv
358.925 421.706 361.078 417.444 364.131 413.756 cv
371.317 405.076 380.969 400.468 391.709 397.863 cv
393.16 397.511 394.657 397.348 396.136 397.119 cv
409.426 395.052 417.961 405.347 413.46 418.122 cv
411.111 424.789 406.445 429.721 400.936 433.925 cv
391.274 441.297 380.319 445.957 368.717 449.267 cv
366.855 449.799 364.77 449.912 363.388 451.612 cv
367.852 455.158 377.171 454.535 390.988 449.749 cv
391.611 453.563 389.391 456.129 387.153 458.457 cv
381.761 464.063 375.253 468.088 367.882 470.498 cv
351.929 475.713 335.696 477.044 319.197 473.363 cv
314.092 472.224 309.391 470.163 305.37 466.782 cv
301.499 463.528 299.188 459.501 299.714 453.588 cv
309.068 457.781 318.293 461.48 329.168 458.139 cv
327.285 455.888 325.284 455.728 323.436 455.28 cv
316.914 453.698 310.701 451.338 305.291 447.31 cv
292.191 437.555 288.367 424.344 291.744 408.852 cv
298.488 377.913 332.463 349.739 364.04 348.66 cv
385.167 347.939 402.715 362.95 404.58 383.271 cv
404.892 386.673 404.985 389.545 400.141 387.895 cv
399.531 387.688 398.753 387.55 398.172 387.741 cv
391.517 389.93 388.78 387.005 387.018 380.66 cv
385.47 375.082 381.659 370.384 377.254 366.416 cv
375.53 364.863 373.767 363.418 371.167 363.817 cv
cp
.996078 .996078 .996078 rgb
f
554.292 763.646 mo
548.283 764.026 542.256 764.5 536.852 760.412 cv
539.952 756.832 544.925 755.337 546.484 750.567 cv
544.109 749.284 542.269 750.612 540.515 751.234 cv
528.045 755.654 515.273 759.147 502.071 759.53 cv
486.739 759.975 473.122 755.212 461.808 744.052 cv
450.435 732.834 444.258 718.639 437.378 704.763 cv
436.886 703.77 436.783 702.856 437.628 702.054 cv
438.475 701.25 439.322 701.707 440.337 701.927 cv
463.556 706.949 485.693 703.826 506.748 692.88 cv
518.787 686.621 528.305 677.423 535.296 666.036 cv
539.272 659.558 552.846 657.843 558.823 663.28 cv
568.73 672.292 573.92 683.573 576.761 696.547 cv
579.104 707.25 579.726 717.987 578.78 728.655 cv
577.608 741.878 573.991 754.412 560.813 761.341 cv
558.511 761.744 556.063 761.738 554.292 763.646 cv
cp
.960784 .219608 .192157 rgb
f
584.619 480.891 mo
587.474 481.067 590.923 481.214 594.311 482.261 cv
606.721 486.099 619.256 489.558 631.571 493.676 cv
640.081 496.522 648.257 500.352 656.676 503.49 cv
663.044 505.863 669.406 508.209 675.489 511.259 cv
676.309 511.67 677.556 511.315 677.809 512.666 cv
678.117 514.312 676.71 514.395 675.783 515.002 cv
658.504 526.329 645.689 541.045 640.23 561.463 cv
638.184 569.114 638.188 568.714 630.873 564.819 cv
617.161 557.518 602.796 551.698 588.163 546.422 cv
579.456 543.283 570.654 540.545 561.84 537.791 cv
560.189 537.275 558.117 536.723 558.1 539.222 cv
558.083 541.674 555.136 544.508 558.457 546.605 cv
561.288 548.393 564.568 549.196 567.892 549.555 cv
570.334 549.819 570.76 550.636 569.342 552.715 cv
566.295 557.185 562.481 560.185 557.159 561.99 cv
550.305 564.315 543.79 567.683 537.23 570.812 cv
534.867 571.939 534.061 571.585 532.985 569.106 cv
528.761 559.376 527.074 548.814 522.746 539.085 cv
521.227 535.672 524.988 532.408 526.848 529.473 cv
534.017 518.168 541.696 507.052 551.573 498.038 cv
560.728 489.681 570.208 480.925 584.619 480.891 cv
cp
0 .47451 .741177 rgb
f
547.086 652.242 mo
555.199 640.904 574.435 639.99 584.962 650.124 cv
593.651 658.487 598.802 669.219 603.825 679.858 cv
612.974 699.242 621.727 718.837 626.124 739.999 cv
629.386 755.701 629.806 771.389 623.96 786.602 cv
617.191 804.219 604.414 814.56 585.287 815.374 cv
570.534 816.002 559.056 809.228 550.792 797.106 cv
546.641 791.018 543.59 784.383 542.143 777.106 cv
541.726 775.005 541.072 772.456 544.789 772.884 cv
569.496 775.73 583.776 755.583 586.424 736.104 cv
590.046 709.452 585.439 684.477 568.316 662.813 cv
563.014 656.104 555.899 652.557 547.086 652.242 cv
cp
.607843 .372549 .247059 rgb
f
232.388 540.163 mo
240.565 530.798 250.073 525.767 261.218 524.004 cv
281.11 520.856 298.966 525.09 313.256 540.02 cv
320.722 547.819 325.328 557.499 329.155 567.485 cv
337.057 588.108 341.422 609.534 343.345 631.496 cv
344.886 649.099 345.278 666.674 342.221 684.177 cv
340.082 696.427 334.667 706.144 322.023 710.242 cv
316.76 711.948 316.581 711.73 317.174 706.221 cv
318.873 690.432 317.173 675.065 311.305 660.232 cv
308.87 654.075 309.385 647.46 308.606 641.07 cv
306.2 621.336 302.162 602.007 294.29 583.723 cv
285.304 562.849 271.747 546.511 248.364 540.889 cv
243.448 539.707 238.447 540.449 232.388 540.163 cv
cp
f
502.798 215.512 mo
516.946 222.859 530.902 230.373 542.643 241.302 cv
554.377 252.224 564.034 264.783 572.52 278.514 cv
561.458 273.857 550.267 269.897 538.873 266.518 cv
537.094 265.99 536.987 264.428 536.44 263.059 cv
533.597 255.953 527.53 253.76 520.688 257.358 cv
517.39 259.092 515.04 261.885 512.487 264.528 cv
505.893 271.355 499.375 278.226 493.82 285.948 cv
492.725 287.469 491.746 288.687 490.129 286.431 cv
478.091 269.632 467.424 252.192 467.187 230.64 cv
466.979 211.772 480.774 199.725 499.593 201.461 cv
513.679 202.76 526.317 207.647 538.101 215.339 cv
579.532 242.385 607.123 280.547 626.607 325.225 cv
629.594 332.074 631.993 339.178 634.718 346.142 cv
635.773 348.836 635.741 350.335 632.153 349.282 cv
620.015 345.718 613.177 336.412 607.092 326.285 cv
606.163 324.739 607.347 323.393 607.886 322.063 cv
609.846 317.228 610.951 312.249 610.922 307.01 cv
610.856 294.936 604.43 287.456 592.441 286.682 cv
588.296 286.415 586.529 284.735 584.61 281.458 cv
571.683 259.384 555.496 240.181 534.135 225.729 cv
526.205 220.364 517.528 216.657 508.119 214.744 cv
506.518 214.418 504.904 213.965 502.798 215.512 cv
cp
.960784 .219608 .192157 rgb
f
455.142 538.358 mo
455.427 536.389 454.59 534.026 455.825 531.814 cv
456.411 530.764 457.194 530.325 458.244 530.681 cv
459.199 531.005 459.07 531.896 458.994 532.764 cv
457.414 550.731 473.313 556.736 485.426 552.525 cv
499.927 547.485 509.626 533.579 505.29 517.513 cv
503.76 511.845 500.091 507.933 494.657 506.176 cv
490.868 504.951 486.835 503.481 482.696 505.388 cv
481.823 505.79 480.659 506.1 480.172 504.825 cv
479.655 503.471 480.421 502.583 481.675 502.169 cv
491.1 499.06 499.145 492.631 510.042 492.864 cv
522.381 493.128 533.996 488.682 544.746 482.72 cv
549.82 479.905 555.259 482.282 560.264 480.455 cv
560.617 480.326 561.521 480.959 561.767 481.443 cv
562.206 482.306 561.617 482.866 560.825 483.373 cv
544.413 493.873 531.92 508.285 520.786 523.964 cv
515.993 530.714 512.201 538.204 507.157 544.741 cv
499.279 554.952 487.956 564.441 473.162 561.99 cv
462.703 560.258 455.655 552.844 455.15 542.154 cv
455.095 540.992 455.142 539.826 455.142 538.358 cv
cp
f
428.939 453.907 mo
426.141 455.023 423.391 456.314 420.521 457.231 cv
410.116 460.556 399.744 464.429 390.85 470.551 cv
379.831 478.136 369.607 487.066 364.082 499.947 cv
363.952 500.252 363.632 500.558 363.662 500.836 cv
364.497 508.544 359.752 510.345 353.48 510.374 cv
343.628 510.418 333.665 512.276 324.398 506.523 cv
316.499 501.62 311.341 495.536 311.388 485.82 cv
311.417 479.719 311.251 479.933 316.99 481.178 cv
335.821 485.263 354.651 485.222 372.312 477.067 cv
381.707 472.729 391.461 467.609 396.323 457.315 cv
397.759 454.275 400.253 455.098 402.582 454.544 cv
410.396 452.685 418.453 453.976 426.276 452.451 cv
427.108 452.289 428.321 452.105 428.939 453.907 cv
cp
0 .470588 .741177 rgb
f
565.673 222.71 mo
562.568 221.188 563.918 219.531 565.406 217.677 cv
576.161 204.278 594.77 198.868 609.17 205.008 cv
623.99 211.327 631.904 226.328 629.401 244.373 cv
627.833 255.685 623.725 265.824 613.64 272.549 cv
611.275 274.126 609.835 274.376 608.165 271.542 cv
605.731 267.411 602.787 263.581 600.061 259.623 cv
601.691 256.941 604.16 258.075 606.351 258.342 cv
609.72 258.754 611.15 257.472 611.421 254.015 cv
612.302 242.772 612.971 231.511 614.096 220.286 cv
614.486 216.39 613.609 215.652 609.967 216.999 cv
604.824 218.9 599.848 221.217 594.824 223.413 cv
590.226 225.423 588.537 224.468 587.685 219.487 cv
587.375 217.677 587.458 215.842 587.43 214.015 cv
587.402 212.198 587.449 210.371 586.741 208.298 cv
581.383 212.113 576.365 216.059 571.397 220.065 cv
569.686 221.445 567.965 222.656 565.673 222.71 cv
cp
.996078 .996078 .996078 rgb
f
627.35 798.873 mo
639.537 772.345 636.297 746.587 627.674 720.913 cv
620.943 700.872 612.208 681.679 602.419 662.959 cv
599.176 656.757 594.809 651.353 589.639 645.782 cv
597.374 643.706 603.294 645.741 608.058 650.984 cv
616.254 660.003 619.797 671.269 622.769 682.753 cv
623.068 683.909 623.239 685.325 621.893 685.798 cv
617.418 687.368 619.439 689.611 620.986 692.054 cv
633.997 712.598 642.608 734.701 644.021 759.19 cv
644.629 769.729 643.723 780.148 638.348 789.625 cv
636.007 793.752 632.898 797.102 627.35 798.873 cv
cp
.992157 .745098 .498039 rgb
f
598.689 409.585 mo
598.419 406.571 600.007 403.835 602.021 401.357 cv
603.341 399.732 603.205 398.971 601.574 397.445 cv
596.179 392.397 597.944 385.541 605.123 383.873 cv
610.923 382.525 616.881 381.845 622.777 380.913 cv
628.924 379.94 634.721 377.949 639.907 374.527 cv
642.083 373.092 643.022 373.255 643.534 375.808 cv
644.545 380.85 645.647 385.874 646.641 390.92 cv
646.966 392.567 647.167 394.26 645.09 395.112 cv
634.817 399.325 627.698 407.728 619.381 414.537 cv
616.908 416.562 614.284 418.312 611.222 419.215 cv
604.369 421.239 598.706 417.016 598.689 409.585 cv
cp
.607843 .372549 .247059 rgb
f
450.912 455.46 mo
455.138 455.017 457.41 458.426 460.304 460.393 cv
462.217 461.694 460.394 462.377 459.159 462.971 cv
446.216 469.195 435.418 478.467 424.382 487.418 cv
416.536 493.781 410.441 502.04 402.015 507.773 cv
397.098 511.119 392.212 514.34 386.28 515.77 cv
375.709 518.319 367.918 510.849 370.432 500.413 cv
370.675 499.402 370.814 498.384 371.892 498.071 cv
372.831 497.798 373.33 498.533 373.769 499.301 cv
378.275 507.188 379.602 507.551 389.469 506.605 cv
401.389 505.462 419.233 489.879 421.049 479.393 cv
421.804 475.035 421.996 471.203 418.907 467.763 cv
417.75 466.473 417.068 465.443 419.289 464.412 cv
429.363 459.735 439.926 456.858 450.912 455.46 cv
cp
.960784 .219608 .192157 rgb
f
501.168 524.816 mo
500.9 538.324 487.191 550.234 474.727 547.787 cv
468.541 546.573 464.12 541.806 463.377 535.551 cv
461.92 523.284 474.871 509.308 487.155 509.891 cv
495.704 510.296 501.337 516.295 501.168 524.816 cv
cp
.996078 .945098 .184314 rgb
f
565.673 222.71 mo
572.843 217.374 579.506 211.36 587.458 206.308 cv
589.688 212.078 588.004 218.233 590.06 223.898 cv
597.405 220.813 604.626 217.905 611.734 214.742 cv
615.251 213.177 615.963 214.224 615.659 217.713 cv
614.536 230.614 613.546 243.527 612.621 256.444 cv
612.441 258.952 611.585 259.918 608.967 259.777 cv
606.012 259.619 603.041 258.751 600.062 259.627 cv
599.18 258.362 598.298 257.1 597.417 255.839 cv
596.397 253.303 597.502 250.938 598.038 248.541 cv
599.516 241.933 601.129 235.353 602.417 228.226 cv
597.381 229.922 593.097 232.042 588.655 233.756 cv
584.243 235.459 583.078 234.671 582.516 229.923 cv
582.223 227.455 581.853 225.009 581.312 222.468 cv
577.865 223.898 576.665 228.332 572.591 228.655 cv
570.285 226.673 567.979 224.691 565.673 222.71 cv
cp
.960784 .219608 .192157 rgb
f
526.473 432.673 mo
523.856 443.665 520.212 452.796 511.587 458.915 cv
504.402 464.013 492.253 461.131 487.706 453.631 cv
484.485 448.318 488.625 439.924 494.707 439.431 cv
505.182 438.581 515.442 436.663 526.473 432.673 cv
cp
f
385.489 501.583 mo
379.369 501.583 376.801 498.096 378.521 492.121 cv
381.535 481.646 397.479 469.674 408.394 469.688 cv
414.866 469.697 417.422 473.191 415.5 479.402 cv
412.17 490.17 396.728 501.583 385.489 501.583 cv
cp
.992157 .941177 .184314 rgb
f
572.591 228.655 mo
575.752 225.762 578.913 222.869 582.485 219.601 cv
582.904 223.186 583.552 226.805 583.683 230.441 cv
583.793 233.51 584.678 234.117 587.496 232.875 cv
592.72 230.572 598.06 228.531 604.143 226.06 cv
602.278 236.714 599.943 246.296 597.419 255.839 cv
589.33 246.605 581.551 237.091 572.591 228.655 cv
cp
.996078 .992157 .992157 rgb
f
527.476 419.981 mo
528.23 423.41 527.86 426.038 523.928 427.426 cv
511.407 431.849 498.592 434.231 485.283 433.601 cv
482.578 433.473 479.962 432.945 477.999 430.871 cv
477.102 429.923 475.863 428.809 476.295 427.466 cv
476.837 425.778 478.571 426.671 479.736 426.673 cv
492.745 426.694 505.668 425.925 518.331 422.682 cv
521.38 421.901 524.374 420.904 527.476 419.981 cv
cp
.984314 .984314 .984314 rgb
f
487.134 493.233 mo
485.622 492.774 483.918 492.322 482.342 491.288 cv
473.236 485.319 463.363 480.917 453.152 477.221 cv
452.117 476.846 450.655 476.691 450.533 475.298 cv
450.391 473.67 452.052 473.888 452.994 473.381 cv
456.021 471.75 459.081 470.175 462.053 468.449 cv
464.187 467.209 465.504 467.431 466.854 469.738 cv
472.011 478.555 479.761 484.5 488.807 488.923 cv
490.012 489.512 492.069 489.219 491.777 491.492 cv
491.685 492.208 488.798 493.282 487.134 493.233 cv
cp
0 .470588 .737255 rgb
f
498.913 310.796 mo
497.399 311.141 497.88 315.049 495.072 313.009 cv
492.812 311.367 494.552 309.766 495.381 308.316 cv
498.858 302.24 503.047 296.731 509.082 292.976 cv
516.588 288.306 521.253 290.794 521.795 299.596 cv
520.344 301.359 518.851 299.97 517.419 299.597 cv
515.494 299.097 513.604 299.016 511.698 299.57 cv
508.144 300.781 506.255 303.993 503.625 306.309 cv
501.9 307.641 501.039 309.886 498.913 310.796 cv
cp
.968627 .968627 .968627 rgb
f
600.468 473.858 mo
604.404 471.686 607.265 470.035 610.194 468.516 cv
612.258 467.445 621.85 471.611 622.545 473.784 cv
623.491 476.744 621.101 479.601 618.055 478.828 cv
612.488 477.416 606.993 475.721 600.468 473.858 cv
cp
.596078 .364706 .243137 rgb
f
518.727 308.759 mo
513.577 305.146 510.654 305.665 505.675 311.203 cv
504.572 312.43 503.777 313.934 502.673 315.158 cv
501.837 316.084 501.956 318.686 499.729 317.43 cv
497.971 316.439 498.791 314.889 499.614 313.541 cv
499.869 313.124 499.987 312.623 500.167 312.161 cv
500.467 309.669 501.847 307.81 503.653 306.195 cv
506.269 303.941 508.05 300.671 511.662 299.624 cv
518.674 298 520.672 300.587 518.727 308.759 cv
cp
.0313726 .760784 .882353 rgb
f
492.989 419.667 mo
494.174 419.089 495.803 418.827 496.472 417.884 cv
501.248 411.145 505.834 414.699 511.38 418.548 cv
504.788 419.735 499.002 420.931 492.982 420.589 cv
492.646 420.381 492.536 420.176 492.649 419.971 cv
492.762 419.769 492.875 419.667 492.989 419.667 cv
cp
.933333 .792157 .694118 rgb
f
514.748 313.649 mo
514.219 315.766 513.378 317.865 510.842 318.079 cv
508.761 318.256 508.552 316.45 508.76 314.938 cv
509.073 312.667 510.139 310.71 512.731 310.669 cv
514.395 310.643 514.627 312.202 514.748 313.649 cv
cp
.901961 .898039 .898039 rgb
f
518.727 308.759 mo
518.82 307.774 518.967 306.79 518.997 305.803 cv
519.163 300.313 517.493 299.267 510.944 300.727 cv
510.328 300.08 510.348 299.418 510.895 298.742 cv
514.797 295.592 518.162 299.311 521.795 299.596 cv
520.772 302.651 519.75 305.705 518.727 308.759 cv
cp
.133333 .117647 .129412 rgb
f
492.989 419.667 mo
493.013 419.974 493.01 420.282 492.982 420.589 cv
486.965 421.772 480.942 422.04 474.909 420.699 cv
477.499 419.743 480.404 421.42 482.909 419.745 cv
486.269 419.719 489.629 419.693 492.989 419.667 cv
cp
.713726 .596078 .521569 rgb
f
494.733 297.498 mo
494.847 298.065 494.962 298.631 495.076 299.197 cv
494.829 302.094 492.827 303.992 491.159 306.081 cv
490.427 305.937 490.014 305.479 489.858 304.765 cv
491.455 302.324 492.318 299.391 494.733 297.498 cv
cp
.803922 .678431 .592157 rgb
f
504.089 306.896 mo
502.782 308.651 501.475 310.406 500.167 312.161 cv
499.749 311.706 499.331 311.251 498.913 310.796 cv
499.615 308.593 501.024 306.908 502.797 305.488 cv
503.487 305.719 503.951 306.158 504.089 306.896 cv
cp
.113725 .109804 .12549 rgb
f
554.292 763.646 mo
555.302 759.584 558.189 760.834 560.813 761.341 cv
558.858 762.727 556.652 763.405 554.292 763.646 cv
cp
.137255 .364706 .568628 rgb
f
489.858 304.765 mo
490.292 305.204 490.726 305.642 491.159 306.081 cv
490.778 307.042 490.461 308.843 489.314 308.154 cv
487.839 307.27 488.671 305.764 489.858 304.765 cv
cp
.980392 .835294 .72549 rgb
f
465.014 593.192 mo
465.687 593.623 466.754 594.3 466.044 594.956 cv
465.183 595.752 463.844 595.759 463.39 594.111 cv
463.934 593.804 464.474 593.498 465.014 593.192 cv
cp
.584314 .321569 .462745 rgb
f
390.021 523.299 mo
388.698 525.229 387.026 524.499 385.374 523.911 cv
386.925 523.709 388.473 523.504 390.021 523.299 cv
cp
.360784 .298039 .458824 rgb
f
529.88 354.382 mo
529.854 337.576 542.329 318.704 557.436 312.46 cv
562.225 310.481 567.106 310.099 572.085 311.028 cv
580.157 312.533 585.402 318.628 585.655 327.195 cv
586.044 340.41 579.934 351.194 572.063 361.126 cv
568.756 365.298 564.745 368.895 560.118 371.585 cv
553.553 375.403 546.59 377.657 539.377 373.456 cv
532.166 369.254 529.806 362.356 529.88 354.382 cv
cp
.0470588 .00392157 .00784314 rgb
f
668.703 433.093 mo
661.595 427.83 654.878 425.283 647.036 428.557 cv
651.994 435.888 652.23 440.252 648.047 445.26 cv
645.83 443.575 646.95 440.923 646.204 438.807 cv
643.955 432.431 640.143 431.203 635.283 435.717 cv
632.982 437.854 630.985 440.318 628.821 442.605 cv
628.136 443.328 627.301 444.175 626.256 443.748 cv
625.071 443.264 625.456 442.025 625.686 441.145 cv
627.982 432.36 633.385 426.051 641.731 422.715 cv
649.434 419.636 657.271 419.086 664.45 424.483 cv
666.871 426.302 668.81 428.459 668.703 433.093 cv
cp
.054902 .0117647 .0117647 rgb
f
731.637 563.265 mo
731.586 566.88 729.172 568.749 725.726 567.838 cv
721.159 566.632 715.28 559.772 714.796 555.138 cv
714.663 553.87 714.7 552.615 716.244 552.488 cv
721.646 552.041 731.699 557.075 731.637 563.265 cv
cp
.0627451 .0235294 .0235294 rgb
f
701.464 571.886 mo
701.88 569.484 700.967 565.323 704.008 564.425 cv
706.979 563.547 708.847 567.195 710.516 569.616 cv
712.335 572.255 713.375 575.178 712.977 578.457 cv
712.696 580.771 711.601 582.529 709.271 583.211 cv
706.812 583.931 705.17 582.614 703.843 580.758 cv
702.045 578.242 701.475 575.365 701.464 571.886 cv
cp
.0627451 .0196078 .0196078 rgb
f
732.333 542.157 mo
736.27 542.095 739.601 542.883 742.304 545.391 cv
743.84 546.817 744.762 548.534 743.858 550.707 cv
742.931 552.936 741.025 553.288 738.927 553.151 cv
735.45 552.926 732.645 551.191 730.112 548.994 cv
728.505 547.6 726.164 545.977 726.904 543.821 cv
727.714 541.463 730.676 542.589 732.333 542.157 cv
cp
.0705882 .027451 .0313726 rgb
f
477.192 539.016 mo
486.28 535.662 491.814 529.377 494.152 519.991 cv
497.051 525.902 495.097 530.666 491.394 534.691 cv
487.686 538.72 482.984 540.783 477.192 539.016 cv
cp
.0980392 .054902 .0117647 rgb
f
388.53 495.024 mo
396.961 491.853 403.677 487.721 407.082 478.448 cv
409.115 488.514 399.123 497.007 388.53 495.024 cv
cp
.117647 .0745098 .0117647 rgb
f
504.089 306.896 mo
503.658 306.427 503.227 305.958 502.797 305.489 cv
505.068 302.726 507.103 299.68 510.895 298.742 cv
510.911 299.404 510.927 300.066 510.944 300.727 cv
508.659 302.783 506.374 304.84 504.089 306.896 cv
cp
.0784314 .0941177 .105882 rgb
f
544.712 367.004 mo
545.118 367.968 545.524 368.933 545.945 369.932 cv
539.97 369.168 536.15 364.985 535.179 358.219 cv
532.989 342.967 545.612 321.962 560.182 316.94 cv
572.385 312.735 581.842 319.378 580.54 329.257 cv
579.265 329.418 578.393 328.765 577.653 327.834 cv
576.308 327.232 574.86 326.943 573.472 326.463 cv
571.955 325.943 570.448 326.025 568.946 326.521 cv
566.961 326.976 564.918 327.287 563.444 328.916 cv
563.093 329.223 562.708 329.478 562.303 329.704 cv
552.802 335.67 547.576 344.602 544.657 355.133 cv
543.88 358.14 544.022 361.158 544.54 364.181 cv
544.779 365.112 544.292 366.084 544.712 367.004 cv
cp
.992157 .992157 .992157 rgb
f
576.663 329.005 mo
578.968 331.82 579.181 335.006 578.279 338.882 cv
575.578 336.645 572.862 334.877 569.323 335.766 cv
564.718 336.923 561.436 339.942 558.603 343.474 cv
551.39 352.465 550.592 361.226 556.304 367.504 cv
552.059 371.34 548.842 369.269 545.872 365.724 cv
545.483 365.326 545.182 364.869 544.968 364.356 cv
544.254 361.414 544.481 358.444 544.717 355.477 cv
546.677 343.791 553.656 335.499 562.85 328.708 cv
562.749 328.777 li
568.707 325.589 572.797 325.656 576.663 329.005 cv
cp
.0313726 .792157 .913726 rgb
f
545.747 364.688 mo
545.788 365.033 545.83 365.378 545.872 365.724 cv
545.486 366.151 545.099 366.577 544.713 367.004 cv
543.691 366.642 543.68 365.824 543.788 364.953 cv
543.151 361.486 543.115 358.02 543.804 354.555 cv
545.524 343.723 551.991 335.877 559.99 329.048 cv
560.597 328.53 561.88 328.803 562.85 328.708 cv
561.153 332.442 557.417 334.283 554.882 337.266 cv
550.485 342.438 547.316 348.148 545.794 354.764 cv
545.047 358.069 545.122 361.377 545.747 364.688 cv
cp
.0823529 .0901961 .105882 rgb
f
572.66 344.7 mo
572.029 347.422 570.743 349.678 567.576 349.844 cv
565.306 349.963 564.267 348.442 564.452 346.32 cv
564.712 343.352 566.327 341.268 569.394 341.07 cv
571.565 340.93 572.544 342.532 572.66 344.7 cv
cp
.929412 .92549 .92549 rgb
f
576.663 329.004 mo
572.063 326.588 567.394 328.401 562.749 328.777 cv
563.304 325.486 565.768 325.554 568.249 325.652 cv
570.204 325.215 572.16 325.073 574.115 325.657 cv
575.603 325.881 577.147 326.014 577.653 327.834 cv
577.323 328.224 576.993 328.614 576.663 329.004 cv
cp
.156863 .164706 .180392 rgb
f
543.804 354.555 mo
543.799 358.021 543.793 361.487 543.788 364.953 cv
542.428 361.485 542.512 358.019 543.804 354.555 cv
cp
.0980392 .0980392 .109804 rgb
f
574.115 325.657 mo
572.161 325.655 570.206 325.653 568.25 325.652 cv
570.205 324.694 572.16 324.792 574.115 325.657 cv
cp
.180392 .239216 .254902 rgb
f
545.747 364.688 mo
544.352 361.373 544.28 358.065 545.794 354.764 cv
545.778 358.072 545.762 361.38 545.747 364.688 cv
cp
.0980392 .0980392 .109804 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 27.0.0%%For: (SANGPENA) ()%%Title: (File-01.eps)%%CreationDate: 09/11/22 09.16%%Canvassize: 16383%AI9_DataStream%Gb"-6CQfd\E@(Afnitn_1a?Y`V2TU$GAPO(m_,IU(b*m(C.<'GYr2js2).E"D.n$,\\EUl*;>8J]QFUAQSap0,f)rqjYIr!m`4-Z%r9S'?YC:`lp%+O-gqEQ6IsG-,?at5a&,a1bq:X*ng[j;equ5u\S6eAWiS.uuhu)p8X/F:Xs8MfY`N.VJs71.,o95Mrh`U^(Ie2Xi%jg,aV?N&(+m_tBfs1J9rp/gLZqr]W(h7n:7m?9JaI'Z-T^>bu=pUsfVQfHs7Q`kl2X[rH\m*-Jp"h?@Zq>7q;RidEp_X[5Iq#.O;%Sq$e&ooh>\?bQAE^Q:6iJ!K]@IsC\C':$bCIX,mQr*4\r3'I/:-U57gUCTJ'B?<Bqr8JiCpqI<Rr=4GJGu9mJ3$,+@qNIsId#Th"%rjSHln6bt"5D2Db@t+0a'-?-*pN\p?,es"q^3er?5K?F&oj5E0mb9+ms7uPII=tu-n_(D/]m0,1)*9RTlV0EfU&UO1Y]HX^Gb/^@%n3q3i:tLYQ7fE;:jj/C'rp4!@H2)=(Sp^M'[J&tSlSj<<rr5P+N`T'QmsfTPm.K8LI/ZTA0LO?s@t+%7lXqm3luD^sM^RlSl*L3c%HGUbr]`.'H)]=pE?Mo=kq5(`nrT\<Nq"E<8rqm2"cfkO\qq\TFIsgoRpl8^WjDRBUmEfaFF!Vp`c!#a\ns*uR[$5kaB!hKe[<?cL%$[:ls.+2hEPEG[qf?_3WrplE'q84"O>GurB2m8j']a`ZS%orXj+*(;X^TIOd2jTMSoB+_!qZ>rq3rW_0qWlCErZI7b^\ms'l<Enr%p[Ze(N;8eq*F?DT7XmArc/6V(5CBB$^n8C<gK/Fho9ZuMo!eNkrT\S[IZRq8c0JFqI.s\.s7C(%q<ce;rpe\#Ilr)Sk1+83c*%Ym%rQ"pi5Q'O1F&'cn+(%6X.Q<H]a#Q(SSq$Km\)'kDme*o=r_fo[O8ZgXIC79u;&J'L.QtQEn_&h%hbCT1o7$ObJ,&WEs7kluoC'F7%pR3DCHh.$Xo;=75rSc)[^NoN*GC,4-H[WDNrPSAZ3rJNuWu'N-GJ>'bBjs\Sra3Z$I`Dh&rq<2dj%n9uA1(VG8LCTHo,%8)EQtoS%a=mS,4QH4t`J`p:]RKG-T:S9\p6[AF+4$F+pHICYqX-G5jj/GCZg>JK[VgEhK]uS,4<>!qYFg_FH/r+H4m*@Uo&S'E5Q1HS5CWW-%:Qpfbna,AhhiGD8O'@P@>2EIpmr6#X:L651IIXn`At(mpFh?HD-U)nKpM[YghX-r,^Q_1[n:r*W^Nm81n#LBAK/n,M_k3NJpPaEu%TD=7^_t94q!jeKuiet8s!%o>\?;A98S(CHMIP,EZ01@\?Z7a&\E0MH:iR=A]HhiT]\l`"AE4Gdkq1hE*#[a&3ndh'k.=Q:-cdfR`%s/(<2nrK;Uob"r1CTC)jr9UJrf,o5,p?Y/]*)!G@Id!+?qW.so>`>aP;[%B-"no!X]Z].*+7gQ<;nPTrfXLVi0>VkB4,kE:8(R@L%p:DDQJ+qsU?QFUmqT6p!T#i[u&Bk5m?%[&urXi%O&cZMr3/e:DZc:oW2KJI6@C3+QF`P'QP5i,Kk1_.O]FD@Lf#b2*ZQ,ldf5;Q,%Ls=[PM_-dC>_@TPY,?SIjVP>S>\!HWQ2>TdUQrET>[e#Yja0!_Enk6:6`q;V;N<bJ08I_d?IQS-kB)mIR-s$s-`*8h*%=<:I.BpN%nQq5s4N\g#)I&FR`/NTo+GZ"n>f1tLbAdm0E#7SF646eR'!cmD:(+n]?Ph9>XT"g3=cS\1b&JfLXd:^5eJC78MTO&4IIR$ljB-E3%HZte9,fcI_et'0=?)7LY*8)VuU6CAjI-9(-3R6q^NhcNc>ArV:4K9Bh7p;Z.6(bCZ5LM.S;JmJ'qCc3"pN&Q7mDn$Grn;AShm88)%q9Mq;s!YqTh4=JW]k_i?O`s6SFI1DSGLC_LM`\T<]c:ZFNcO'")%a8W`X>70>gUJGA2n8V]c8C;2FfcH*_(pD"qDU]*?@9;mX$rh%15([.gi41e<r=BS7oQPsh'QW(7MWpC?"IiCb=V[Sjo=f1s)7"4o!cdA(]")_nU_o-__.T,b$*AD^W?13bFrG8."C^TmUJ'h)3%e=%,=Z2cP8KS17ch=C9Dk(&a_k6GnXm;J:qTI>+AM^llrG!'=[q/:43K#Y1-1osdlFKbW0=U@0q;b_q'AN+U)*4W3NXaO'WEja:?a=%%(?C++1r(j'9,e&&W)[$k,X]u$/C)ZM\'d/.dSW:kY)!9A[JNC=3(Sg+)$%_3e*XgW%5.g[aPaUoTlcS4kDhjjAeGPLAH3^2-Q2IB%'VtQq8aap>olPPl4.T.@Mp.f4:-A*XLpFQS+3u;poZt3E)D;aF]g*S^,Gs;S9ulMt4H>VIb:4NbJ\hr6^qg#.16@ZHP^F^r(WP.1%N&Q^-'1X25]2GJ6iWkLnKY`5%]>sulT3H#`3tCQip#8-30_M7)"GkR!(fpn8Qa)T9GLfkDR6C:\Z?<^!S64`FqM%p#F5g3TT9Jf*%;\RXPN#Bi_`V^4s]'1V+a#6C;h_$Z9EJ66Y*9ZA\nK*QW)I@NS1k(Z6=Vm_5j9+m<dL!GAKEaZ7.9G^hd=bqjD@nJDDF)<6'B+kG%HgjX3(SQK4HUef#>'G(RbgUnsl92nMo0k"&oE8?`RN(,o/WQ18ZZ*#p5c@DUH5Wn'Z1oP2Q-2GSpha\T[+W=,M!mBGL>Gja3mM'U%@a*uQH&_W*TMIQ)d6i--!_;O.1WC0Z`'SkQSIaNW*J2>kg-XTs*Rgs,m^U-)W/8gt<ZQ/NOHVu>E7Eu(lMA#[7p[9aoB6Q%I:N1P%K5prE].muoE/[.K`o0#mqcK@YUQ%ceMfetr#/[Lt&$n&bK16_6?3\_*"6h?]j=!C]<h<IUX0XX/PYm7EB'">jA`V,POE-[(l'f\Y%_f=KlbEK/BgiC@^\mh%\Z-(h=^,VR8JV@RA0X*s8(MP7u&%BsqPm]sB`XQ/eqLW[N0#9l)"X%je#h"\BWh3Jp8:;"S?ZKJ-l/?<!%SB^-)21m.&i!;(BSLhjd2GQ#&mq?Q;ZSj"E%B$YS1/*ZcR2I\6*:4-A/C^\uZm_)?'@*\8P>#oI&.RrqFN\4)X%dg%2Vk(]FG.lf%VE8mhma,g^/#N26hM5_78),=LOf.tGhP]7hmj'ER$l_2o'SHl<"\<Q"\-;qh^>N$W'r_EZ=RdJVq>2#uJ+rNqPAd(AIJCfMBML;B%YDVGm8WA#%0>&k58T[mp.=Mt*lX]7@U8G0i+%>X-q2[;(RLH@J0EJHf_`Ja!B/'LYN7B2Kp3)QAI%i(JWE>ihmpo-hSJeCQ)bgD!%7+$feL63si;"<@=l(._*\r<Ic(Y6=!c3nAo:6R-6Y0<i+W6%e%PFWLgB$M/l<G/>Y<2HQl;mfY\Enf)Js)Y*Y@bRu#]^7]5ESh;.%bL>FQ*t-]fr=Q1RnW>'`O6'7n*Vn*X4FSiBri1G"Z+S-!m9Pb6h+i=kj7<_`S1m&>-TWO"H0AGm/:(hAT/;A'V4-I?(*MfR:M6Cu%RiH"m\q`V<V(>Q?gb(@d:Sq(mSVog%Nolh!CbXHjNO1cNB4pKGeM)h@VGbUar`Y'Pj_/dZA[C&nGJh^(.na`\@:;mm(!ZTo7\X'f%VMNI1l5!DS$Yr[5Z^oX-[TQkEAp*&lNoMs3Y&9*\6$mDghLV.1RU>\OG(d=En`!(M%dLpM<8t<\]^o"0A!qgkVk^s(=FTOgpH@C+%L@>%QH1t8;e(jGp)J%8<<JEEE;a:q4Z:=8\5K(VVrK5#HXto>2()S@W-9<lQ'?u\4Ws$_?UVdo4lqR=Dr&SI3?2*G%eKA.QbZa(n%X5D<P[I](f#t'V!4A_>p&BpU(gc`'=92qCZJ[8bhRoUF+gHsFg-Df.f0m[-'>\]RqL05QGRD#'":cMO:$Vdt?LD"q2Qk\"i79@2$%G[,t$UlP>Fj7<`[%;trZNflFb'V5gt+s!UUje_8.<pY/unFo&u/_"=YFBKiMIh[6#opHVE#)fEXUE,+ijNZ#nWn1VoFi.mdB$6q%%0JAHMFplf;Y`CL%'t_&TFVG7G/Moq)irb^\-Qj->d;%$BKl1!;p-`1Ue-S1;qd>,d$W026G,hLji),b='[Y>oWcSs-;a&Pd7%_uB%0>"qR^M7ebkWCHhTJf#KG(aIgB((gd)QhJ\L&ZY6Eh'<T>K#Rei>2lf]ZUoEj]LC,1ubn2F=cm0l@56A;M3c^hk0?*AAp(nks!n7%oDSJ14l0]N,aicBFFQ?na8gUU:\!KP>Fpk!"=u@F8k5Ne0P,llS-`!nSch"ZBG/+V_NG6uSf#(;5Z6Q3"!`"\Uu@EY!$^;(L7Ecb%ifGr/BisH5fqNFr#:(%I<)?J$8HgFUR_5t7BI,nMLf-U7;1kSNYtAZ6d2j;k&[jfBRVJ(oNC[b,N!UU_=j/],rSqlKJWWZ,Yu:c?%8>dMW2KbC_X-RWWeT&rR>=PPK>JPACicKk0EV[Xla0NZupP6A1j>apI3%YR2^>!XTQXb<MdiLfLXrPWsTDG2@LA1G7299D>nl^VC%V9[E%r#:+9+J1O4B+=Eu4$Wc9Db(>cZZtkV4Pj:uFFYR!Y9lZWF4/-O:+eKTbS6JAPdhH2VcWlf0Iu)1h!XV-"XQ8`+>gij`p+)E%OP5!5h)P4O#k97R/LTK1YO%,j2b6+Sr-B$(/+XLB^ToBP.0')<,K'6CHJ%(K3Oo*3\JlXt=,ug7-:)Jl(JX;Hj;L&RUSu_eo[35n%5E;Pqh35i7o^6qDP?qBs])%KD^a^WgNeAn*#"M!.%c&`&cW]+iK^nORf*9g(\/d@fMFZ5.D^B0?s++/Rkok3B%97+$lc9aMpkOgV%J327d!r8b+V7kj.IdAG!\W7cp/m]R^,+]&9/jH0F<]r/i'P3Y4ii%Y_4%=pe/@$$kQK?g44Y<tf*uRmE3%-B]2'lkW<'WlG/#,CO%/1;)Z70Mh=cXjN":Dj2*'>cki7<p`_ZS@ufODnDo<_BW5'[,aJ4M!fAZWI^8k&6i0mh[=*BQcla)4R(uWS$;1aOJ^Ec$c0qZR!ee%VKlL.BBEoCY%H#2%$n#PI*FZ]ZPho*8>uMJgMsFmRgW.SbmZW<45r6J8@I']cM_0[/rMXX?]1b/cGpE=]m?3O*;4#*?i+pEf^Y?&%ZlR<lOalO];cYQ3je:nuNmBY3NshkQO[blR]W%c8OLq6lB8tSTk-&GNgki#RX(`O'2iTP]e&&h*krSHEFJZTh@c6BtUrd2s5^1^D%kFmSd'tNt\(8N"DR;gpp>LH'7e'qi$T_$C0O3Ac%C4^)AZs4Bk'okt#[A`]!"`AXNfoLA5_DW;jmU9QmJ=T,F!jhGTMJDr(h<mPj%gW4H24fZ4mS5R[QbkYJP;[WB+LL$4.M;GSdHTlc-FfOoYaA1?^NamugX21S23R3+d-$$abL7Xq.V&NT:No^tX*:_E$rPXg7lJHeI%b*A`.*m6pu>E8F+a7:i1^!H3jpkC=0=[+L(F1]>1R-]:W@6'qP:g46sVRQ<\p9S>=DgC`oC0u-umI-4f^*,LF.]5@hEi#frNn4F.%OlCg!`Rupb9mAT&B=Yfs/eOV6hrK@Gm'3#b^s+Xn2LEs9)IcY3\--OnLh=2LcYU\H@o1AQgbKtp<Cl5?a8\[cNbeN%\J2RMc:>Eg%/D%l0E9-?*o%5TZo_8rD_\jaab!K>$Zg*kR<K,ZW[7_6e4$p]P=##J+/@e'_NL&=lfLAMNDGAG&j;;Qq9s:h,$6,:CDWNbE;-^Fi%W33ZQ9'CG"@+.bbHBCqR7uAoL^+=SETkVs`/j7aK.]BK+o!6uT1=&B>JCA)Sj^NqJMF4"Q/O!?0n=A[!2,e-k*aG(3UP_c=Kqe\!%!@>Y?n7nlTc8;+6h(e1a_3VU9V<i+\DD]BLbO_d`;5PRF*9lI-n7RU:b2FF*geSp:cL6'UMuVkC]\@.DS:CB;hW:R-3W?qQE76A>%E#%blWn1HeJ6&)(R@4=i3H--a/2P>gB6rB(C*0qclI*SpQ[-+Q"c-,K=F.7/TfO2J_O9]R`6qJirbkp[fP$Nced,m=#pu-"@KA#l%Kk%+3,'UHLcdZ\WC:7Wm3isYtSUp2M:q;tB+Obb4+46ur(nS`JnW%*Y\W7*lIV]m3p<84?FSg,@*HN"M^7o22Z*p^M=fb;G5-@o`%>d"Za=@_G[\EN>-K_8W2?IQ8tj\>2cS:Bg+Ieo;<*iI1kGprO!j7<`;p%ZY='S6Clbgr'@O('pKDq0tcc+X0%pJK.Z,1KdCq(N6H%Tf:UJ8hjTSP=4oD(ZY&;9/B"1;F6#MY?&CYVlHLh/O0F(rh=F@XrdY[6<H_I^qP>,?V8\gPkMKfD5nkkUTl1=FkIKD4=F#EeH;sU%&Bqnah0A(I*O>K*_0GLRE'n7ei>kj5(RS[-G6KhNO@4Q+[Dm>Q'=am0a^iT<a<\YX".JBDM6;5)UDZO:QooY]a-B%<&S<`!?Wb"N%K)c/EqF]T`(nt$s8iYm,bcMPYC>a9%&6Wo]&,K<JSD`t\_L<3V'/!c?#n<hGg0.$)'3=iu4"?B4<SZs2>j(DfY>^;!EbS0R*;.-F%*ZR9%HF[d!5I@\Fg:0'$=cG"%"'.Q9&ofg^l=B\NSXEKe,?A9NPoQ917I+]6X*FkS]GXeW@24`U_$t``Xf:>iL=GTETSbH[,dWfd%9'V_iH.YEL<'P-6.-c7M^[rH3c8K[a25,.WSRnOTBGoiAMj7:(X-&E(Ss,T&jF6)IM+!C0Z\ag5S,iUCLA#A0/6c@Q=\MR(K*_Td%d26GpOd6t)J\!eG&g]$LqZ&SuISY^IS*ZSgWVgBo=;;3GMe)=?o.%Vm=K78V2T-U`fSA?OaUH`=2!6(4f#_uOI#;cPr3n%]ZlDM[%>Zku0oEHDJC0hDfqgH8)`#3pgZ-O2V.q?;0rWoB[9q-Kf,G)?cZ]*R9VqI9Sm-2mQ`U):R+`6p:Q>%D:iH9gqle$TE9/!(;)4PEX%1@<bQkao[LLLG60B""he\96R4%;q$q./d0efd+7+-Q.J>,RUn!`m&)8[,N`K\\C'JiA<.aC/a?f[QduYFI<WF:_[BMIU#hJ]c&tk%@t;7-+"\:@dlOGFmO&Z`J%RYAZ:mJ&hf?@clbR^bn08G":c!?Rq895^pOkVn>]"O#l&hZpX@]3]+h_B8,rJZerF0ksKs:hIHRH-n%._5C<l-dlJbZckne0"c'L[eQm(^VJIP:=,j,,r!\#HXW+8IuQF[5`\7i@*.3M/Zi?AM1[7j^l-USAj6:edCaY!-X/3.!=B\8"*N'%Jr)>JggbNO]@_f*rTEb]s&*e1YMl:e70].U$]S_mB/6&mofM^TNZ>TBA']r>7%mZR2!WtFV.c&1+k(ZZ4.i;$#o8N;.em5rU)=[a%3I3U[1X/"kRk!DVVR)Z=@YO>8"6%fZ%SrYJN/'2a1Tc`,oqYVH3nQ@3Cpr]oboRLfq*B';7epc439hXJOCO^"cQ6#oZi8fqpPBg5%p\ukp.M8Q3qs3\Ajuh89Nod;9,=j;Ml%b9N?40Cj/Fn;O=Pj#+pUHoBH;qGdhPuR.E20//C.;o2[&7#?oMhTbrK"s&3Na0f#\h4j%2.G;F:[^E*mWR?_"2$dlUF3?%5^[KA4F/tK[RC&mB63[m3:]%$5F-0]DPkI7qd9MAO4,g2QWsOg].h;Yc>jesg&%?OK0L+fgAX3V%ERTP*;^NU4[DTZAjbe\=eL%W_-Rg.'a%3A9*q)oV]tD6SDoq3gG[-"X52qYC>"FCM?.hpH[[o##olf2t`?q^hfrJ2AORd+R8Com9%;P$ci#7m!FYAN&@AYL_9DZ":.&[6CAah4BU;m:4:A@d!M054+@b9`56?)KCd;_H`LOm1]C,.f*Voo&@.`Z:uAQ7]/Oc^Ze<lD\2.%8[FjD)jVqXCX1+l'<2cF<hJbmr24Tgm=!<W`N^7+Wd@B>D7[fgh.P<iI9,`Eb4kFbg4q\rO64ksk0lM_7;G#fmrU\9Vu=[=2q0:_%F.&)Q_n;&O>t3fp`nr-6]SB@m/Y[D7D"^E,CC6mXVdg2Lc@=u1IO;qcF)#!"V!Jt;p6tW:G3>$nBDCo<hMIkc$OD4anh6&p!O@Z6%*ZmQ%7Psj?_e5#L]^=%?L=p(6=o%Ps\K]6>F"ADWq:-G0iAjs0*&f!^.)'":TUJVugYd.%J;%`8cjm;9i7e'"SaWTu9R0QRHfHq3%,Fe6IiU'E>hEE3ujdSD(?/-o+M^A-lH&K;9`@5;Z[pkZR4lO7JaGo)2gA#1JiQKJ%54AbEL7;9L)>-Qif)LcrXt;\b]JmRCKR8qs%gItj&HM[,8BT\K\&WV!*i/6oq>VC$1iqh"NHY]gJ\gV@jTZ]P,QhLCs/1o:1Q>:%79)`pF%aVi!2bO+7-N^61qBJH1($SUQH4*6F%,u>/IZ!QCL<m"QB"-?6:b(X0EQZoN0>/bGFGujY6mA@?\_/S`3\EW+7kF:=JP0JY\T`Z%lq[nW[Q4!8mH1R&\i&Ulrm7:09nlm1)%3:HY10mZdCC-#\V4?^4MjniE?^44**d<95\'6+K#,?7&/Ok8f^OEq%)&50ihjeS+^N:N%?$"oZe[BS9pKOb+KI4iO:XOs@>EQ26d%6hApPH9^[I+#W5ueHCapC?sO8S0`NIbG;<jK)&?MQdZXa0fn+$"Z4IHlpfoFqE8HJFfWfh\E+p+1(tjd$`gC6BKb7]BAD@4=]9E2%f=G22c$b\ARgl*a)'4)ZDR:\Eo+%bO?$4)$]Gj\\Ae(?@F\_%-WAt&./s"'j!+1.Ek-HHhc]q[8Bc2a_@,3SL$m]^sZ\k>7MU'$b%2/gSSGRH;(+!Z'liLaGLQH1\W#pjHX$_E^XhGijE+CZsYfG-bIq[h"6&bZ!U?MP`B]SpldXiA0dbA,dtBId!E"UMef!/j7N4c5sA%9AcV&X3#+G'qNC"77Wn7(4F#c.]TS>(2]0N^&`,uHi4<&EOl3nlsYnljObRb!ZXkR2[6c(#HrMj[fb-i+*G6\=s`W.98JL;-#>RJ%>=QIn+5nC_iNZ@8jeOd.(MV9Xf0#q>*-jW3q$5Y`jn_j3E_NXpEoAN4SeueJQ=HrB>NC9\TB5JbcaOn=#MHH5FroB*;iK@cZ[tmg%=lps)ED3U7=pO3kFS%%jC&%L`0(K&:)$*7f@'EglC+fF5"VBKQhK#pP]^[$ZX)cgl;r#V/^juM]-m3Lp*@dMm*NU`9,Tl]tUC0;^%-F^#DYTb&kb`oOV.^43<k!-5!'<o*gk(J-'eS>,BH7LZhUc04iL^O=!Gt5;pQFuu,H@tS'eo>-h!^>Tjk(VkaK-lMr9"+]iN@R#P%(a6t[$9&OI*Vf72mKVEuc+_8Shh5nkasg<PX_(F;\_k3=T#2#]`"H:Yk(g+d#@7:*<a!.KP\&KX_[eNBgs26j`bK\P\M'HDZ6RQK%9`u*k/f*:uQYGV:e\0.:iR"\,HNM_hSP)e-0lCriKm*1F^:QY'></lDo3/K&2UcuY>Xd6@*_r(!$Zo#1j)3VKh3MKmZtn-tLVP&.%Sg/^Y]C!M=m<(bjE+A)"FS<DJ]C0Dgmp4@#,M=snl2-0:Fn[Z-np?,IZ`<WM<9mN+I8K9c`@u@LBZu)R9eQ)j(m=TqD4&!$[OKFo%o_klbY76bN0sYm5JiSfr`7u&aR=d4u3+`ZAaPbb<Pl:A;cMN5g(<^<rC`@tsApX:7dCh#eQ25D<J^)^8qb=l'I<1][>37`;k-;98%8"7Q)nZ-RI4`D'g5+]2;22s-s"\W4dS-b0D^3@TVha<mi6C,`&ODQq1:K))R/Q719,#m3@"n:DO,*R/-G0+Pc%MNkkh4]u_e=@W5%G:R]D;JRXr3rq8=m?@B+LWsGsEjd[2%QLo/.5/,bd4h!O:mqX&IW,$BU=PN>mr%;_foFlRV5lWYD,\6p@Jdk>:I"5Jj<s1CG;D&L%cE:+EER_e\h:ms>0+OM!PQF$Pj_#rm=(cC!@TW6To#N;il*'egJP1V.^<[C0)fSddQlijBQQ'/j.('YCNH>K-q:>=.S.4aYBV[_2%.[/7_3K13%<3h+G3WC<A5VSYP>RhsCJ"rmU*sb&RkNq&!pLh^>=YAKtdhGA]*+:?fe7-AN;2CU@#gq%=<M44?dle$m/tZV5_0OqS%j\otX3*12QT46isRA"'b'H7S.q[P5#^[WFJmRSbA3LNXR@I]JOJ"t>^X_u)+a6-:ofHG3b1G>A<&Ejs5IW?"4a"Y:W=?bh#^aN;K%m6EpSe,'W.:GNWckN9LJHZ/>e\Hh:]S9ltC;b,-^H1&kT2g:I3ma':UMeuXHD^j[M\'Fl.c948`mG,>)^WW92kZp;pno[-^a+BbU%-WiiNceZ9WptXtPVpG7#cM^LIQ/;1Tk<B`ASHlqm"<9]n)$>ejJUJBZ"/-6ZR8l#"]2*pk8CMWMca$#X\Cjn!48a&W5k9?,ZlMc^%>1K05cQhGcf]n98T\f=78,dt(I@Mg:[8nWp]ecg@g]NB.U$":STbZTn]Gj.1M]j^>i7%j9X3e_u[1(*^\`BHrjHgY?hStG:LR;qN%YVs;d]CEVu.;7uCeiSG8XJ6+AZEW"f`s4oXW#"%bXdm(+Qn6#*lDqoLGAD&oDmd:34iY#'Mm3BgH`Ok<:pC_f>>C>C^=S2T8)I#m%6goYYrh%D*ZINsj=;,C,h7!(3hJ@PJmHq@V],GNLYKN2bI#I/O#e=./e[-N*nltJ<COWVg]:CV-/aE7_Mq*tNCWQH9c>U7C:Y/7Y%p0,\l2)9ni4B!(b):[q.RS)'@s6/[?BLPc;f7L:MEu/LKds-nnKaPHc]8tB=jdMVfn#E41(i0Bd]9_1647lL1J?8:cX1BjUR.6h4%)DjfIHfdf4%'6.?,dL>eme+BF>=)93'V"C8W=;YuW==s`gE.(m=>iE`!X#Xnir0Jm]UMa5EsE(2E*so;S9H6M2]&(["l</R2RhSP%igP-8pKMT"J.2=lE4PSojhc0.]<=qTG*fVB9Fge*/AHTNMjECQ"Z0HmV4'os^=q^QhY*JMI?D.T9XQc79_])Zfj8'=L(#[F@-2;G%m5):cN-R&*SkHK;XR3Y-1%3064M(AiY.)#?[_Y3jORUE4g)i'aY3/5J3b$bg7;W-8_iD-&j;N4>.!hC)%"p(XE&E2rT>KIj_G:Yq%TAGb'b&CJZDPW?5*S/Ed_mI=-H!%bp4;)qL2DFhdX`";P[or3@Z17;Mjd>l<!Z=2qa#sD9]29Gh`bsH?l",h<[t`)/mO`\n6p*&2%^[40GqTOqJ)usI27G#3t",m)]@H<gq7:MJ%L(&qqGD/^9'qV,:`iU9M8TLC,E/<"NYA(am&d2,U#%VsE`B_KuI"i%o6\\Yb_p:^/%o2,3E'L!%]BdinOK+.csSa*7[#Sf:08,(>3qI_AX1RA"X`n&b`qqh&K/&[q5\(Q`/=`D9G;fH*1oPHn'0&5U[:C04lM]\b!IF-N5%4SCs?50R=0OK1V(\IZ!r53-I*DA8)G$ZaQQbIWs87ID7<gf?(SU0[T8K*%W?E3o;,4TG"Kcegk^X2EbO-VsbFB$KbacR@:U'^@I]%obiJ[N'_q^Tg#5JT2DQ5.+DmZo/$%.Gpn%]$D3*jIsMf$"CM,pX-^SJrVYcHk:aUGietpnSq"$Cm<A>"d,4chadY68?G@2pqsK5X%T)@WL=5n;qIiY%T2an^QK='o<b\K>Ze8C]`O$h"V-HF[,9lKk-J,_1mT-*i(X0"J]rL`oGJ!YZaD\;u,I/)YZLO])+leuWmjS.<E%Tg,C2oC/kQ+$AfWlWH:*kh#DHY"Nt_GU\.BqY'TOe+9JUT"fUIjRo,U^Z7isIsq(VeVh>kDgu=mo%!R%kAO\?rp&pndsmZqqs'6g%?Te5NpWoGFq8M<rjF[D9rn@,GQQLI)'0k`jI=q4Td.ciUZN?@"4sh/0<qKHik30:mT>,lm47&CfL3aNaOq00uS!7^=AdRQ'oUd<2%''&RLV@p=(0@F(l7L#:egl2\9:N9j(+.i&?<LP778n3raOngC!?'@h?6F#AWU"(+3k8[aN2l24M36IMJ\lEW!2j[rZPFP]lA<(tu%`#JLR09U]]6Z+(S2rZc@?7FA$`[?''(2maKqh%T?S%-UZ>I]N!PTG;7=m8EJNB8tH'?$M&5Ysg-1sj*=c_$>u=keouffho:WB,7%%"nSebel?hGTk=+TLo\B%86QK<B9m4tq3rXUk"t)4p1V,fN?t_h"E:]Dp"E+U"Tj7Y3EtNDr74.^WWd%WpTF'k\[cddLd9fWY'dmK%kM'S=PU<"Q0:?gG]Zpt@K4qug-E?k1-/7$EUEl+NZ0gX0H)\2@p.WKl#5NE[1tl#?C)?1R<0bV(aiQIr<]g@l$;Xdc"_CD9$WDq[%E,1V,iI26$Vp`$%YrA^#rd;R48l[-ChT]aj#;g@&+a*R849=j80`siWf)eOTJbQ4.kkgY87eC\!WEq#:Zsm9<,)m+)=mbW3qe0%l%).kWS+>*/9LJZ]aW)C[Fomo?*&o_-m#hR6f.#f5!(e%IAhHgF>)GNCjS%Hi;'l1sFH%H8Z=Y_C>/kZFKYdMEl/rAS/CNCk%-o0FV%=iV$3"l4uePqg"d3'Z-L.EHH\(sOg!j^-'f(,?3WCK:^M)Zj0(mA$HK@"tUGIt]:,bi;S"`hR!(?q,I_gX[Vp;(n+#ClZuDXCtFu%"<$6!?Dpm'(pL-U]J(:009T@uVNs6t]SnoL/@.pF>LTj:]>Chn.L"NQ]1TXTLcU9GG'g2joV@?)1V@B32Qd=:ObhNEL]N(@_fKjp%,_:pZOq^Qa7.am9`m*TlLhS$'J1IH<`Ita(7GBdLc-=g_deOa!:)(_!#$"i(hTJKs-Q*;:rBO@.&hul&%.^I_X56G!#eSIB0"=g9%\ZfS6:46!h1(HocgP@Klh&8\eDCnu<9@AdIa.ap"AeCS+X^"73@lb>B.q1&,BmRE75>n:;3gI]3^P5.Hq5VS[%4VqnT]\-bO5ZA<%flZeZ90fHkHpp+s8fYpY3;V\@<V&D4@Y@XGJ!@aP&s_CO)1jDu%<_B/<7/ne.PQA:H1DDR.*?i!fi8qq*gKq&PfPW/\;6A#^X=W@%m"DBE=#';/WpOT`g8/.&=,P!fpJP30]2C8CGEcN["5)R_QO%#BCe3eoge)YkG`s8LZI%9Yfe`b28R>PqWt5>P1;-;D@A;dZqFs^K%Lb4JcI%2Pl'NA\]lpK[hP`4Rm0H?Rq)5J""9r>6*kb8RnGbdlnDtZ`'6'00sfg(jA&L1DLO@=BOIK@VW`Cj_W(RUd"cu+)G7PhBa%V2oE-Pn@pd+"tki-EfNTA!rP+IVMs,\<d",Gs\KXJ69-5<=1c0iPKDl/C<.GmIWa0=gaCmhAu*,OHDe"`Mrurl<]UoppI)QAVf/K%0EiK;kULbaHo]2Qk`)-L"JmTJR%5G)OYLTb[o"?_-t@d7]dA#f[[@O;oSs`A*fq$ek._=X,Q_,7<`)r3a^f"A3UE,0c1Va=hMXXf%Ug^dS.4\(*0=-/1?+[s!JmS)RH)eM:,ZS(qOX(K%i6$Qt23D;21cke6.m8g^jM`oeNsoEA<#,d^?.MK/7l<p:]%RFQOdWE])PjEY%<!P7T4=]r/@du_6Y'<q*1OWUj74nA)]Y/.3ooI+HbHe'3-0mn+b$E@EU4$)*]e3MoX[NlRk.%dtV'_@)jRlL^78,=m%TsW[r=F0J%^-/7i0bNqMLa\-:aW=U^367K[np'eaN7>iT7@e+5bM@-<6sH!rmqV&f<_dbD[a%53j;N<7$nZk%LLK5r\$Bt?WYK5SIA1h+(ti$R%")Ls41f<)5.tTC5Qo=m-UY-_,`WN"t?""$8X:j170P+]rog8JXRCdJX?d1GGcE]jlKpZ2PAnHG=O*4j/U&q13V,c1G'hVaqI?b:6%ajZ>EV*O%jT]SbdlC8M)7RS_a7A9P4`2f1O85IE>TgW..4;7"lfZ\8:blS-.>.RQ?\[",BK9+]?L-4(_aoL6M90)F<o*L"NIA850%<jX)\en\9D;H@91H7O?p_q'ki;iEknR3fb<2S1AT;=!FWkob!4jZIgO-nXa^=XqD1O[8(WTE.TI(s>fl'ZsCp=TrS;d0V=5:F)Yt%.OTq;)V#NW]GapfUQ,j5A4S0c8dnRF=#`>5"Hh(#mZ4H\FJ?=b>*<SI4f_UUG&#l^BoQ=.[>(-),6^$(ar3m#Q4g'Y\3`7OP+5`7%01R?8)I#t[\^=iJk%^.1P_Y`,]!+J;8$T&+N%($Jk+oqMZ:Mjtc"W<Sn>f0>P=ZNu$K4aSWKK(mIP+2>J7r#t$K`!2F`]<R(S9`9%Zd5L1%gnuloTQ>"FsR7cWlMXoMJmK%;aU[s%REp!nO>,2<Vh/(A]9EuWS2YRSuF9GgdYG8XJI(o5/VTG.GK,%dH&ud,+4*BIY(5A%q?1IiLD0K94O95=T^.%Z<@,IiEJe^kS[4HLnH+\6.i0RXB@KoGNB%?#eM$Vi[=K]4(t;j4n>>.f!oB[%!^$+LViL*BkrR2\o.R<[%VE?d9ipbQLGk:e-bARkT^Uq++qXfP]J,efY':c[%(fg\G(p],*O#39+G_p)6L9,j:N(4a+M=[6_)X(&'"/-d409WBIijNa2M&.EY%Q]?b&jTR`Z@-C2>'s@)j6Vk$:8(1]eF&]1/:T35%<\TmP1(2#mDq((^q?<>^)7I@[dn$3AeM6Q&KQ@d+SHM$`XX`"Rj/6_6s71B+%l:)HB_f[n>A_M7KUt&jsBdK_nOKJr[TZsOELq5qB'#(bb4CuA[;!u^/oLF%Ikh7FZ=rS60"EeTTUT@ePE@QbHQ_>-^1F?7]FKrlW%0VW+e^i4p<kR't;.I\)BE""f?J[h_a#7;GCkZ/4_dR4JZJZ\QXrhaI-$t:6tFbR.*Vp9,\Y)G,a!oIga-8S'D.J#]u^!&`9p(Cih%fI2;l:p=ir79iGAD*<"WI/XjohN.^bnD0S/'Rl*F!t@(oH8"Kj$?r%BigE%;LrZkblnj.".\GGi;=a_YHePJXWd\OreBRlVGK;*7%j<Uj.1?O[?=;Jr>g((6s->5J'2J+jkcJJ)J@e-HI'(ZeJJ@u`@!8^-<@nDC5kS.VZfL+8;"&+/#h6:>kH&l86\mpbW([%d6rkN8E%bL".0Cq4?1TL27D:MF^V^^ZYRln/&N8KYLcL_P[S''[ePLkoLGPQp?$83FU,&i!rA,lg7S8>WdRe2<'-4?<RnCm;=gJTqV:nU>!d%Qh;>\$sks,mO/hWhTM*8N`oQ=,h"/WY\;\?ikg'%?`g<8!lRn$hP@#KPrAkEk`N@Z_bChT?QX5+<-sO;$L%HhM9JP:Aq:=>p>:q>%NW`$b;7eSFMk*@bV#o?CR#&%U_h7HGn\GnW/?'c[Yt1_E'>D<#CCtX)Mm4bTT=c+h&1S5(RKRqJJptNL6t]-lctWnA9d%7lLq`PO%"3=/M1R_]M<t)q-3'sH[jP+8:E$B>j_mo3+l)k,[!0ne)L36qDB7#R-k'E]F/Tu\IOVE\VK>qb-#S[i_Q%bY\$RAG-d;1.3IBknZ%%p_TM=*hj'[udF;LNOuDi$n-10;P>CI"jO:>GTBbQT6U\%V?3%VG3^A%6>0+dEfs+?n?Jj2@9.81UpGPm%q3$2%dmI(XFpl7/]`]%(Ofb3L)%^mDWmI^[=GAH5a[NDLIj.^\uq<]'TtdN@Mjuj_>`Wu^N</#R4-(Ff_V>\3=b@i*s@jd"VhZWP3<-,dbt&>=G!>,_k`tJ%*B)_+peGP#=90<0r`*egR@nL])ojom94$:b#UGE:nXX7V!r%AK-heE-=uokE&J8*WW`[(18?D-OD`P3F&36#3s6*l62d!f(&qDh8%VhP\S;isY@_6AXN(h'su7nGf_Fa$4eWaG%a0j?qV!k>;2*H];W?g>/Zct;RH-IPHS#7:p)plH0mBB]=p[&^jeW_SnNSBO]$:e,I3%4`MJ+fH^q>YpSa(N+qo_EWAP$=$fdj-[>f\`PcAtL`TP5(UmR`elPN$qus%cJkq('p]N9+;5j&l=%l?NYF=3lS[UfPE"1oe7Ff32%9jC3,X=BHZHmBus;!QOC>q!H7]E5H3VJ;q,!`KmIM&^h_2`!tBiMGKa6WHEG=_b:M'EkscN<V.E'm<-Pa,."B\d.mVl\e':&G13D%!if"7WCp1T`WDH>f^9'0Pb(@@Q)Z'.Ho+*<Q0WA3dc_!<E/$pjSI;Z--&L3*(]uhD<>Z^X%.P/4@Cqdu!I;_!O$qcRcu*mt8A#jm%2_khJj/_k)QT626IC@ITld7"SHY["MW>%'41aBnV'd:.rjo[k4@`s#*MFep'W^'YDQU:RBO!oa>74E=?:M,[IEFlO$MWc4WIJF`F%lU9X,WK/!L([J^/mZ(jhJBKkodKdqt7OcsM7"ZQeBe68'oh,")^dJ47_`(<*6YV<aD2&'7QERq)llUM3W*C;1=K<nQ:l$$1Bkj/@%$@C0Z_0A?n&</8[V8EX,%J)jL5TdsM&EX><6PWP@YcTXAbGmh'c=*pG)dXf\UXlB2!WtZCGAosQ[7=2S\lk7/a9MuJdBqq+^_agP%ou+f^:[gdFnPQM4?qXBaeL,+f_//;"c('7,3%$$R"21prU_+fP#%5:>eTEK*$erc>H=0h\Od#.`6+=u2jI.BcWAk\od*WU?)7W,q%AYQB<?AS"1)($&?*c.O$_j2;f5I/!KSqh/n&M[a"*@hi0UCgEs*CR^6!]1(BQ$eCXP[ub2@Y\:/3Y`8'OBDpAfJ<C\-lSL(13TpL%^%NFb!1:L5/15MR=+CM['LLc>&7JZqH;_,4NO8`d+PR8`7"mB4+,SeV)^`tg&kPM?Jaqo:=2G1-pq\G\*h.^1%InMI5Z`X5SKVJC%D#qoaWPI[`YVs$rX,<<7#CBS.$S5>X^V9m>Y\4,Q$rM:jG6Dknfnht!3O(]tTQmb!Z?22]`#)gTbn-TclW$\H#[&4sTK3\^66@L)%R.Ard^uDT8f*i0!!EJt$@QoYm`OIXYDg3Y*l"FmY]I$;e7Tnf#ALqAD+#PAIVi#a^[:?DK5VPf_OX5mB&L']o3IsR2!C(b/-.,^B%8=`i`knS;HTL:@ck`Z!S#f-c`C.E(5LA`ZZKN,qc>fd?8-nmr&7DliYNjU%7"V-bS1a@)IHu0<a&\^bWpsNr-.k9Ki`H:MGclKVJ%)M*X"LUmAc)9H?]"jVA_dq%Yf">DQCLIC:>3*C+1;J/Ab@2u?[BJiB^G0,=b_k>YI#TqErZRECK!A:G^.E5!U(7!bGOPjuLj*+S!%?Qp<XrWGhIA]@q:ps)[gQB*7QmsCfIiJFTDON^[qFk&(5RXC@jL1T,Pa`r0:0!k&(GY^YF`$#3dO\9E)Dp:b.:r^:m*"39iBh_f_%*?ue&/Q+<GAFQ(N@A,-#rNbR+9ngdNk\*GQOOE7tURf/Vl:Zs'O"ctGQ+f/DO:d4EAJg_!$Q,K^@QK@!O:/6#b[4:c=+WC:M4mHk%is9jb3Me5N!cZY3/&GB_1#a8a!A7JYFA%Oh9_9U#,jUt5NWR*KGfsnQ?]<:'08]XC>1aH5n=K:=Om<Qe<Pb[ENla`2$`%'&1M^;m%P-iRCB+S*nPP0Zlb60;RjoDGc"H7'<7rT?qbCG<_?"@L&k\6K$6`XK-*DW@M%A?m^nhFVA1Ot)>'TFRObW$Fj:,i70I=Q0(2\-7^%8M2\!1<ff%ICXt.BMK@L0t.5#JNF,_Q*qR)9Sd7L$l*;QTsI4/#i%HEj$fCK.#S5FRU)>dE$Ip)\2qR1Ij38G/d@%V5U+q=&o]%c%c"Ne\XLI$j.P-4`/L+Bj@8d;V]j'%\K``5"1aCqbRb,DhH2ol62pSe7>-aqDU7bk^-+5QY+Bi(-&UBL0'Yol_m#<FlR*_T""p+[]%"X;n5R2.!h#T_61#_Q[9Mfd`39[bO]_]^@./_7c)6A02-57No1mSljRNgY1q(BQ4SoG$hRPr:#F1XER-^aj/O8]hgtJ96KfM^/t@%=<l.5]GG13B"'Ls/i.&`)?S,QHG#'SB[)QU-3df'>X7A'i8rDpMdI_bU&3$M].'2hO`\4EUcp!LGVL:m20Ug^3Jo.dfso/D)FIM$%+;h9,quE.7dB#uC")'Ne)o6TS#XrLN"uP*"C!iC7&M5_FZ@p;o="+h9Q6]UV1t*l%GXtD9P)^)ilsZpt5RurX6@g3YQ]8O#N/r\6%78L6](`hq0&d%:L*"PqV@!MXsK#XoTS3;7sfAm-5NR\^oKN,Ph>@mU^-.r?+5$6!CF@[Z*a"`sZBE/e@$GdgO_eU_?4;/7P@%O)(%$\Za+Mm@@M+rc?N1&+i.75]5QK&Ng#&N*oD@sbMWhBa:NVld*'_D6'E>jI1^;J7T0=0a0\7)n/c>'$G%A5L+ojhQLsf:>BY5R--S%P:g?ba%'km*Jaa@'gPGd^<<s*4Z-;ok&uHJ?TEb8U[a=8=#1kU"j7+aHUT%W5:\^U@$kIpSY>X*=buaMl&;'nl\L[WA0bPAl7la&%L8,1a6<+S-3-a.I5Xb.`L=HjA$$[:cd#bTu%-!s*POJU4[UZ&8UJnob[<(irS.>VsR,QKdV+UppO_*$AdjC"T8;JWYCKEKS\8hT=%d-_AL$UAMTAh&`U<2,I!<WHbtG6eu%_eQG3,`?JG_ug\4m*S<5%B_+j[Yaj<??6C>JjUreAsLGn&8`O.;18>cX=?"IW9TqfnOdAQ%Hl]<=paYgcc$2Jh8](o`?"S%Z@TEN"*s_;N3Ru+jMSHR5W-^rod;&a/jAhVXZYBsW?BhT>,[<t=Ra.EO87THi2_7NqdoeA`@7"M!%ORS+]5h*_eL!E&[6&+2!N%I!^$0!).@W>E:("MX<7a$Yl;5>87['j#)^"Mso^U+5jRd8=_"kj0AUn,M[oiWA.1Em&5HZ]]l(ZlWP%%PZTN$<)h\GTe6o"%hf][\=5]4U+U$1a[`?'mk$HN23H]LeSC=p%0LP5me*KK]&[['*=LooZ2nl-Y,.[Gn)hT^3-am=V45(7M<a?%OFIs4]eBmf%R`9fZKXnjg=e5j'>6o>8PCg^h4""![>;'j!^gN])kQ)pUJXE9O<]D^!6A3;2Fa,G5c>dleQ+"BLu)d;K]jDX0rtKp%fnniX[Wl8:dt.3A.Kb256Of1[0EcV@!G(,<Ret1q\MppL+?.'L!/&;C,>2m]HkWC(Htg*X-I<s9!epm5:"(JcpFA>XX]0sYC2@P`%8^S6fBM&cn=:Q,)oa4bGAu&n0A"Z?'.Z($+F&8A?jT,\@B.KKIW.!8@_?tc48Y6F^@T">E<%JE>g&7#bblQQHqeubYOtJ-/j61op%Bj'*R5TU3oQ@:JWY(=4/Pf;'F+A>6N^0C1TOeRA*UG$IlCQB`O8$6MY8<=T'M+L.L;C-kl=+^UcRUHpr3hg_n]ZFpa<gZnD>"ndP%?7hnb:d^=XP$L=N"g!7&Vf2'ghh1WT(513aINn3@P^(f$G_%qdH)J@EUXh0`Q!!$I2%au"j-b4be(TZ^%%&gNP;QQL*8dQH$re1?%gBdnbXB$cjee;)6Y;YXd[Rs((UTk#/+St`'n8-Zl)=d=`(n:rn+D-Wf5!;4L,B;8jL#5Gu*!+f)f!7>o;5LNo1En.G:`F"RTS!Il%djl,r@?hiBRRUZc%70l`$#Qst_W=1?)[$WKNsrTV^.23,/91/#1YclD.69HAV.#<i]'=4Q,r-BbNVU7A*bZr2/0QYNA+!Q:5lF6Y%SlZ&i[/lJ''k\f/6iUk-dg5<h#]ZG&<#<]&eR_OYFl[8bcuCa`e];8=_,I\8[&&ld?*gHb'H=`c6p6S7<bDIJBF"RAJ8/OnYWPIX%D`5lmoC_'DI`dt(*8u2#)sqZj<bWN43Z\:iMEE9iisGOs-UPJk$F[kZl?pn:%V>lj@,,Jc;QYJNn/X>8XVm1)>(fD>.adfHO#9M5%Xgp\?;^7VMPscNLr'-88&4%ec1RUc@Ct^[kgiTM`]UJ/qHF\jk:g+9E`i;mt&C%kj>j5$!Al>M#Om$d2P?3;;GlZldpnVn%H+9\*%-A-?$M:"!onH:0N,(.N%![K:dGu+*02JCJ]V:>fer6=#IUsM(H1@($`L]N5-;b6JFaX@NdUX5^kK!%10)W4R5Km2,#_+F_#b#L_P%VN(6GKF3.K+>$D687];WIV.kGcH(Q)F&^fXGdSBU$W&\Aoh0Wj(2lJG7MNQCOV&oQ!+NjZ,%_-,ir#1!N;OrG%3?g/W@&ss@l/bZ%b2\RZ'9I26i0p#?4pEV@*FsD.d*6O*.I$Y"b_BEn,(US5@$1e=V1nu>FYVEi4HVo=9fK$YSb"ug=q)*H6^0jL6\7X.8so%A=([G?%qIn7\847Z3i'qeEEA(]p*pKkNmE_"u6bH.[@(#3K>c;e*nkHnDRW4KB7Lb=djTPr&-815uGCY4+IL&Dk&^lFklN]QW(BeGA*,9Tl%]a\lsoT_uq4ei1k`:R=H`e>"c8.7#n4GQ>Fgu5J_'uHB!5Yd^h/d>`rSg]+KplcbB>4/!YM@U#Y3@=\]26])*0ehN+Y.P;``YQ1:%P_c,J`(r1g8nMh^W[1V"1>tAU8snP5(D]?_&/L"dU4JUo>;Dd.F]*Gj.2hE@7Z5nRM2&!GPb<"OMM@S]Ye[`H8^CnO(ilE-%!Faa%07nFPJ[J%jR';UZC8Ni(8rQ:p#<[nl0T?JRk%X^/ja)6LB-!@Q0"(4g.htHH`lC/sldqModRL^>3[:Bk"GK-4Oi6!1<5NaBi3dt_%*Eo0QeP^c;c!I68c^db=!!$Gj;)GT]&iM9oA-j&a!$e.-*/#7I0qq:kP$Lef7qi=M@_iW=gjrt#ofSQ'0Js:.0iE/&p^btfIVQ:-%D58[>]LcD:*_fs6e2u*-#ho!RE?L:_ia^IGC(G#,Ll`d8N6u@P/8KZrC=Z>5iI4("6cP?d:?Vi4(J$9G#ZNjk&t/ccHe?DRThc,p%/IAmQ-NSFC?IZen1nt30UpEmVH(Cqu:(A^`UVTZ[_peQh#al]6U8;/3Z\.;TZp"P"Z"YWi,dk"^T=q*5q8UWlYA+j2Tl3Y@_L==!%]->!N!2#)VM6_`PM$+oX2$'i]ISSXl(8>Cr"_\nJ&50Hn_S)\_^#kSI?&-snB(\4.I"?CaajSLd%J+QO.M8pYq2(8nX<tUnK,;C2%B+7*],A45'G9EfgU<1&iP_/O'(M/Al9n`#d1e>%r'EcJ-KOEMRj:e&%\t!Ca6$O"(%fC#'61NqB1a=dW,L65XjtV'g(p#h'n'FuW%P/ZMb'Ni_$."gXn<2S"B$:J8@&ltlR8D0[HRo6$j+Kpj6Uk,0_o*eZRVZTSbM?.f>0+LCe)0#96n_ig1&d6IdXU!F1l`a&l9[H\7%8H`t(1D_nlg=B:3bI6Q55qFhVSC_3_Qslh+g7><Sf%-c&9,R$'C/,SOZ;B$c!/"/G+Ge>0?ahMbf`>D+oEK!Qe]^ol#QtsNWfp73%^nu+s;o>^$Q\uMb"-'6+RiD,O@So7cBEu&5lF<"5"oGV\ZRi07,J$E/A9>VUMe4L%5,@c'Vg[!>:p_c6"Ya)q322dhdog&TC1"Vc%NM(PtO+o5c?^VO'V$uRRiH('E8*4b(rdaiZ[U_j.S7.D@.leaWFA!od0aKX`AkeT8X".#Oi$Xa<!tlh5L<Btqf7BP;r1M4_C>aEh%3%TO<Gjt?n^kfcCm*DDd3s7rZ\.4NjfURQ(aQI-^3s(>IqX>NH^=9Z%<##G53XQ/?U5qG.bb0Ghd1dk-,0]/s`2$l8O6C=jg-@sD%^'7$'1]a`'RQaDX6EdJ@BllqTo88rN-pRsYLA)lomo^gdD57q(BF?9&A:-ME+(UJ90GLnAOqK.h5[eh3[e1'Dd<m,h:e7#XZF]`U%)5Vl-h.3o$6_i!_R!)#F6YQ3aKA?k%H$USA^/b]t5a%j5kU&[Vdhj`4#qJ,#&5F9s%uFnAZ&6!49WUe6fYu_*'`mSnf8mnaMZ*-5%GUsh]=i6tqOGTXN<#]Sg+VjIG0_S\&=l\Mti(>ep:t(H6)IZkp_$"eHGO)A]2QrS<ht(_eW\:;LYLt=`N<Tb)hEN9#UgeY.AfL#t%LbZ1d&^l10Et&2QAO5=`Vq]qt9iW2NR/i\7Ydc#M1J>/j5S"LP2Fc6nLkfD^1)Ck+((^oXSc$WnLgW6a&)?rh@M]2&0H!1FQg',h%BI<MLmEg(7>!iq[6_\WkS/")9=>2)rWYmo)*@.0X@``cM\@2aF)47;n;j$#CQ-$Ztpn(^P0`jM3LRiu$<&J%AQ><E9jpc0L1bP;+%,Qcn8))LaLGXgMIB<VeG,%=-q#N7KD?8'(a;mtcI.+!=tk`PaIi<&l+pL!m]an(j+*FF6hkHA4j'=i\nk4Pbs^=2sb^Z,"6^3fS7%c*OUgP"4l1gC?IJ`Sp:ckOO]uke69':eXRe&rX?Zhbk<Tga2)gYR8!/))9@jZtd9R6oaHiiK4<s]d:?-@/e=,dY\%PXh4u2BbA-/%9uAuYMbpY^F]54=FIK`.@$.+f&31,?-A.KDXM)7IWF/E;-rc?Jr.'i<5QAfG:cttQiAB2GBIrF1&N[qWb'5V`Eps5X83g3IAO3n>%a>$(Nar\KaLELO2\LNh>L)#Et:VDf;K=5OUfq-b[]YZFE?In!?=fSOOHo;KjLDDc;>e^Z7R1RkUQW5VhUbJf-bj9=O++SOKAAc8u%Pkg:d@c^,'1,#0:=[>2Z9N:(0oiu+e?:o7tUUkNnLkK)r1IAYR1bPd7Qo]u5CD^#ILsi2h)'X0Q+fVa<H*"HC5g&GQW,Nu!,R1d-%1>!!@%#*8+Ldc?^\#9NHZc5Whq>ptuhB_Oi#6uLm3YKO?64gL+1;^s?iZFlXiXH4cdK)RD7LYE7l4$Ghr1m1#0O2CtK^,TdKjp'A%ZeTjF,"sRSG#b>:QkZ;]?5(f:B[j8$!N@`N%:F7PEk3G\%X'o(6m3_aLACgbCfG:.5GUVs(-@GE+k:V7#sU:J7@4t.01`oOaC,at%0*[BRTIPgA(dA1_V"Nse4_L%g^kc[],AVjM7BXoNnL<N0l<O#\mS1#TG\)n9OT<r[XMRA6R$C[X:-QsDZ7Kur]7)'^5gRRV#'g2)%=F4[4,\26H+Ga,5PMVg5``h-t$'m7(!)-?\%R@>bD3ibX35AU<,hXb[Y_"G=f:=1cTu:$-Zt\5VZbcEO,lT6YOFn`<c#rFe?AYu5%OSj2AU.63#]GF2a2G#$rKjG$DMEu\I$$iRd6opq.:jTES<gkH8arZsRc2!"8TqruL<cFL&8;kX[`F'7[KL\Lr+*r\cEd2KTYm-r&%K>g_cOt?*lRasPdP/3Q:Y+qm/JAF7!nBb"4q9Zqqiu%pSKW%0,_b*Icg]I3TH]O,;aPi_;U_n2@ZLg+.fEEEqd:u/+T*7i<_>DAV%*@6O"2\NGBBk/,ILJ!HT("4[e7'i/:V.o4[ctHR)2qq"?B*_1YN1)-?_:YE.aak3AV=^G>E*c0XFR$Z(@8\o0G(Q-cO9WE)&mR+L%aU<Z=-?=$$eHuV@$BTQ91kE?Y16\Xd1S^t=<)Odt!6VPK,iH&P@FZJMF0G]`L5Z_)I3K'a%2c]7XgAsC>sRPfMFKt,-b^9-kod*$%dF)g'cW62A#;o>8g''[>4%4$C1_0;I&?CQ$nJ_KK#+JpAj^Rm-!l`N%JI/ZNiE*>AORRg'\-rCKoJWVg(unSoG>?)d5b3GU\WP:!%buN_/6nYM#'LZiQ8%C&O4a.#+#,8K[&;&#aM<N#.L@%Pn4XUVAo+MQOEn=13hH$aE+u^Sf)Gmr/'a-fQ3KT]#@kS[L0U"/Oac>CF%.$F]3$D/Yk]ir\uYMq'hH72HL4,e@f('&@krA'd$?1>4N5:-ko"JLD_KHk[eG1Itt:81kd7L27F5`LOe>M(-NBu,M,8Ag:D$P6L-%2m.?AM+A.FW@QDTTUJ0oj$gjQ^gIj`W>GW+Xa2V($<ha4AR0b)7K]muX)MA-NBjc]*DdW+!%&#?_r]-X.=a=4_*N;leQf;."fWW_%=EX9;)&Vn^>gu^r^:&p=!8%<CR@gq9C.>Na#8TONe<:QIKWdeD]8U[3(6&E#!#!s%FM_[@#R_nO0kkX!c:_'n!!5*61^[&*T/Ei3%/jmm1/=h2=Z6gJu:ILG_o>ON?"]Su>aoOq.f]kHdXm6>%QZN7^^'^gG5uCiB(E@3b6]e`9/c,-NPEba6X@a1`[7=7ml*<40Peg!8%O(r(=-?O]%/M]*N:kkX$KnX.ITLP#0+j[<aV?p6`+;'c*`mH%HNSo+q4/[5m+IRdT$ucdEn#2SOM4__>K,"F[Yd1os(D>,]LO[.q%e]='^*WQ;"QY,M_&+r7FUi_$$eaO"SBn/fPK#4csQ2X=6O/Q/&BR1k23D4L+j\jH=#nrIXF26&mLmG?(pe#BATqlCTfK93<C?ZJX%3b"gGCk\7A%ga/8i#(I<aNk:=s0O^T?8o`hjFi4Q&O?!!_XV\Ljs+RP,,ueK$*_XPk)_V(,@I;Y).9s%<+'=FRhbG60s9?D6ZaAD%jQI-6*$:PeY6^\"/Rtaf>Cn>r_pW(^1s$-`"#F<cV]n]8c"O"Hk/Gh3">\;7W(,%[+`<'l;QPsa9s[ip?9iP%@3#db2N/L,:"cI#%)&>"uLXZ@q;5CO,\g"d:T[lu(-cp?/^D4tYQ7EK-LL@8dSNp)]bQ9SZ6tI_"3R_n8/3^#TMr>uC*l9,="THt'>:/nVYA'QGVi_TI%"Cr=6f'&IbOD!rl<[A8L)?LKM1q43t0'?es7%Ya.iaocJdW.U-EqK0HZA+%9)9`"GoE9p=\30sc9,K=$q/r=8!WR:7]08:G#HH)E%6&W%UOjOE1.u::Dn]it1),k9RWBl,f^o@A_>i1d.:c2Y/TW&<"Zq-CF*-Ipj$8c?,Dpe\f+05\#KCFkSh*;UB75$KK(k=N=&jQQ!%Sj?/H?cUeBoCkKu7gYA4"6(Rp_Zd\;-8\jb!CF6FZ<W$I$/bgn>MMS$P#+7]9RM+V)EOd[_dkRQ9S%061W+Xkd],TZ!iO6jO-<JP%5_8*u(9`!\_&=6iTuEro+CuE"CHB(o.7T#rK`^jYGajCZ_(#HW9$^lGq7i;)/oML26D5.GAEsN97%:W:DibPQb?*ehnHpF$Q'Bh'%0An`?Tr]UkUFcVmP0pqSU'<3>C"=InI<h_=&MjPA3LkOZ&1gF7\E't2#uV,Bh@km(1I*!h'f_3SL(XpHJK@63P10>F4`*Uo&1#)o%MY_*C(:h".,F<@f,(WqF=usnr@Hge@bQcq)2C5[R]2F,*Gro/`j/DY%c>a(O`EQ7Ch5>IZM^C,5WYJPd(0QKSQ)4sI9"*p[WpL8'%8QL]SUaUB2dPY/!T".^PjYS!@5RfKCfJq2%1DVJp)2_O(e&h##ASs`C'TgUp<&*LN75La>\TC4LOHJchM&iBC>R!A'i7KaHY51=B%RFmgJFX(=)l&\<;@R9-KHX9i3%ZDSQd$TZcC2+#"7-`:K!"FujC!P':.*=,BCJ>dK>J-[8(%cIe=CGmD&I']3,V0No,beI1)M;1n%PnCQJL^KtY;t9A\`=,UK8#esJ`e<`I?KAF]OXB'_C^*T[D^o1l4-ItVp/QsC:aXb+YI5<_9*$=qJs'j8lk";L.YO%C3KTP-F=o>^%72+Vdr./]>.bfV`XXK!'(=\OGNKHgmN(.^)(57DJMlnj+B`kJ@DZedI<+_LMF<XifJHYZg%DX210Vg6CAVqic]RZUt!_nc;AUW*)%7KK$`6t@TWo0PbZ!l0esnNp,Vn5-k7FI+#q5kZC63^H<:4s1/73F:p50NK!So;+6A14r7,=3.qN.YilR[<6$^mLF>!J]uQe$*ZBh%]tLDh<HCXVQf%oEdYoF1@-Ar.MhpCB6X8/]5YSG(fbWJs!2mDYZuLtmH%i^5cm#Rt&dORr/_"H>8Rkb@>-_)-;t;(L#*G`F%WlQf%V(MXG97WC)(R0Q>`C!c1+QD`;M=J$WJ`n(]'F@b[F^u`HK"<3SMnh$Dil6[oI%Qjm9c+!,B=TD7m#(VEg7X*%Rgi6s>"?9QCB_!V%V.(T5:kYZp,geL?G-[#`)gDZO6sQ-_qLS@9H%9l.arYbqgSDW]O_^+3=L0QO1Kg>N2%BRU4&>H8f4O5-dQa*&lW0iSUOCJqB2c"?%_/nk0TmA+T0"S0k'qn#YC(:L;j>Cj^m:<ENdZf>>)BQ3m-6_+,M+V3b34Db7_1'\rG*\%$qVUpR=E_\c5TH\4X\N@T<527oHKN:>%%G;1ENH3N<@fb8LL+gU2FS:W0AKS_I>'Qo<pP(P+]OIc>]HB^3/eb_l!7FP[Nnc0N,2okp<@'IA+\BX^\%m`_`Jlb$@-LT,=Zmu"%hSFRsibCPF^%taN@o;@,Ym05ik%8+^O[\5T%akh-"%VB<NCQ(.Ukj-Xf;reD%G!4ZM><$.NQq6VHo"G-;NH5^d'TSh`0A5)Kp6,b%S!a3"<e&cL$6(g36sMff#lD4%Mh,ajqZiM%'F.c4:[FOPSNo0a)W90e\Mlu7Ws3o1?ml"OBsFYsj&1O\R;PWSWn*$m!KN86'k'Yc%I\+ad>[Kc_dY!'\KOu>]COlmZ%e;7QZ"'4Ifli7U6t7\J2@<]9@$IsPR7>?':=SXhYu-%,Yu6j@$s7g#1CeuST^;8<TH&#/#=g-W%BnTr'<FaC>V*6<mYF?W<KOr\R9Wpc9PX3Q2#@Oh0o+YJC;I%`(J21d^-#p0gZ2h+DF9A!tn_6@\#Q(1%ciJRY-8SU,n2.:_C4NOm%<?!YNUJgNL/$KR!``=;`9[ME]:c92S@r%:1`h`cAOW:g&E_B0RMhr'%)EVHi[H(lbEtB4!7<'Ft&'?o]C:.i6].tKe<g<M?NNEr"%7_kU(.L(Dl^FIq<':VS0_,[V*+Q'FYklfA`-h?i&'H0Lok,gSsSFkAbRB70m^/Q3.,rI8g-_=#F#;/Q7NXXipBj.Z:HNCYd*09#'%2bVZ$G,.$8I7`h[OaE7QL#')%OQg@7Z'p.B[H;-F1EnhU?/:JA$*#-G@#.I.*RJQC;At`jin2ETF-?X,@("SpK0_.5.&)j"#G1jk%ci&E\ds*I]V<GL/9ppo2Ve,H(oBP``gmGrmF"$3<0o"1!T%*Iaq#^/PhPtSs22+3PLD"PPMd>U@l)OQ<Zqb[?kDNWJL:UI@W7@pD%&DUEe]B"eocJ[2*"tlqiKYE@lrQC9"SGMjA;h#?$V"U1DUgphBD*!e9S0?EO7O3unZ6X\SO_3u3b&KM&F>8C%_'7,@Ak@=^Bu#_(%JES9,huKKGdQ++-2178Z87R(MCYG_\.t^o3cQJ4+G`>UjON$e$D#D[OACDt^d78i55*<@hdmpS\DtLUgN)oR(CjaX?R-)WNMtT!R%gn$-E]Lcao`k*!ZXrpk(,5+FuB!Q)t2mKF/'b0^;6j.^5d1(P7BnIiQL/Kr[\4EhS)Ec$--lUB1JG%fFU4FMmQtiLTcBe1N=e\j$%9\W;T9a;2&V)(UuEr8s2d:#'m'0mFG0SX7Y?^(DZ+I^XjMq3h/R]3#Pg[=^\bUAHg:Cg0qMe&g,%LoF2XOi(ERe>'J:CUU>`KJus%Tol@mrFC*4d#M=ud$?J.BQ2]\VfIkdK;OGZk8cQ>fE4\$dCGsE*a,?s;a\Hp9U5n-Q&RkbTc6$I1j2KdU7Q%lO]d<*Cp66!hd_#Y%N>.f^C&!N@-T#'3)Y0F3\rduB$q=o.nYWZ@KPj4'b(C6D*/"</#9PdkL2>X$*AgqI+p5Qc6%cek2XK,LTL%Cu>fdp(1jA6UFeXKm%WtOgW*??uGl9_.fcp=u[YT=<9kXdPW6*&LZ*p99);HgeG9[DMOMtK[U+#MC\aGDq&+q%Oq)^4i#R2M\ub$$p&K]]E#"a3LO&jF-'%hGHU,WcbV<':P3_M#%WWBG*[`Y^a\"9dH)0Un&0f/5=p(BBFlu*Q)XF32*ksYUm5H6Be5P)_fO4d'Ne@$f+CJ\a:,qdlT!8$sI8I%c(*-kNFgsokCb2>&Gb<I.5W<]:WlE=%I@$HWf7[\!d:&16?BUeQIa?Gd(i[PW\d)"Yh2(Dk'*?B9XWlg(S)5.q2O2"VK5'Kb/2ft%NYC-Obfajfck'k+>c36%l`9?3A*7sO>"#6c5m`Nn8?'468nc'l@$MRnd)=q2`GUpeK[5NU:_-03."*e>%7Y$O>rA;N3[ZcR2"FH0%32*UKBGYbcBLoKE]lQM-U.*fm-a_nl8q>SV-T$E3/>Us=66dhPVM0"VPB)`s.H?*41snH2ZmUQB9nO&3PDh0_$),I;_sOJ8'MB:<%Ob42`MqCYQgR/Tkp%+$9Dk.Hndf1[]BU'FQ1)Q]b])%BuHFm6kK[scKpmi7qp"]m*)^G"Krgj'l5B@H"*K;eLdDB)2l(&-Sfs9BY%W"VKRi^OQ;:'aR?a5lrAcn9P5U!<o1PsWi7I*fYg=h1m!K*K&d!-ICV"t6@2T$@S#F"0+fSGAg@bJ:.8pn32="r*C45%kRe.RWjH%#E;l$r6iRi:%*J;-j_I@(HO5.9F)*j:T9^C+Z(Ie/(=m!*=2aMh@i5>JZKc4+:4`54%km!R1Pgi)*)t'+gajVfa+:\.q_1^qGU(4%m=`i^0[a5SN=_QFARs\c$),c=]$lZO68P;g(d74.K]\kd8tKOGd#PL'V/:n4+AX_$m>2AmCP=MmG!]m7UsiStM%CS'%H)CrBV%]u%:EtP46DU]P)^.$RYr*"PBI.<`C!].U3&'*6VXIJFe*I8Z2#AljIIshMg[RrB9nj[c4Eii"XM-a"B0'^&3[t3`l(H-_=_c^TTH/!p%?rqM4kfV^+2_sU.R__"*6,Tfo(/q,_#&%.\),/CN=p$eM`3<LP7Q`aCFRdL2ctT.o;u2K1"e%e.j?Wj,r<f8<'[XB<2pVoZ)3?#S%4sPS)Lr4U?j+#)46)s%,rY_C;k+$VgB1HtFBW-phR8$FWF^oo5eh+AWl0Q_i[oZ&iM>\=?5kh1_5;QGLG7l\)B1R,_SsfPfEf7.U%aIcm$O:K$H5LV#8m`@coS?h*KSbkG?.!Oj'Ic+gfqP57SP%<bMeBd2F-1p#MT#pRl[rRZH-$5ZfPVGCeMlLhNX+Y`"nM9EaAP_3B%qs0QMS`X)4!Em]86N0%poA,\5-]caT.1"BQ4SZq2r7mqUVgV#uRMHf9[*Prt\3H8+5*JhS?:sC/L=Lu4370pr<,3_,jrT\eN9I@h%Ng7;Om9-&!<RK'INV+0^KC,@JXO!sk62Bu0opKE2WZ11Y"BMBROZmhZ9$e;rg1L]()l1f_mfG;/53#pO'%goj8YKjuSM\-09B6r7%[*L:"J^<1eT4terAW%o&1J:ZbC>(6YLhXZdl`AF6<e33V=e?#t\?[?--:o>:K0/<RX^BmMHm=%deKWh#:AW1R*VE,SI3o#"=F`5j%5''5%-=q>JB+g;HWLlbSR:h+im@;L-qe:P&c=]uP\RrMRKCbL8'@R<VSBp9k@TI.)HmUEd__j751XZ3elGiYD*>VdudlF$D;'tUs%o@_@$^3"=.0=El6kBqHSK7\-33M6+@#<^!cT*\%=SbC"tb\@ZcLNUmTWY&h=29ojeFmAA=SBmQNh!;LL5!/>#!a(sAT7KloR:]8Z%o//\"fdNJ$"*iX6I,]P915I?ri-]]=F_2[`kBr#;'SnR,ZQgc5/0!\,,i!-U:d3pV%*sC"I-))6B\=i,Bq;JUXA_;EP&@ioj"nDH%'1"\>1H?=UCc!q31O4b!EG'Z2+qR7JB7-Re2+rEQ5.e)g9kSk9$d]1FN6cUg<UEJ=c`B,M(2JlTgj_I]K[5Z?(mVHUHmW>H+)$&J%BY0O6<Z9dM>,gt!3S9p+6H7c([V*7a,8ki@HZmOfOEYNe'N3b1[V&4B@o$`aVM*ah1YX]+)fP77_E+db@05H4p.TfZe;<U]%7SX<%dlim(d2]N"h%!.d<m*:/4eM![ml%aiSeEd0Sn\$8;?g;C-W;;$\Pm-f-?19Ngs#IcAjA+2G.)&YBtE%aB7%Wh.(L.'FgbqC,A"JE%^1V&'l/&0Khm:=GbJa2B3eta`Hrb.6SG%ofOQr]:Sai*kEk6ppnJOO&E`gYPcZisE_!%$/paY*>G,BYaZP$t>)<EY"PnU&o53#t8%lnVF%j6MsCW`))[%:U^ob%H\?]==bdk5P!u,CEOJc>@sTeGcLWf7WN0K:D]-KC>5M<6VG7q4=!PiS2<F9UpuNqjm2DH"G[7&dR;M%_NN'QdJ9@O'[hB%M=6id8L;'V&O,5I-DM$eB1?bE@EsPPZm:nR=rEr8X@V9MF$=AZU$WOXG^*K$9(pR+bWIk*[rou/fFQ-_2fh/=%!^h:#cM7lV96XV+SBm9F&)>D)$n67p3p/:??or4$SBllCqTeG$lXf?%XgHCLbX^*=QoUcn&9VFLSBpD%Ei]brB1=l%2DT>;@pCE6%9BU[ls6*MESb&6e>Wm8[faui6-#]$o8FYRBj+Hr+F/O'6F$AoeiH6>mG-%8$3KGJeh5>U:bbWRl@Uffcl*Fl1RB9n/ktHTdDP&`L%ZU.DACo#BNL8.Y<8Y;Dj<X^cq0SB]OXg(XtltJ.U[cAQZAhsPt*g-TFd+3L[UsIm8&A'087WVRYI4'GtmEGOTGGNOb^PWD9,CO19%nSOQ`R=.ijIO9J4R&oCM%YOBk$-kS82UZ4l:<Ilf%YODAF\$5sRB*]TaZ-/1dV%,bq6_4Ikq`riFk;4?qTMP[^%k(mN%-<ZX#JUB%ejj]nThbKDGK<DA4jcIR?"odNen5D./\.HUT/!^\902CF8q><2en8<gP)8iLOLm4Q)!`srd<KO6la+SQ_aaK]`+tOk&(5)]bfcGG%T@*YL&ORpoAg4fa2]M!;cCqp9F$:h04-T?MF$B2X-#]$oL`bjUT.-E&6#+Ydb%JX](#h-sB@*Mjj3OOIA7;.Eek)Kj_2dn`3pAGT%XJ.YEoU-b/-\lkB""Lkua3=C]I\LTslSBb8>"2u&c]G@DDTDUteY)AnU(q78N/2KC5"!-.[$gZVOVfWlSbJOZ%\oaS5<nYgh[3)*%&G%\V#CYJA]e_l7VP:?`_O-t''tK*f0gA%e"ksZ#9I47_Y_X0RT:';h>MU1e1R"cfOIV]10l'G.0dH9Go-p])HI.qtp9U7u1\3D(%RV#A6;j8<EX3=lqoCKl'r0/f/(Wu["=rS@j1\3D>6(0[%q&.)>4!Y<uB6'ee$]1;I)=;5:F;sg-UR'^7UGG+rc.>L5k%@5-([B<D%N2aZ<UqutfGtin[*V2(ioJQE'q3_lXqTd=2Hid^2_>K6>0HkHj5:[*Af^i_;BDQ\Jp)_H(N.h?@+3`&MTh@.5k>%0HDjq09SbST_%4;0_:nM>Q9D<mVb),bKE%,tnZ^q-^i-[p6oR?oYZM>.rdk)9f0B>SMs&+r?gN)t'G<:.WMNr+@iZk5O_/X.r2-@Q/b<[4YRN;+8'%dR_TpcNn-8?>7bM"5_@4U4$W/a'/5=c\NOIS2Sf.A7[Mj^6:`>gQlTpq$_?tLU^2F6a2<V0g5])Mo[Q>$(mo`&D8%Nc`B=6I\V7-%[R\5qmCCoY#D;@\R"_!j1YK*Ec@5I+feXo%(N,<t4)VW'HJjYH)9c_eios^o0NV)M[c;Zd*0kuJH:I]B]p?t9bif1qp6k+^?81&/%NT_8AjQ*H04O7E[!`/!>jr%c,iN8@+3>:E<;_dc"XJOWj4N"X72hks_&BnZ$,Bu[A&rX,/Ich?.LN`/KUQK$KRi;4MP`ka9o/f=6%<7IJrR1_p*G5TW&YIaO+kBDYffHtcS0MRWCE@,nt-%:L$)0KI".]ZK0_p+*d?>$?0oIi8/F1&-=#HoqhXBOGd3g8_\[>iZRYFJG]%2b9JGS1.P#7-[GpF"E:"R0);&K@CbOg(ZVHBB8:-co+X3G\P"%4f*4@$D@nuB@PJ+8:(n/,HFmK4srO,/@Mg$CsE;!+BtR]3F`k(%#8;E\Ec,Is$n>n1X^JGX->,_dHq6&U1H$BZS&sT.``+6=<i9qlK#u4mRol0mN?kiUB5prTQ,Kd<M_h1,JAL4R$$k80M_h]\0Gnsi%cB&[%+$@i11iJ*2MK"]]Jo%.pO#(MNf&Sb.B;eNAO>D_L4t;YlfJoB=3']ZWVf:3<U-48fK>#*YBF*dR2[Gf9i,Ane:A)4DE@1;f%S:6PZ'6Z%JD^<U2fhk5L,B62C?q#(\?u[M]NL]_`M_gYH<bVsXB.RQP)2=-i)2g3)h&VD0c3qpqNQ%:uX=64HB1T"##E:MbXD].B%cLa%6.6o4$B;2pBW-9:q=:G[b%j#@c(5u&XGarLDe/U@fB40bqoc-*>O:ZNjnMk_8GgJD`5DKcuBq3;#=&ufnEFq'.*1K7T9FE3c%C%`ZiVQCT]`oG8R=FJkIS7tr6@s/nUc2aV2"$Ut"R7S,kfm'$X=s@D$j35AejP:<+Ad-`$!7Z:aBuC*=g@7/7mV!+PB8%hggrABU%kJXajEFohZ.;e*bG219SeW%TeBKh>NB-(^*0_36CN-6Kri*^P:%h[3YH(9^\;djbhB=a*K4IpbfnY,$)m53+KJ;-i=NAE[:?/9-3%B>Up\:Q3:2Jf66><agVoiQN=%1XfJ<<Za0DYgdggS7nF,^(Zqk)J?hc7U*(1\DpU\CYR;tZhU&K9W)lBMA?Z3RE$0dT5mVL*bT_O%KXD#FZZ8B7anO_5#0N[01isdO6Q+@mj%L^r5AB+sAuu:\X23gijA$ScNQ2q*70n@_is`#[@G&EVN3B^-+=8.B81T9'K?)Yf:AmK>%X:8=]T#_eBOCuRE-ZUP-mShsU3>3nJ?oNn3+^mcN&30hQVq8O*E[KY_]_P=`$qZ$\)+;c/KmCOK'9P)O/mN?7PI!UP][E1;l'ZV.%cV2V0s591ZS]M`]<SaXY1H@5u7`/o:Eb9EZ!,ncUVWNf4Eh'(uWW#4&9[6Ub^@*B-<kXM3@E7HQjBD]%S]VgKSWThdjiis'kJEh6%R;eY%<`?LIYLk0OB*a=$btQEQTM/b]9[6=YY"\7?-Kg/%q-1+[&$"cDT$t(ERE:jGHU-s&P;>kU3*SG-1\k-SZUG+_ZR4df[P9ek%n`87?S]M`ZV=#ol1HE@-@Z>,8En1N#:E,KR^"UWB8gYlt)@<?7),/?"AQS'7W14rYk,3%<s2ak<14<Or@^7g)0<\(EObp=uLT#<&%#ob;6\u0[V,cC`.&@Z3eA];M=6ttV?U%jfk(>(d'eQ,kb$>-uC#H>)#]ik`#$a;tKY/6"5[Q('C":H7!Qil?"#\"#A%sigPUg3T.%N5qCAJ7MDCXMAJhPhFE"-Q#D*Ce<I8X'0^\5e2g@HQBMEOe.>QoX<4ldb8lGX5(Gq#T(\G_+7L(:i&XR<(c'@3Z4&DM+p:G%u")e%4GDHNGQhQmSse79N(7FK2;@r'l5h]URDL)O9kp,N?Kllsc!%-phh0nj/d?K7+WW&U*"^iDIU9J2kD^Q>1:k7qBgeZS4>KI5C>*BQ%0M*7RD'R'cC8=I`7M>,<qPf'e#:,K)4!>1<bA*C&0[]q$#H9'qjf2/Yhooa5dE^2fC$'h2U3--#Y&0j'6a@GD)AEkH:;g<t-40+D%5l/X)Q04ef+IWW9aqa`?OC[6/2Gp\HP7(:%12<%Y,r1W,dF&\!U,fje7TD8HKF5(=^m\t,LIUkqE)Zu5lpC,oc`iFc,djWX(7q0D%fpb:G(2%WQ[3e`-".n1Bn&M_UE:3q6)'d0&&m4.0n-%AtWl6AnlBEdKfiCTT_%&AJU91NbpPQS6P21=8*GAK0_j9s7Jd;#$W,=[k%LB(Y0QA^8E)*'p4R5driE'f)$>uIghHKJ&tJU>g,,rd6>:P`&"mE'rt]J5Kt\OpF20n*.u#c%c9\DuGWLG5chND^>VTll+7;!gLP%748;"%=F,.'P=8@ip^]4Ji/ego8pa^L4Ci@!L`dIl4]7tN046AbG,%c+HM:^,QY.WKl(T%p`p;FobOVt2alY7LY$/F(qj_A.0_B+%T^1Hm*Ppp\&mB<`,^,;KI/jdm"Z$<#LNR8UJS=B#KXBJVeV\AY2[([Je0jc2PGZ5_V3773+3>OJSP&.5KOVo+OHA'5P0eGK<h^^C%kq09`@Xhph#4C9e@Xh@&`JNl2Mh!<]9E[\9')5HqF$3&,dE!YbZAVKPMH-UI7g9G7'!UX@X95;\Po6B,`Wo3d<j,bn$]A;WK<@I5%0ZHi[Wu-5+qX@?!L'nQ2`]K&XSTqkB5f\U)mi+5=FB9gAZF*X&E\D5o1b]_k-0ZdC3?>K>84R1:17JhVo`lVui/O;BJsH(\/WeEA%/a?+\#hU;[J2__&Um4<a<'*]CK+&-p=[k#i/S0t"<V%-6@'X#E"5%08.g`9r_fIQX\Z(g3lCJ4J\E-[)EMILb4-T1"WEi)30@91I%-Nhi8A-R3PdK=A@L1_][U6h-qYnk6C3>EB(#Vs<9%'8+KS@6e`!Ca[b$5kZhZVekC)%=q.q+a4K%'?q$N?E,a`_HQCN$fnZl3-Mm%7F#VV;&Y0s-)S%2:le?D_1g&fXEp@u=u!1GdmEa?`#p8PG``AkF-pa\N>+G[V[K_M[Vqo34HH9Ug]\<5,@5ttHIt#nm3W+m<[JX.%X3)03R7c`i8.lUYgD*S784$TD#E!Ne5jFK$_P)hO%6PebZ3fQS&2;sM'LuPMH4gk^D6'gq1cR0m.^G(W?!F^9$gWj@#rPd=XP\Rj%_k9H!D-.6=!QLgj-u(GkjNI`kZaXf(:pkqe?Z\1d6dR8g?<Q.pJHfusM80+#<#g!DBo<5SV]^4r_E6U]IVkhc@1h`[CfF!1/eBYN%G'MB`+BJt:;_i9FR%\duOCmj)c:9cJ;)cD;:`0?7.3SWqb@KP^$"fb5<]":,K8YGI[O+`=K7ql8%%IUo,YC,Z!RB`;i?+!ul'7WH%a<&Dl%0e8*re-!EQrL#m\Lrh*V=KB&`4aj>:t1E7"5&RjX[?9r,R<l?@6C7W&LBAtA9`BEal\OQQotQsJX2\`N=hshRsr'>CG>l#%[AqX65\bg>EE7'\5-MW^bZBEbL9PNM#l(oK/6G2K,^dh=Elp57RoXjkL_ng5lBYc/N"Yemg8,qW-/Z,ZNDr:&qNJETUG1qM[7)*K%c<;K/A*[6o!HTX=CjMN(11Etu:seS30orkM[US\4YUK)&/2X#\XL<YRO91"55i/E;``ff]/@7"V(MG?\>IZ=X:8l\EPuP0=#=&kp%5i!/a#s"5m!BWEV(T+tN5[h_:m]KCN;Y$Mk'3jHuPU,[$RJUZ8R[L9A:",aRShTj[k.?qnq\,-deOVP9aiJR;0Z0Z@@D_LZa30u"%<FP>D<ibheF5K?jDi5%Q<O[3@$XifSbGt*WM^AKlZ5Nle5ENKX![>O':_VH>6Ck3'g="7>$"Pb5r#n\F8f7,p"D0mMn$.?CUn#?M%\868Wg>ZI:)\!,F\f`0>]+/Z;Y(Kd<$H7F\TrN3g5TL\(hX1ZjLp:70Jmr?ad,8o]Gmj\D@>]lW<=TQ<q7!(G.p$ieIMHCEKL)t3%S-Ilb[6^jcca(irRYD6ukg@Pd$W&@uN?9le9UEZ=a>OZqjJpk`9'Ema/%nAMR+<=jj&L1K>1sA6ES*L/V?E8P:c1qc=m>i.:W-3m%MqF6(#E[r'e6[a;92<&'htSYTnSo9.I;ebOHp3*9g7SmBRceU+/PhcO9NE'?ohfiikj!tMZ=Z1TaOopOR'ggp*Ztg_,3lR/[O$Dt%3i5J+JR'$.U#KlRm53Z%7AL&fd!#b"_&6aS&iR(5hueS%&.i#.ReQ%X3JQG/i^o(=DL9_6\qL2a>isMFTe3o$,_ALSCY;`S]L4\W%POa1^24+r5l,k9J^]FZ8m9Kcu[21<k']'@p'nL4l[,)e".'lM;M,5fmC&38]j3:+H\uNrhl;R<`/QMbj/h!2:m]]'M8qUs\S2m"#%-CK<sNP22hGL=c3>XM>2&K5jAO<K,Wn=5RG<nWMYOVnH'8pHqc'S89k)349_l%Tot-o/UClCaQ#&fiY,fZQh5JUN=`Z9tg4Js8VN%ZF1&aLYImKQ&sOn7SMD"DCk=OZ`Sd:"!!:3d[inY-bc-u:a93J$(qk9R%Vkb3-c(G^GNT+=Gl0FL*]*^<7o7q4*b5'lJ[)"CNmE+%o#1QXp>0o%N[).OIKI7$q9oq=UBsrG=]Y<Q5]uDd^!uOcYgq]O-m8"MKGt"&Jl9cfs5dF2B3*PC(_/fm/<Ju%gH:<2Z?"U.a0jja%UdiVVcN;'6"O]aN25!K;>Ceji!J;/V;F`'ZYIki'rod9D+-K#.87`+r"^4H96#oi#)8\@'LmnR2b)D!i?:T,A(^$`$nuUW"B/;Qj%#?=-q-Sbs;PuA&8>S_To$aKj'EKkqqXJIs#2[3\go!G]SN"h[6d,InK!Zpe'E$DYHSLFj;0@Tp*5fmEpRC/#?a2WmHiOR2`5<'\0%n2El1Ic7r+iJ+BCVh#78'I.;2aQ(;R!@#%?;b3Fjcn"<qJQpO%GKl?-!@K8-.n4p,beE[T9126$UXF6uKj97*j&H[Wi#4/o%+P0I%Zl#o6<15(ccGOdeK`V%Gh@0pA@B(<EBFNTJ@<aD>KPWM48qY\udMh>fe.2\iFVb!pLAMu#FLIlsQ*KD\m^T/07trrH'.S&eC(PpN%VgTal.+rNlU:/P>@@.foD3W(n))VUud0N!iG=NrniWj$(:O4:j6*VU=DX:p@;#0[qk,rcfkK4UaEc@-77"tXENA#%14M_9D-*0CS%p9ciE9/m2Y/,#:(%aPo2HNTWUH8"]>S!k&FVY\gl`e6D.pW<R)X.dJ%^WKAGbLA91YCs]mm"=jRHNk'n*]NSFG-u,0>_=[6DI,*s%`ZWg2e7,0"iN#FLK38Kl7kb:TMm4B+EtlHg$Ak^S2M'PZ8W=ngEIq2/1U]/R-%Jc#*aR+iIb!;-<F^TC$""U,nA0fKP/1P.37`%0%,Y`)DUW`^qGlmCh69($\Y&%j]=F;8;C8tAS_._g/]cDbp&>]9?1T:s`Oart%#b]'b!P(0F'9dMO>G=*)i@<HZ])Z>m:0+H%kfj,G%QupuTV+-D1/MV+E+]MHme>,MN%nOF2V1GDsWe_+?:*WI:4TPn3J=d7$+aWM5HC'p_je76A8gB?IAmuO\2*;2&#g+p`NUS.uEMqgY%Z"M_?6oAQ%C@@kmPR5pEUiSq.%dRe92b>Md9?d:/CSR*S2i]iF<U!nO>/?"1b!<I:R.6.r&Pm"-NHh1e8"=UQjsjY(J<>+\?6D<2%m?V&eg]i*F(dOiN(+!o?:uM__K>(8(a@-sZfH-C\=Z98E*YRa4?jVo`28CM1*=VqZ,%:TeM6'rK*(A_?Esa3*Ne"8lQ:*'3nS^^C%_.k7T2$%9R8eI$qoRRr&WTfL=/@B[I^P"Zl7S/AZjMc)L(eG9r:BGJ>5H3,k;-8=lmGqaCEXfN*0sK:s:Hj.KaNu!r`#bp(C4Vat%8J$,<(]`uH-Q-5_h[%5CK@FPE;mWhoRI%$5'D&<u;+l7Dn'assX_8uA-S0f[Hd!V0T7H0;DC*NS=^!5(T'5DN839TK6hht6Ocje?%$Zq(B1)@ET7Zb5ZT7tGo+@'1T+P5OrP*uVHg.m'M36!LJ=gFodH"8"k1`]FC<r[L.cpki,CdmsB9SbIB<)c+(DupmXb_glN)=8^:%$f.d-fs!#2lk#[F3&Y;q#9`.$8fs*"*?_S?DNU&s<"9gT5O8q[@$'+.S[=-P';7c"$0g%CKrS4)7O4WM:K<WI?ZU15JIJ<Fe+_9W%h^QNhl6IZ0](ul5EWTX5qHhsp=W!n8;]+aZ,B.uu@M/"[#]g3\7"MB>5FDs!b[VYGFDiVhJ2=DV5GFDc1`SD%POtM%7g`!^7*Y3P%U'iCRVJGW/%(p[c7L_in);SOoTE?p!EqRE&,D-;P#d]($"*#R*hRT\kKQF:k59b5_MD3W-UP1)t'P^_j:,1WDTr8eJS<ogbp*^&h%Y`T>WS#F]/RtB@P7#&<G.Z,3],i^SI7^gbc1f0G`gN)&)^Xbtr-b(:d0bU:B:A4RAC<bgGJJ94E.$WDZZ_pY.<%R0LeiRGY`#@FQ%"LjPK+>I%8%EONb.,au=@tB[Z#)/>]V1;=fm6.fn.5RLNl([Zg%W>__@YqK+>@2ZJ,<7]uTR^F,@C?M::!P0:%&nkL.6W8;!HpfV%,T#Z%+ZRkGR1NOpFOA6ePnXIfM%9^ob098G?t'EJ8-@V19YB#a4SNY+p]e`8Ogc,Xaiq'oLCqQ4oO<ug15Ha$G9T*MOTlj2J4KqS%;N`2UYq/n#Sa^^9!:Oab<F31<P40b$)QQGN.r*p9!7796pfi-UeHd@mD0%?N,t2;:6QQCl.i=_N#tn;U?>$S7T3+m[Ri9r?Ua\@9%^t8+8!aK>F2)hisPj'D(_Qd2!1K2,sTou`?%q`!SEZOam*4:*h>/>@2[*_L#(YAg&?a7b%<"rf@-R8RU[4XQJ000]]b`%+Q+B;;>%,HZoASgbO[aH'Kn!p)_H:_8:H][Obt@U<)"as2Jf7peEVPDP*eLtG=DD5"(W"ORL9!)_D^XGC!FKp@;)#.+r7O[f[P5u2Z\?4N7I%BcWUSiCZ16TG9`ZE%F'66oTjK8sBl"ga`(9?\td]jREnH*a0CXgut&ZO7_n@Xg+&B1#WtegEhD4ACME<TE1ub1`#'/C^1/>rZ$X!%P_n6*Q8"&JEeV5^E-b7=k`jSVndpXEBF1p+R(C9MK3l(2WoHE>$lE9We%JfGO\Z,q*K23di/EVC<aa">:5Yd.mn[sWZktt7V(e&O%k6*+3oFJ5'L\X\qT0U"6qC]A1GLSm)aW*V@8a;-JdP'3s;o49$3X9\F!jEhV7P]H>/(nZFTnO652*o=1_SsMO6b%<d6Fd>"Tj_eb%^g/<@3>+/$iA(u-^[3>FedJF9PuP9U7glE^O]D[aECcLN\/OLsg&qt!3^tQMkSK$>P[V*`>e[;)nhB?r@Y1ArnR+2BFFm&223'i9%;R/96kp8^s?10&Ej^AYY40@R/&>;:eSIng.1C4X-b%QVM'D"]6<l.@5M1`_[PU+2i4>?PcTJ.%5JZ0GOMp:2MK+eHKbfPLHNrZBs%R\Pm\"^$_,?E20nFW)&"#$;.?JYIr%W<U&TS>8nB2o6oE?jCcpAgY)W8Up8hdj*Fs@V$d%8E0%k!*UsIHpE?XfFaAi?<j/i7TBmd%JOrJPM\[@ELMF%i)[CIKXDCk5TY:J[_o#37,KbWu&ql=_Dt.4c=rIJN!?k[kCC'W1`<JX!dHV8[JTjTm94m,:bSGpJ=:\501#^U'%7c*M=YB?$+9B\\C^c&slG6cK%0t..M%^:[uo7Kq87\Xc+j:$8t85)DN!\+`"!qT<3aT+Le%\CV-?<iE=57d:%,Qqm.SQ"<k,YIOT%-]'(`W$e*WJ9#9Uoam-fZlDo"FGs59"%A5.JoDS^d#k1m<u6dn&:4IrFWdbX03JRV6f<tI>b$rE>,5]'Ks7BJ,hCQGV@GL`,Wd0f%QHKOE`,#b0"9euqkZlD#OY]&BlpM.'-Q]Ndmcbug"[/\29!]kBg^\HR:8*rOH@]5N8Wo+DL]d7Ll.>#H<=QkPRM>>s;@)p=J_!sj%+Q0L5;P@K3FO2_F\dP4.i>a5.4'j%V2e]Yfht7GEl?i#P(Vk5mC#dQ<>sd4BPRJ(W`N$MiP8S(OZ30<8_(gYd3=&rucn0p\MlF7t%_5ZhGQm-RAi',;6L%8=X'O6I&e7_h)@=ksZ]Z6CRN)DnF.5O8app:.H<8_g&E`B%WTMUhEh?TC3A$F!F^/0W-JJ-q0Wt*6g9rAH-%-ESOS62)\\#M1NWA)n3<ai`*<=HZI[`sQ,`8J`rK+3lP1)`'VjJYq>3B,rcDi7C4>L$h$KD?taWTr8o9s+iU7-P.9LFPJRPYY5m;%LsFuCZn&Epr]s,;,lO^Zjl(2"^HI_nEs3qZkqj?5#r[97f9t^PHDP]lim8>4*QuGW_5<tE$j+;`Dhk)V&d>\o2P>MjMhV.X/\2>6%>\1?F'`-O6P^M$o`ZTq@!HCf+@Gt>uLa8(6#YC_K!lO[>re[H8MC]?)M`r.1j[rnm8=^@R3.XR;QSD>EebARj#%ePBP2,&4AlW56%Xd@O0]'AhQP$1Gu8-O[dig+<KSJ6ZK$e"3C((^K&.4kf7.-sohMV=%hNufZMJD6CK!MDRKD:FN/5/Kr`V\NA\*=k5sRR!mB(e?d6%%UoFm81H2W>=2:2"j-MXL*AhhF+X@@C`7QBGG6P/B#d!p3\*W;!NV7X^_jmc5LckLD2)_,&6QjT&ET/<M?35\lRO'Mc7n%VeCbrW%^e#cRgaMF["@'#h<4k<2V5-gVfaaehc7_j_;:BM#W7!5o,FgHRobotfa.B-Z;#X:I(.:(q#7^2DSu<1S8r9XG)1[aQGRR%id+Qbi%"`-.^?2L:f\:(S.6!T!W/*3-]!2ha"phO.NG6/D/W0.E#*)'IZ-TZqOSH,ETfNJJ68/<t)(NQK8gJe@B?:%%.A]^Yo`WsdRdFs^,%7!6NU.gJI3UEPBc,\%:e5K_TO-i'@r<=jG:ZW=Me1P90kE1O!FN<tf"]7im`o45>FnifS7hLL:9PDV/:aEBtIcB>M'\8(7)80\?L%&J%W9i\D)\GXY;77>577S7!'@jOT8YZ\jr^8atX>M4Tf0(PNoaLBmm!\B;$1"dpkK/e-:Y/2qheHo)$5#k:?<CFB_+$h:kp-<k#/%82[^r97XO^*n02XM*^*q8Xp6lR\\D+jqVhE7XkI8giPbIDNMDk0I'%n^qp?IKm3V"Lr;BqWKpF.h$kQ0L^;)eRT_:n(?%^eC9].j%Bg6.bYVnNjLbq7?W9[uR'T#XpHJ2IM)An#7Q&[jrI#c^H]ZtQP7c>#ahBu&8ZCEK9W]QVJf(<F7&h/NO"UB#SDTUjLO_Q9-V(A_l%ktt?[dT2FT<]HY#_C(T)e7aF#N9ku,Orc@^S56$QY!CcP0F?4U#r&qu%MFsM$$Rs'j_,g9$h$Iq%%e&CE[TM!$%>?XZ&7\r42Is*%N?6aq8$8'AW'6>RQk3-=)"!#-R+6_q&jFC-!4C%fUI&WjTP`\/V\H-ND:IDhJXL!;LLl;RH%LWI8HCV'P;9fa`ac6001ld=>&)G7%ppngg4.lQ]T266XM$Ti3Cm)Z#/.!F7lD&=)[MC2!*:ckB;uhN4#,NZE!cQ.H(1e(I'BIt3pNRoT]!<-J9S%7T:1spUK,4iJWMSS7%WiM@HBGE9'p`,96eBeG9W^dUr(\Ta]CQ]W`_&C25cui_AT8]_87S>0:6jh]!Z>,]SWD&^n+n,rg?p4=OZ=I3[EAK4:9L.1`>)m*T%%=t\qW335Y<-^kP%YE">B9Zqp7+bL-=lRLinOG^5cfo1EJ'pGh93<1qPRdo"@U5;Js%4S!I*u:Z%&/9K!B&+]!F->92.m)VJ]-:K%W=crS*ZFjo/-+1O65]qHeWXq+GEVu"2XAS&JC78V'r%Mj68/ZO(4sbm$qaRq1E%A>Ch`<Uph^;@Cf,80(072c=qXV=\5_E!U?Eqi%'jt/E(o/DuiZnn.2q-))5t4>R$A-'IGtUP&!/qM#Y19NsgkhP$6'=#=NZn`U5#3Gc5S>]3^2H8K&rJ]+irKV"JuKtQM&[k*)<*hf%!`O@kp]?t^!_OArURp=BU)HP$7je-_!S;9"ZI=Adg/X4:[ZUd?B)tWf)ZZp2,ZW=Z45gB2bJ<+iiZ//r!D5X/AqFe%@FFJ)=.)@!%!^M=R;o]o>q'@4f'Jqk%"6lWPT?b):]o`L3;7n)eKq\]8E;Wgh)"7-_a9QK+A5OkJfP6*%"T_i-(??c.H40']1;6aNj^\Oc%unfe%#Jb7bdG2l\<<UsUbD-t\S<TV,.i8WA4kf0sa%%?^8-TK_ETC(!]SUkG;!_='lD5u+%N)Mi*5/mJ;^CdeOV1Q4HUc#C&gIPglI5k#%"FI)6PEJ$pX="$01=8"1bD'I:A;XC;_f5)b/LY%Y5[GMtZ61fVBnISR[(Vu3U,$0eouAL$FK/(_SmtfoeEMJc^fsMd+XT5Z!d5<T%iUE5>fJsMu<k4jAGk/eQ1ZWl%!CiG1U=*ZtKbrUQTEoEZIZf5!Z+QZd!'J\OaEL+2VpV4>&M$-$ll/';huG,)(S#\;MIh>]j;$XH%ZZ&R3qmPY#&X5E+p?dMf#]STXGcq]"S-S]*o2.fRo]=Ak<EgKS1^1gd/!a"94;X`^Ng:kT3S:<DFC&q`A?Q&K"-HHtUp(MO+VNCj%$"[+!)_DG.i08a4]X()fn56sbF[V$s;@^127D]E_lSCQ-U!a5Y17XEPZ:2N#"#i8n!`5nTQ(&YQl\Xj7_`@BnI,F/P8,t194cH79%UI/oZ^E%3%d4N&m^8$rJ#&9W.5VSV\"Jq@N&42ZURKSGkb[`,<40hIt,?OLkk%F55K-jk;">"m3Cf4'd.B0pj0iX5iDQhdr*>4uo%VtmFt8BdX++CcktN.=PlbcXQJd#\oETaR$KO-YH69S$UsMP-0+$uk<+DKd!Z1khB)%OBFs^]X[4n*`<GP+r\B)HUm@&9\4I)(IVI%YYY[9&ORhor_]I[-S,8%=L_H>L`$EoLK*MI[#rA7QP*B.5R4EK*ZJ'9"pTXoEb[J/K\VF%<.Qt?$7:K3__S+GM2J9-At=5UYCl"<%^:]Z>4<:$kl86/:AepDQa)h?)j^TQ,BP3b3faCPfK7)`-U;DK&:XnrSL@\R?12BK9>D^jc'"a`;[:g^=\#//jKliHup8VLMC^#k^%=rg*8'ha?b=Kb0(BX-LN(0i1TAbUl-UE(j4',^VBM`?o?VD1:k$R]U\Pp&Va'mkNb8to_i-lP`$FO-9OI]^*?:).Ac1fFhhB*ED.%'4&!9nV"r7)$H.qp`[Go5d_QT3Q==0io[hR5RSQR.1hc!.XDLYH'sFM#objc>#$Dg.U4Y-B.81pCbIsQ`]kR`"UrC*NM2MU3oStn%;1NJ#HkZ/ukdX/uhYtUn*6<>2@YR0EAFtQj":O0VO)ehI+i''/!#hd)crgR>Be4gb)QV[]U5(cCYWUPRaIV6>dg"*EUWT2?Ae7SB%1)(kGN4?l`+EM`r\8^YpYmTn-FiZ#eNi`HrL3PrDEJ>N&L4LHbd&j.-F':B6b"0Ggr=G,skbgNGd0J84e=6k7$F;o%q&Y/W!rG?j%Nn+huKO/B["b_q>U@Kj;@0fXgjZX(Sg1j-b9W`6d$Tt`ehFU0LFB&(W(i$rrJ?roe=p94R!;Ednr_qH@9"L4qP'm<jZcFH5)[TP8%Y7YJYOR6#rTHR\G+9e_i<%q_"iFk(54S__E#ptuV`Fm-J:==1d.0q2N(@$V_Ag$.]3tf_p:`bQ=i^'AmA*p@a%4ZKh2@I>ieNu*=%U<sgb80FF]c`U.J&E5/M&IHTp?l9SgK+o=Y$,!TcMSfW3R-=8M+uF'SZ:8:G2CZZMp$&-+;b7Yn$&==Q';f#;jk(pG"a)>)9qt=H%pelO%Jca>JT^AFR+1m.h$PZckL&qZ9r0n`POti-$@.!J6W[gYT"bCS$2D@GLWOsn#C!eq=.-UCJ,!mr*'9&kVA4oL@*q7d,Gb`%b%ND+h[b,\.%M9(=men=`?/(-7$ehB?.U&"h3Obm9"r1UrbI;`50km-u"nM<PY:[7ShK%@buEY<>qTb]ne@N(aK'JU1(8-6S!bYHtE%'e#V?NFF;:'U0?e>=I[`JIsE(C%)TaDI@@Fem;8AR3'A>Z%O]DH4ElY^%4T!mt=?X"Zs;UbV`LsHkphOTu@JN[;9DH&Gq2"`j;u1%mt`ldCAM9OTIK\1%FK.Ak]KC%&lTgu!l$/Tb=P"HX60Y1_BKBp;]O?\mg-hVb)%[s8=#PCiE8@EQQm4sOWY#cloPtBGgVo*6?LXC%hPo.A#^mAd:,)"(;u@UgTKf$6/_56-)`'G$Z#\Ge(-,;q;$)S53(a5*'^TV9>%@aiYbWTQ^9b0lWC-(S$AK<fBTAOm.<f5U7EI`+%@#MRTeQu]K4dRD%F3#O;#_g6/BWRFhE::RH5i+:odnEc+abRh#NF[?K-@HXK0U\lI(t-3@Mt9>oC+fXP#hR"fZESs()mQcHiYmmD%,c"$kN`7qcZlE^Ib![(ANC(e+D\$S>5]DpL'.kOmWFq>sD5MeS.8-G9AnaXd7u%9H"i2RjT9+G]^bsS@*.b,O@Se3N\B'MA#`fYh%Z'"Jl,o0.kQnT-1-d?CcFCI$eF^i3$l^T)G"Vra6[Sh+$OaJJ!!.[Xt=gIfoFNg$h01'ZO&-gWbUgl,pSL6:ZGihd>(rF&lDHLY@%D*^uW;TD2@5B85>qSMpN(05u3V,N^Bd2E1IOQhkEZN0_+#T(2g?@aA)A\='eK5QU,LtKu!qksetns'XDC!0p*%;[D+on&RN\oP[?%gPV7$&0Es"dBf)!3m'e)[M)o'1o*^Sg8N/u)5H2Qaq@-J;-6G\Li&mZFO686Y0j:ni#"V8@U$&T%gO$'%l-o=BZ;oX,Uff1fdM%g%3sf3oVJGgU&)`.i,`3cHa_!5SciEp@Fa(o'.3k%%-Vl-=-]r]qcG@RA@)/OF91#0OOZYk7lQkg1ZfKE+_=g`>'?%/+l?;##`>?Yn%^u*WLYnQBF#b;"*!olQ8+NY*O)JFhE8JF(ki&Z`C6C$%^X]!..PCW2]Kq=57+OH&K[Br]%&07HhkbW:$<7EW@(aOjZ'A#jV?'=53%WI#T"!L>dCOhtR.5BZT7F95;gG_&oN>QZ+;@5XY]cB./h3T)qZG<76lO>A4SE>2kG!mm!e]`d/]22mb6-:FP"C90c^_cWUnckD&C%E!^.)\t_Wu@^Fu%TLFbs"ca\P/CZ)00+.:diU)=P/:%oS1r7:GeU3(a(>^iXfI&+_d"U9`daI%'0>]1Y;SkutQKHDcV.VK5+Grpa%MRh`rd*%LB=&\'1$(PgaY\4WV?*qPGA7+i$U@sJL"sdiSKs"AF\<4!418h"6Op$dROMItBK*`M5QK1fVMXDe?-Bs1^g@'1>aIjc*%e/%kNLl2NR..AT$$#j'p:YI=onON-Sl'P>9FCZP:$mnVl!c1"P$BsPt;oGILDX!D:(2a\72he.ZBGNWpf9*sGT2ni,FrO">i[%XD%E4]&`(JDlNkJbnhMEqSR$-t5DLnLbMXRMcXW<SsXplfW[DNPV9^:If?T2SW89<EnV-9l&&@g`pf*gV[l'G+`/>XSk'j*9<6iidK&%go84ccuG7Oe_'18W\uBhMj5PcipX3+['cPBKQu$nUMPlqU?cht(ibWMLC!(?YUo?7Ss`1.[)<WF2=u`/==sf$_W=W&qs)YMSX:82%dC2'-`=Yk[p1!VDmrKW7<ak,-.RB^6l'$(,SZ&RJ+I`u9B13";]8=YGg_PJ(NM<!_(>;_md&\csUf0^]*t;6*$3(Sn"'Cp.3cV?H%fX[7EL^JCs?TR,L_#VVg.79i%<&-t;#=/ar0YA!cU@8Q[-pY>'@sl]s+=L=ZF;L3&"N!nf*0H@o.YBDI0A<Lu-<AWT*EI`8:5$C?%kD!:SDob9&X6GsJSr119Q:BhJR0gE2?'9#'6F&CE,?[mTWI^%i)__nL7dl=G1'8"#RPI:1KH-*@CRlGi\WX*O5;*m7KETYf#]?3+%kP%O/rOZB+4e&Nf.%Z\jO&!]a'L^"K,c(q3Uhf)rq)Aq9k_s&k&<N0W6DrMk^Ssdo6]I>:`57222=j@>c7<A>G#hL"=q6BSP%-%/%G"PkDR,g"Dn/CqNC`>-jNIE]_#(@C3jS.q\@/_Za@sF4t)P_sB@"YZEH'/lrc5/OJ]R\0\fLJr03'K;4`XKe5V1n(8<Kmb)&;#gn%BQ269%J^[%/lFq>7AU(1)FLG'nNmrpTi5YU12jmu)bA2pS[c$5jNWJe6YT"5Uj9\LIY8RYaP:>6(;qEfKUAS],ZIqA\A57H6-Lo:%FPnQtbm!qMo)A-sJb<WLZIMLGe<iZ<RPl?O6>ER&6Cg6>YA&!]-B96E<P?>-8[Y#d77'0d2q3niQ`Ld@hi[I:YeCj"MaeH>9;.!D%kX)LPKdEqm^+q.l8?*#,MN5am<g*oNUhpL-+UhsNUh+fr=]r9+1uK:ks!;K3ih$l5j9=pP:,>/u#&.Xb)WB$q#+]'M'MO?mJ>j1s%URl'd\ck.;Kg?Kka(M*cA'Q%=_'gmS2-%C)+E9H@csA_md.q_?8Z2]X!;K#nKsd8XM,/5,6i\I5"l]is!*tQX+iqU<@IsgO!>XQ5%oej/o%>K<Ta,CE!0.LNKlPr(*^K.Z0&>o-mGVCb*m7S?KVZ_=V63f;Nc:YHBn-;"=Sn+NsA/Ua'D?V=3aVB'0o9G>2#q(T,bo@Ir%:i>?t`en9V@'qAMp4Q?k$D8/u!J5'@e6Y\#PiR^V*!&E\V[8qaOtge0O@XV*jB/J;SnA9lSc#j.&^Nn=Xs-,tN;%)jp/"IFikhCS%pbf-3,VP.?;R5)>!>B!2"m)^ng:i+P!8&iQ,Y/F,X=uAoQ0ECV&E\"2M-WU&dI-8`<:\Oc,],be"#Mhd@[kiE!;D]p?8*mC&S:Vj%OKgU`S]sI(DL^>99]2^f:HVlJ>`hWJ+k[7;&th32N%+W($ZQ<XS]OPs:(eH1W(7c0b)+gZ(K[WAVd:N!`TDqQ's$m+Ad[Rpa$_RL%91S7]P$h60!i8(D%dd$W*sM5I(Pbt%JHBSSkl)Q%,GW09!<oM@4_q,YFM\:goguCPZg8-&/&fkBJS/NLC_fi[!I!kCXCGoT_,O1@%4S#nBBM=q*E,?fjMnk>uZW#'aRW20;BpQr56+L=;hFDC%lr'V.4\"ankc1BZ+-^tK@$2E&bsF$9YJ_k.nc1I6#`kKk8jZL-,[0S)%dB=,aa?4UI<3(j&VPZ09IjR4mDj3SlKeATpX<Z87<6JYnUkC!]"T^A%Fs@h7=?90#2KMs%A:5"/8++Ud8FDj5/`ftrH9kdYqNaIN%bJHVM>LR8:6p`4r![u)a<id^h7'5$nO1qZfs4,qfZH.Ir6W+Q[:4c0Sl1ai'9@X@/..l1i$UZq%oYRRNWunUd9!S[DTQk;B#$,Ob%:dC*YdN]Y^3_bcm:.,;s&NU"Y]2K1B8l@=:XB"](>p`^^6#"_+@-fE]Zm)(1!3`%,j;BVIZ#I"E./#Gc*"*6fTld(#A]egE_AU0S%+9kT&b=KR0H:-XJK^5tn"F:.5OIh+K?m,:H8g,s*,q2A1J9^j.`'[hL!ebi9PuCA,3se9AAG$0QckB@&BKhW\Gu[7Xn$=:^d797o%boBfLgsiWS10SWt!!U0>1q&KZf*NH6Dj2"^eClZm7\DE&Vgq)b<_+Da5R-g<BIHsK-&5VQfcc5(PAQ0Mle!EY(N,&/<"n5^U<irD%)rQo#pl:V.$OMpuUrVnTee`*F1=#[9lq5smI%ad[=cu&rE,G\meOg]Oe8Qll7NkW3Q:ie0)=muj8'$@YDrQk=`S+IpC(LU+#f`=l%(4atQ.rI:eS^a,YUcL1>+kY2Zq5"ZPg,V-FCRg5.,I;BGGtO!WB\:i3C_D$scbMD`$;AFc%jLF%(f^O_fh>T`lDKio?U>pPl>'c;%pf(/BdY7n9PqXo>*^ri/U**7VphQE9GH*ABJV7-aMV<3I6Rc@MU?>9KKF$'6^Ea[X)'S%Q#<Q`NU5L<YJ0Ci4B;6q<:*ib_T_;9I%1fAF7W%+&@\Ru2n-n'=6b*,QHKqOoe#X[CW_c1Z\S>Jus5Z]=ck/hLjk'[a$9\J^!D_0Bq8Z2_d<(3UocaYMmW+8ZjKaT47.;b1,%ME5+GTb_1u#1_lBS0akQBH/^YOm3I08`1[IAXTDJ6Cgg:"BZ6VdVt(7e[j:qq2BEZ/-WWo=4]O%jiVU@UBFEq,(_q=R+)H!X.,GQ%?!>G0^LI2N<G2_2A2Ou%C"U\;kEm+ra$p\aRbi)eplJgLYR6pdqD9m4.cNe@'a.oHlutbfd87O*ObPA4FOef^P&Ef4_4&N.Z81*X%TnagQ%]`l0H_FtB19MSk6,41bjM6jg7H-bNCp+agT<g;BC4W`"b1c3d4W#'^RW!nd;WrM!Z7SX).snDheFFi1^KKdb`MWbB\J5;e%nTI8\j89\L'NKFH0FOO'[PA_`.A\k6&S?\tQb\QujpqR5QY#,I0DnAB/S5A)<jlNb6l-O[7+-ZBh_IVXBXj!u#[pa]k"i2C4.ZVB%'?(CjgA4R-b.op.@V73^3J:%W;a_f>]nWbL*l*A1`h.hS!:A/h"cHMmd45GiXZjUS$%hFW%>uMnPu,MqKTO+=YX#MpS4McM_M:%j%SIQL*'Ses!VRNb[\KTRhQkIL#McssE,Y^PsE@DFkB/H82\H5Q"''Y(<Fin^4Fa#ku0^KN^T(KD_SZ.dS`/\QUcpE;?JYZYC)[No"%;6PW5Jk7YrPJrC0bg9;2RNNY/CJP-s$UT[pKWqc;19fpEYt&"(9*:KTW5RUlY!TohUBP55_E'h#,V'<H0-p$P9A?]gB9lK7:@Q)u%c<9EGb"Q8Y$:]S5k_?8J,lJI[:OP8jW"XMLgP<gMJ4oc/T7KHIT-LCj"]OVIo.:)l_.l7dN*?A/B(^5M'hZ66r$QX&A]<D"61Y_f%HFSiF0#Q.p]gC(KVL12G+57l'1o)?h5(8fNA[HIdW#-1I#Z/*ChF.o67OQk40SD5BGbO$Sd*b8?1aU*TJhl^E)7cD4es%%3M+jb.%UZ>pEM.E)18/55T9H`?;Peps\JH5*a0pI$R3"BU63F\h\8eU5p%4AtjRH<rg0K\qL`$B4DOgLYj.5:LPq[bb1_HP<%V'c<pb-<d&%TE>(NCRp0n<lk<.:<C!QRDk;G:Br8p62EW68>n7pq*R8F-JjjgdS&PdLhJ<H!!54qUg/JX/&\JSbp!flTl-#jWL[d+W5s.6\o('1%M4S@V@mU@6,ge*!..\e(o;gP!AEsRg6a(SOiK]@C)tEp#JQ*k7UK,sY^6WLIXj?X^lr4?eZ;PS6Q1BRj19j<3Po<T,L3L=A9[[!K%4mg,]_H:n5pp#B_&[h+7,qW:LJ,<QY2d%L9kSk3N)/X(58<p?G*ahd`,HE[@#Up(72@aRWq?S0R=k[2Qb67#r,HHnCkB,FpCc8ZI%:$k"u@*ppRYoj`8()o(lO2O"\bBoVu#+&Y=4J>b[?-!B6hLSiE8Z62'Zq,4#=>;=Q5J\FW,tU?725TjHW`ZQie)LI+qaB8lJQ0%q%Q`%;/0MJ-HA_C'2/^t_R9SOHdUFg87)NDDToIp@t+6I_^.(r*KVUpY$;JgO%Wl\AJ8U@e!a_9<u]F7/CCU#$dl,)A#_C/ss#RT=k%!E0ULe38&=e<lC[]9r<t^S`;-[u<7k0[S2BXR:N5!a-VE'g0j;R:1^;&W2UO!nT3@XV/.<b)HD.!1W`R"X)#5#oS*2nheE`(=pDb%(1-YOaqQ7UL^NrajIWk$N!;ZVR[u"&,-kla:PWJ)37I(9QD51odl#7;*+_]((Be6!7hMdBB-.S.1sdPde$*^Xj;H@[96V4#(eCEd%,p9qk8rps(CC<9OC$cuVA,=.a1X`A?__>^0a,+^kPR):Bm5J2@Jg&A),d10L3LLZ9aZ?:j+ZEj:HP+Be3i6iT/*Tr$[tN6W`^*a:%$71lViS0$bbQ9oNCP8FcB_bgD-;"X:J9mf%U3pYB&Oqlm="R,YcTfQi855Ota:Z;=C)AmFar!8-4SGHoP#D\R!q>(\r5fhMhkZYk%$rPRA#'U(=pUuoq"!@l&Om!O(%.GGlP_=s/nD/9mC(+TY?LT,+oYP:>EDe!rcm\.f@\r5gCd[E?#gla-!SCp_,o=-M'3%OI[EBta%9:%?^A15B\H/L$#b/i:e^T3%R.CkP?C/bgXV]'7#8`C(g!M't=-4McGQ_%]ufG-T?@4I$+=nRCECnkZZm&Or:"WY=>M1Ze.8kGlP%'%oX1Ua2_D]lB!?CGK>P.b5]jXSY&+\Q0/8XS?R:(O%(4LQ%F3!;NfRHRC;cl0<o[&m<'(=5$dA*C`Ld?p:?Kp)NAf+X7&:#0JBS%<PhTX-'U9m)0?*LPiL[Ydt-U3"MKDe_c!dF);_<g>=nF[AW,D#FC#FI5[H/Lc86D9/0G/K]H@tc^[jY0EdmBK2e*-LVPFW/2bJfZ%Bc0:d8l[E1@rSXU1N8WlB@"RHAJp(*?#p49fhG):e-O5+dS<=p2W?5S/fE&).pj1":oJ51\h`K8<`q0r>8`IHgkC<5/2P,q:!(O%%rNCBX6nA<u!KF,'&d-(4REAXQ8;b@.<7VKmA_iT?9RM/(TI.S$e5I8CRAJVKVT`SQ+-i4P-]OGR&=`_t><;,j]O^ePaa$rk1'B`P%jdiW=;$B_n5Y;4iW2^4f!&tWT#m<bgA?_4:BJh7c=YVu$>+%(-74jpAKOb45Kfr</aCr0dms.Ss#(]/%Up?+O-D\Y4N!u!&UpM%[%O\(OQBN/N<1^;]7AKmm6^mcbd);SB:belCXE@LsF>^=BrZKJ,:A7Z#ac=f=N#.cA!e70OTK.m\D%4_sWJI626lmb,.#">]OpJW-=%li[L#d?$ZXOZ7U06C+b7Ho)HkdbO^ZE0-cdJQsoS#-s3\6]bIt+=$^nlji,!K0b-qY6k.E$im<jQ$j(l8chdh,p+ArP<QIL<3[>L%VGQ@q".(&+Y`3r;H^MHaA*1$;Q#MQ7<T5`C)F="OGg%;7B2WQa@g8''Rn(\4`ElTYG0E('a$lg(=6;54"4#T>4>ppl0ono,9`su(%HUb0u8h"@GQ8I_1op>a],XD?alNh?g"^/CVL6aRiR'[Lr>M.!k-s1\QIEV[FQF?7<I12+Pl<<Gm%(&94rBNT%(<IX8duTdS5Wn[u%Ia!&5WLqOuTiJh+dZ58FhieY^nrFY3#S0l51#j#1XRV>P`eO_YNIMB34NO(]d#S3&aHKu3dZ4E^8;IR&s-OtY&R!LNr*t72&nWts%+(GC#:>*[,+-Vd6lsg"q,+`DA+#AEgEm@JF`sbU=9ciN=$pj,F)X,3Mljllmkn3l]+[M_<fZ/rd5Ic8m$n\R1T!49L>aUW3Q$nTn%;.PM&Z&]bX^d4Dgp+[bFO]AKgO0Jljr!=&10a'(jRG#[%%-^tfGGt.DLgUk9HqZa/pb8*9V&pqJ=UK/A+!V+15&inRB#rR5E8aDR%Ae8Vuo?s"TbV8#(`drT_&>%GF"8s'?I%6@\=VCDg0T_>MG&.&@HOLWF_N%r,&J\rEH/fqjMB5?T`nY&l73I/3EfUfsO0OPa4XMcG%3GIPadb<B*Hu+%,,p/=P`gU+1lS33Ek-!cT6h`+]R!e"oiNNb\CBZO<MPaJ\53<pHd#s@!EfV)-(T;R-pD>61V+G1^1$g9=Yu^-E%e9+:gZVlieU+SaB),lS>)-;4.Q$Nj8&/)OQe74e>U$*lR@mD"hIC97N(a/_rd&JVhQiI]k)q8@#+;?"UV&f^SR!8ofopBa5iZaGn%a,G)^qGk)Hcm%]'Q$^`J`e+CnA*u&o4:-7\jW5Wl(*T*cgg^<j&8^OP4XMbjY&]R4GE05S!)+N2EKtkZ\6fkmWn_*GVZP[8jrT0=%'fP6t4U1._S[&__mP,\UMSH7J@tnrdW?8Xj$t1DKSoTl0qB<F4E0&tN0R\X8;XQ7r1*G>]a*=!`_C5-q:*F1f)27g)L37rQ*]$35%[UEPb1JBNBH--A%aIj3k^c]X$Mu#!8'0sRUWu3^S6+F7-^+k]-"IA.4Af`bL<i:#B164_^@B+*Q*]$WfS_i%ea0K<Z<o,Qq[u6G[%6otU2R9<%FFUX^degNTl_G[QtRUaVt@2_`?jVZ&Y#R@/aA'iP2Z;\UpXtUXs^+gVuh@+410iZ<"&_S#,ad?aG\].I@8ZnXW2$UaT%Kt:ck0n^oV\6Om19]m]2G!\$?<p#c.U+s"l1,i:/1"4Z)1aX,.X.q[SM8fs/p-N1>6t9mA<p29c(aaj^`QBt@9nFo(Q"GtIMUIqM%ShYcfdD](!`^1,F=.6BGX8?(e`LTW:@&,IoEPaI8[?df*NDg7cU+k+-/P1ab`l)08/HTmor*If:\#`JXaaImG'SaZ+^04?8"4@@K%?aUXrWBn6omNa?M+$H5*DWnpf(Z+='cE7(=;?U,2h\a?=b@VTX;hd#"1't&jU&'@'5F,uA)9.I;1u]=X%-IaL&<%4T(%Pd"0EstN%kL!37`_[!gPWG(;$p&$?/2eCYN"PlPW#<`2L'GW0)"ENP?FfD@_\c$gc+kuE.LYd"?OYa:^JJDWA$0,QpdV<='?`kc$tH0bIT2%V%!U*Nu1'(R3D/J=QJV&hE<jbt[0uN/e?;CmI%)ZXjatI?Dg$s(?(Sc<#I"=#e(p9V`h>"s^nI*H3jVK]UY'4m.0*VT>G$a2F1ISrr%DTXVE)!$_[]bpDEBP<B3%.L8d8A[jg@ROuhoXZQdQsku(lj%hkKC"fgr01LrX[4aGl,D"9HIt\?L)*7>-hLkE&E7YrnE<Y?'3se@%%+03<Sg<t"Pm6*68hXcnQnihW0*_)B;Sjos(g;kp8h%FjJP9bdNp4LkfX4VrU;U`,)^j8E],7%TN.j360hOd^'/aqfkQe2RRF$j0%iY;-$TGKC4Kf9?p8N9\VG`@lpKN-DL'inf\6]6Jt<-Bu`S59u`N7c,E8ogh/Ftp!LKI*Yb@YTE0AkF\1YET0O8hMGeVXTS)ai2UV%b&\jF,E<P*=sFhn9;fcp,8W.qK=R/'_'#XkX-&=fBGVOC+r>kE/&'_0/r%i3n^ko8Ak8kk_N\75Xkn_^>0L(],Rqt,L7"KS8h=S1%>TETk=:BU:\P!%0(qrkWbf@Y2Co-d+`+!O+IrltP@ge\#-H'B?LGRCr.^>AWK:.!E-5JtL^d;%51#qJ&:BRqj!OZ^Ni[V4#@8&r8%b?.jK,I*Rl04bpZ21C0[bTL7GOdJJA2t;8c[W*T/6Pijc4s:\o68(_MPuu7T`?o9:@YWg#(#u2)Mnp;DB%0F)L(,[:KO\aOZjJm#%,o=JM(]QlL(PC'G1;biW(g;V;]TS2H74cJO/k/B<"usWh@d()X?7<E&4t9[9p+a/rXVjp:9%h1B`*hT?/qul1P08Ye$m.,/B9cb]%P)q2fZATTRChPegfYu4ia+7Gg>^0kR(8LZne@FD6`NZcWR\8/>"Ai_dm?h&c-Pj%%)RUF\=JU)@e7+0CXO0eB`;lZNR"nqG`A"O5%EAsa11T=9;<GjPH.4Jqq>7;!!;R9-.`R&,V+B*;8<7Qn:XO<"59Y:g5H81Tu3O-tiZ)Sjg<hgI`(?)m`-M1bD2Ft^<kf)J*'>g\?%01HEPJujsr`E6Wc9W:W;L)7o8*n-%p,=f_ddYj5s+D;?($b#h*WY&`e0kaBMgg96ai+4'o:SS_9`Aj9Sa7Ni>/uO9Ukf)I(M?0N*%Q!V\?aAYH!NF!#7+ZbB/],9h,a["5:`CLK#^i260(IP75M^uQ0+Y&hU3[0!BO=2Q3.DH^">#-A@q8EaEarCio4#@(`K.8eA(DF7l%_=*UqN6(o2a^]cS!i&AT>kuA&U8)q0nr")t3bamjKkQ"S:Rj5+?OSN>?toOJ;U/!Lgk]=]Z4$`jY5DbI(gmEgQsYePqaO3u7BsY$%Z*0F"N-!9dr@u&(ko+$'#(A:-@<8i8q8H21j8jP`pr/%c'=<p!Yb)M\+K*n[?]=b<[d+0I0qq."*3o'm&LU)?52mA'\itBY/&<(G%:Inr#)91$]-ld7PL+u_Eol_Gp_t"R2^G3PA8L?DMQ!d9hOrF\HGc.p-#f_Z8,N+eY0Le;X@8e'VN1i+mLJ7N_OE)qcMNqP-75&+p%NVLIH$R-36^R1*NjF6#'__p(V'7)BDE(A@C<I-C6P*[W0(_Xi"(Q@%d=A;5LVQu*lA"!0YV&(@0&BB:E01LmrWbn#.N;hPNn6;q-%Z$+*c,Q)#X&M"5,kEiWQe]b6e0IE)1MaN_:N+=235b\Bk"JBBsnX*^CYS!.c<tL+B8*^%<0d]:X]phoY!Io_:,`Q8,30DXFA8K_X%^Xd1?VZJP=6IBlpPDg*^M;MK.`ag@"B9d!9U<b7nD;.isNJSeh*+S'"TaF[X`^h*plK!b3N!olQAu6h`j@dV&b+hn,("j40Otdli%^&$*CU'sCpf=R3)D1CYqNoYOT1A8V\^HDAAB7FterT3[>hML+j^OQ+Fm.?e<&JsOj*^>tQrUm@j(Sa2WqW\7`P3"@okHA2UYL!%.%X7bp3rNYY"NurMFccZ:dq"pgfO3Hmq(QXr*`;fc18,;\)b<Q!<2#Y/ZX"RQSq-VtC)(ts_dGonI2ZN*=rP7ZORa@sG_%3'L=#QCL%SrTH7o[,,!K0F\[#R(e!H7Lm%F@?h/+?pse)BF?MiL8u'(XU\b^,QWr1p2<*m.)2g=-`Gpgp-<+Y4'?M]m7:Llh/.;P&`aW9HR3&%\"8XSOPXe:^G^!n5AT!/`q*t%Y5^eb]W@7;K^Z8XbRNmR>e:IOm9!*tG*j#"-du\e\HSORfH=8&e_?^&rm^gP+!*]$j5.$#2!.`O%fh'&NQ6TsSQC`HQW,_6-$T*6+eo9'$kpM55EhK&/r%!\$J+N?ebh&W4%3^\()1B@'$g88NW"I7A1]foNa]IiFco_a#7R)^GT!nJm%S#%42JGSfdGd`fhGQ'TI:MnN>m71s+\fXe,ml(':c-hXq9#Aq+K>\5AJ+Y3oQo%S70f3h@,7P9#]Ujo@qO"0"bsn6"O1?++Y"Cne%a(Y)cde753US[VnHhiHGdt<kWZP?]LX&j2ETs'^FVRp056VU'*`#u+9QMRdNKQ">u:k/0%IkJ>lNDC%$3So)Ln`@5$5C3=m5:@*2%5o(0&`g)D&ah<-b&93Yo(0qeu6'0U7c)\4^0';k_Ug-/4m0U13nl3j6gO-"ZDa,!+$Yf02D8E(KhkR2HZt8_kG@(Q<fcA=-)U2*l%iD%N(^09AOSfDID,>nap[Com"D(Q]n,-'"2O4HOc9Ugf_VsDomT/s>q4uLNG]_U(.XA9jKk_IR#Y1iTYf)88iJ,8Tj^\I-BEI#d'%:YJ$k55WH_?U"GRm+JuJo:o[F37<ieH#e:9rq73/"i16tp%#lsG&[A:IkJ>#hbGi%J%YR:"ohVfl19Nl2IF&prmghjYE%54L[2G=%l;*2M+$MnMIWiH&df7EWaWL9GkC],e^RhY/k>gd)+#e<2UMd7C='X4cC%&0nUPm7r3C!B9e]%A2/h;G(kk:VrhfS_[jQj^AKAUY@%ocI`-nMT>::I!t&`R2Z`oC%a#DuQ'OZgW//4?dK-n``!'Y@#")^:<EK0$:Vja/@Gd:;9-PF7V=q]Ck(PQddBhF3U=9Ut:g:P8@jb%O"P#n]T,a*RXsqQ?C`1@^GnH&nbhTi*g:Pb]"+&c:9TgJ1Y`H+m'Qe*0@o:k(M>ZIX]J<M>Q0;L^Gft_>;&NE0n))F]!tUBTDe]F%lbeYZZWF'Nb!l2?s.%-^9YOnER6J7IRm-`(:S/ZBG^f.GRE*@@a4"t:C6Sr<k>1^5qEHocrqk*LMlY.sf)&ombbY9mh<?j\?Q]7C%r5OqM4s*Z!48k&+e`<-?s,S*%gaA_tIp%32(eekr@%)ot]I/'Jcf8dVHYLbDina!u?d92)ZlX^>G4]g[QkkToZ'Z;bksM_CAob10%(=Q_I/Jcf&Z^AHdGkLXhdD>)HnZ0.hnllLtQP[t3?iP;F3G8r?`0b^n;u>3AM5"OQa6.9>:qKjF5@;*uhO.A`$XN\r?[d:2^?HkT%Weeu6kdMASZPt4e9XaJt/SE,1)\ngPFF?fUfknp(EQqj3'Kh&.qq[2'iN)!ko;>D4aqq_`,P@P4UXP.!4"+J)7!dXuL*)1gJcIeY%^&1@Qn^qril2?qGptm$;Ds,UHs1No7rMAr+^\m]Bg$/?T#MWc16a>J95@=7m:X2^B?6&>$?1[ooU"d',<TgGrluqAs%).15eRc)V%I_U8Qrl`.:qRaXtiu>\i1J+j@G'Pmfo#K#4ENEgIj284`Zh&\FrV=u-n[EDkrGhad\b0UC8+,HbT:o!X?MX9O)nGk)D!La@<]@(5%oGZK\i;Dfuq8rJB/sGgOg\^d0igYRq.lH9gkZ.YmEG`rg:]JJdUABXl-s_%$?,+NN2?\,6dWN=TorA:>G$R&94NkHDTE"aGcEU%!%MOtFN"J)$g<0#;ZcMGF!s*:.i4,j1)^>f\E\"0fqp=I']O2$$jnEfN9#Fp5BfZkcVi/ZJ9IP1SKSSXJBI)I&38`m@:*b[aZQY5J7%St@$qrHcphch(2)Tr[C[-KVS/j+FnP9s6<"Da'iV1(@G8dVbB?9Y,_a$%.3km-)uZag5St-FN9L]=670+1OS)aTD=c`R%is!q%Ik%B%$Vg<t%7UFM`<^q^(c`S%%d$%GI<C+<SoURrBm?Bh+RIPHhl$G]2H(`&m>=R10)gVS-OUoLsr;4]Oeo,XLV2We0*dR$buF]<cfB%PQ$'ip"Q)\]mOgIE4A)7T3cnjn7%D*`ue*K+.Sq*O2"m@Y7Gi]hEIFLA8HI:,<Tqgch_f+T=*MBbljDhHd;)A]JCA/F\1H8%VNd]%8Ji!"ba;!%YK2%H-/Ehn?gtA`3T&hpG_3lr0+Z2o2aoXfC1,7rnF,EQR#,C&kH-h0rnh#;41T7j^EZ0cr!i#0N>>@"WrH4=rR4I>%3KGhq?Zdkjop-0k`\0P94Z^,7G4861j=f\/-P%I/;n>#\eq7V]N\6?@]5aI7YA)A-j$SPrD[F[HKCbR"Z,aU$r,L8YIf#:,\ifqS%U.?8QH$3[ehFGUVVsAu'j;e_YhDb_b*f)T\*Sh9Q8&rY/4"StKs..9OOT'.an9WJ`m.'`jZNJ@mgYV8FmVg$=DENb>$8^B!m-;U7%J62-g2*pbpL\5a9.r=#(%<jua1i?9WAhk=Zfm>Ag^BI0U9U(.\""B[s!HKRJD^NNMSW1CPo`)fr<LUt<hdt%Sc:$sQ.1IKIU[ND$%K:'j7Iun@UEuFo-:4mf;fX']AmB\')D![M!7-*d7*6k>[9-V<;#k:A2@nD>uE$tSoM%F_?>B`\m31NVepo\8L9`"c-M%DHtOZpiS%Lq,(/48B'BilA[set#D4QUHXFZQGK$LpnP-5.E#Z>^$.<,k"G)3Hpe%1[4q1]UB5beQqg;REYG]L3#5=Gi+97m]ut$Gl<#Dqos@f%\G)SbSK71F-jT)kOD3ZLoB?&l&_"s/Ye!#3`3e3F^k.r^+GjH:OM+Ft7D$Ctbeu$B,?W7YfB"Vto]MahT4ThmE^DD\C(X:#J1=n=%kOB.*&5Y/#MFBc^!p[/seGB+08rq;NP#!m])W%H@q?nWkd@V3E["tWjM5Qd*$o8Gj1Du%).\>Lp["ato"Djqm]S!=@T%0HF1+^TY%H1sBGc!r3HD26>G=<?T7R5%C]q>/),i8X?tnKNugT<3T'3h6`+oVgeKm;PAZH.N`$>0&i[?N@]N*hRHfEmHB-2s9LjZRZjN%,c&I%b?HkTo;V+X-C"Pu<os?F/cRI's3pOoeN?$586*A[\rRg<hd/;_%h.14bQU^Q_=h"p3,G3UZ[^/erEXf1Z_lX7!F]Y*SA9?f(n/\c%gaU#<ak=doZ^4bZnhYL"cY)n=<6RJJGemEdo<&+H/#R/8d=U2sFm>"^qUJ7FZTlBf4hk-EN=A(P6i,*_qr%D9iq^^m@P3i/rjMVr%8j"a[NW-tXMej`rs2W^5qSuV#&@:]6gZnW8JY9iHRn;61<nFMneCf!#h""-CMG[aP,b<&#>71&[bdbB)U#%^us'-XqF+!Jt:NKYe%>=SE_%b^s6]N^)XaLP0?Q\a`db.]023K((D,*qn#*Wjs7LD-rR$%SD>m67)gBs9uS[uA,5`5S#jj_BWM/lBb;8ibcWdt\g;r;>cF%?XCEN56^CCq1-Ee)J4IRJS+C/M[?bX5]?'PmVW+)Ys(?8qu+uNce%L3:WjW[rj9atUL2>2rU&h8G^],Hq>/dBBBKMt=*iC=So&SN%B>igtTOlI0ZX2BO=st:*"6k7CUsG*ZGX&ld\c^mE4&K\Ba5mcB=@[?Xm[R.02`A\U*hBst!Lb[fj?m+#n%H[+@;#,dBH98Mj('JY%E(:"M<Zc;b]uR2F?])l'h(C6#1B@QKG'WpE4"2WuRbU$>C:!(BqM_MO-YK>>Bc]eLcrR>'gI++T]pX8pUrTrB&\`Us4tOk(q;Q6o%]If&NAb!2[hNf1q/a?OPDi;25k]Bt?/W7)Ln[:"*QJ!]D2]K6Hf6$t^S$n6]kah,*2ruT:WQ)tcrqW8oYT:s.\QJ]4rVlDbhmKdn%4HkWYme:QS5j%FggW_ZXa'^g%Lp-7hS'ACP2[<J_Y35=HgYT2>-k$X!C3Oh_jb#5?I6VK;B=G$-`01%$JlUT7Hd=1k[FF4q6hB<,%K;0q3j&p%t2j`OM6u0P1.K3S`raD)OcQl\=lVdWcI[85Og>(p0S"3<]*+^(ICF4CTJX'B`Z3=9@JX(L:-g474g&`_pB#aNC+D%]:%Dr,aREIj@"la#u-.at!2\pj+kZp0@5kHBC2jlLf[W?Mj6d/3/V6HQe-TqS5#?,&uFQsJ>DH+,AP`\igPi-bK>7O%%k)gJV6mN=OP%\cQc?n+XW\@C?c^`NG]"?2*1HK4ei3cO2+BZ%Lo0*AeFIiPc:qR52M/5r2\,2qpWD*aQO=*Aj+c06Y]O#;(,G".k:e%U/4lgY"kK%#m+oJ[r+;b+.MbtH$"N$f_k^3fa]<J^7.^o[Can+GeW%.p@BNhk40+l^XKBr;/;]J.f/16H31g1FoM!5j7VZ%(`Nk<b13Q]_8*2N%Edi1P@i!VO9PX0pZdTFen7(8Ib'NOH@P5rDhB=\+`^a+>Eeti"fZgMu@"(:a\c1pjqL;h:U['B]iITt&/FY=e3uo"0Qi"0TG@3Y*%98%'''t_Z7R@dB]dHg$ES\@/\qXEM&\!p;Fk5oQVmd]pR?="UW*'XE%kkO;$3Bd8"(XM-*-69k'8)nQsNf4u]SS-CNbA2"V4kG2"%0BWRO5otMuFu5Nujnco"pjXB1Fl6M*d=P[Z6hH8TK7;,foS\@Te9sO14JK=M4hUG+^SRg^]jIf-9X59p/5:=ID=O?:RsBD(h=\aF%S$r<j/\YY1EB^F:d2*UIn\*Nj#@6MjX)K3<\[1;8XGaWBqsTnndESNfYEO#^Rub'hcGa&"^LUT^H^e^r-(t!C1<nlq(6`IXb3n7u%?]:l$BNg@l`FuiRd52O*l=)S%7akg'4Z&quI4A?kM3W'&"m[rq<P.'!25?W)4(]PYk6mT-qZjP$c`S5_GJ<hgi3WYAi2m9X^E0#<%h6^8?NVp=IBm)\q[s-,eS^/Zg6#Lo:a3C]/^L.KWn(PPUI!fo.O&&j*FS=_PnEAkmJ";Ro>X.C=o(^ICM;?;82cj_jSpC<Q-[K,4%Ic8D-QI[&[n6B&HS^-fPKjjAJ11@n>0?&9)]02K1KS=X)\=%Tdh\bhUqefukMtHP"LW$8Xiq5mAB<nH'O+[<'kHf^^fk-qL\41!P%m7]u6O)Nb;ojrJ`2u<,kI*e\0\'hLp;t@[l`HjZ^CEDeLdBGe7%BK&BroKb*c;)tQ#i1omlup/DI-Gi<Yet"`gU@X*c<2=I9qRpr%L$YO44tN8q_sq'ZDQ>=&X#"s+5Bme<iG@q;O[O?`p7@P!BVC&sL8HXNcf86tap('DCZI*an8mj*gZnY4bQ^9F47Ca:n.5FJS!ULm%dkNaBSS1%+B">G>HBcZC1>Un;RnM?tXJ9Sa?,,c([ZGIai;fEa-J!rA_DSO'k,n,k4X>Q@pOZ'2<[]Ke)_gAY!fRN2b4b#R\G'X0%C4AKV/&u;c?QPGiDQ5.TW@XXqHFdn1qMXqDQe00,+3_/Q\Sa.8UCAsW#'Stf,@o?hIkLV"CRN4Uek`m-c<gP^AdN]9CTVV9;)UWH%o7I,TR,8To0;b3Hn/oup/@eCWro9EfUq;rNIm$_Cd>++.0f.YT:8+l%Y,;do:CDLOe+3HRE%CCa`SW%cf$&g]nb!UMq5pa1C:*"S%R7Zf:h9SBO3dcF+E;K-lG6"uDf2nl*hp-4kmc)s13;@bOBCKK(%<h3tGB.WSeP'6/P<Rk6<iN0r0:%mqY#j%X>'6m6I*$0+V>XsW%^%8XB*hld5&.QA0eYXFHQLWS%o9k!JLZgmgh^lE0L"FO@=Vfo2$^m@W/?V'OnKjgsNe1h[Z[Z?8Cq&:0SBT<>O685-477])O2XFF%nfMLWc[J#AR#:sZ"5Cn,1Dd3M47\Aa\b,oEpdSle&U3:TREmA:O`BGXTDd#V5Q0^9=^rL=;aAN%?_*a:;ndl$&<EZ5J,S]\l1bdM%^3ZL!i1Ia\j5fC0j!#,]cd.&I4^J).naWAloi_+*++Je4MZ;pA?U#IWL49&qr:n%g+9,W8IUAL\p#YI's/T?e__'b0HCSG_<[icP%0<@pkcd_&>(OKB@8rL+=s/27>??BHo[?N``+17a.cLF9_Du(7FJQpjGL(!dbnO'[[^8:fK\hQ=CG'3F/:EJp'r2=4$m6<8hb""[d%@Mq=5'fl-WBO+Yp/W02\DQiA"BC2_RF!9</l8!U2^?^0MK.-c5s6CnBpO)[p59JK!I-Y)T]e?RLH-b4Z=8OA+IOT3mh_4Tk04dbu%V9*>`_ZcY7raEAXdL*1=Ofo9ZFFD.nqUd+l,MM42=oEU7BGa%\&jF"t@Zm&J4*EB&?12%sNB<^oW^#bhj.#S*3bmcK:NZU3&H*iF%5JC9Ll]_-So\/89m8iWGP=L*S1[t50)6PR"o'@nZO87\eB_qRPGaXbe3#h0-PFKaSO!\5JRFc$!r`K/HI'`aR",%bkf+'`4[p#Dr%N'H67RGr_liR&0@ANrA*'NZB)]__._[MuFs5NfJn>kEBJ1U0'ZPaD$qbBudo='itq9RGH8L6G`j<QDOcch;83KIt&Hd2J1g'_0rC%5Ohfu?iS6mWmB,.[F[td'&V-K2KW#d7bUMfK!F[ShKV5qhod%Li,gCg%ZAiF57[#+:DW2'>GUq3O7agEYNfmV*BW][bI2Td+.)q9%]&$ih5#,P4V6\k"T$+[WEFWLJ\//&r[ZAU)K>STU_eQk:D`(t,c^jL/d\@'kA]j`6NEc@+o#MM"&:E.K^@]i^:bKAfI'a3MhN7Jj%[;!$uGiuR(n+p)RpPd3rkW\Frd!NE*jjFZNfXeaY4s`*&m3O-:?[^$::j.^dQXUG90u[JME%ZQ1L*GC@`=Q=?d=(#_`gk_\X#NMM%YJ,+[.j+=m\d?NWL6T5n;r$t.:o)01Dd-%e*pUlVIWA0Yf1Odlr>GKMY:gMh%P9Nu=;pi.Z7if)`\L[OEZaB=7B%iOQt73R^Xj>.%nX59E0CRg_ML3`ICnf>!K&%KH_^cP)*(@]sPdk29S8Dla'S5PX<bsdj>WG:qHW/eeb<M^Q;k1uS19'X#,ibEg@d^LV>T$B(,$/TK%&JN;Gqf5Fm(GEN\Q`\\]m'Vdi--I$Ma1(L*qUQ5PCcMVQ@(D)M1=*jqrR4P2H+TI-B7KcW;dBnPdcqArdpi*S?9USuZ!O!Ja78>5%<DgY_\kGrTWLC1?[5XC9Pc%$W/?k)/PC8Rg-f`e-L%9r28CtZMQh4PAoiZcClBPd1"6A/NA_P<UnTWdS>S%L/pTj2==I)>>Fh<lR%S["CfAH[pmj"'JfKm\/%gSI$fA?(0),ps&5kd#"@oI_H;K<g>?pC"^Rko!JP&AOZm+\'7b[->),\Q]\jMs5TT.I<AKe)[43Q#H/]%S#(M/c"6W98<u,9Q>KJ2SM-`0ES:"k"]a2J*#"ZrS15mqfd[b11h)l>Fd\rO>]O?-jIu%c1uok>@^;6(GC/HNNirl*LjpJIjUjq.%8JAphh5^J5;1G-eV]`k[oOS)'XS89eBf%rS%HXYP8+N-6MOHV32Yhp!?QV%Kc-pH(na`:n.XBWC*_rWA>89<6B[(Ns6qSh1iUE^"%L#iA#rL9";Q4^b.k5@qjL7%FU./9S-^/Qd$9=5aJ?0^Ik>i"<;m-sMpagYn!/\+H,e+JLdrOeoMGZf0;U<-9X2,bbXr_`#&=<hAp%HC-#,PCr8aO[NhDBrZ,dH.qW+\jiVG:4?_4\npr4r;#UPd86q5kDS6=0H->4eQ,O77P"hG?U`]nkX)2t1B&G`SR1.hZhe54m-L)E%>577DTBkNUf&sfL%kkljs$$adc]4oYg/Z1&H]7jai8S3oIeoC0KU9GuFnA@4'S#s.%#8K/khGd67kZO@q9@ftcf@kdg$K.J?[I5V%>]N3PjlQMEs.NN7Q-]54'=kP8q0%1*/-UUdYEKdqh]3dFnn4AW0@#WMrP/1?%R:bAK:bRp,a\:"^3oVEk\tO./FJ\??1M=39;iG@%\kC8U]>SNs9?_e=,op!F%@9Y"bNTKh'Dj[n-:saE=M@iu0Dr41PH^P",S)MkgV7mcATGao`FY4%bJ`26b9Xa'b9UB]1(huS_e%ib%P0:f4lnYh-]1g(GE1&Nn7,E)njOft=H#T1Mn&"dbharlcCEA\,0CbFrr6kNa?V6)FF-kOu?#kS0`*DFW0oNYSEL5J=0#?i0&H=66%`T^7<F"#L`;Hr?>1"@pT%e)"^IH3n4QhAI:[^8]Mp'tCL&(q1FS'-YU)&)56+e:Q@5U;-GX8A`[Q:rG0V5DGaDtlAFCqd1pF1j2m%FX_+@#h@SnV8;n/[3-rRr9b'`Q,]Oe"VKp/.gCDege1am1AK/9"5I5*5um$BH`H_\F`L$;j2,BXEcBlT4*0kHf]u2>b6(d-lZ2K8%FEj>=<fWc5U8iTWVJ;#&8MsI#581uNh]LC7ng`NC*OD!pg"M(A2`-ata]h]AVjE\P&HZZE`jKVUBe7h1eoSYQ*cnj>Q";)4$jV7.%CL,gr5:lY]%RH3t]h6*rY"lVVgr&tkjW#m7J_uU45*j[(bYc7!_ndtZ:9V@:.<oRNYbFP9`5MFW`mEENX0!&;QUraWA5p]<s5Kr@%!EN?^<^a'c3G,NNa.)&Vf;k@20tsU*FRMM;RPMA,mQH3UpFGV+kd%eZqRZ[1,[c\3Vm#HQZL4m*esG>O/u[rO\**2:r*6>mZ5_Uj%W4\.G9tb,WbV+.Ab**rdl*3IR>j-6P,O\jKVYO]=jKFXi]pr6EOKMKTFBl!?K:J>,^bQ?J=S:$`dZV-K+YgQuodZOuBXHlpgmYaW%#SIjS!@(F5(rS-1mtD4^grmuW7WHp`m",W4$r/re=';Z1R%#T<:+8[jk=Ts"p<#Zck#ZWeL_rZWN52_j.PZ8;lEZ+a#U2^[:jJ78%]+nhNhN$_4V)__ak(<L^-[Ct$<9;;Pm&K*8,,,KffkP#b&S32l-$Re#&@Zqd1=\?ubha^I<(sTDD_^:Q'Z#>9oNHKJ<,X6a`2Ru7%,"!<m?pn!<Wbs$sM!M*RSjeU&d0qca`Sg<tb-@[`3gI69<\]c+(b%M+NNnr%;4^rT^%4_>n++`7\imFU_n%aso@dG=Dmd+^ra,:5%]rkA1>[4HCcLlLg?9GEl`UgZc?AHXPYb"p0`#G<"%Bo)4lu?=Ub1ip\#B-Ym*H/!(-f3E)S<qiP>BBIa`ne;0r?^=OS_q#nlW_?_%MZ$7fCX2\=D=t*uD2jm.>@m>CH<Zf9p_LNEDJ*mgg"G-Fhjh/5<l\je`poIcj3sL[D<9KFkL3_sDIrO*\6JpiDS?!QpNM$9r2j:a%EI(mGic0Bo]uROmbi@D/*nSBkH@s8'$E6mVj:^'[\,,bp9dEY5M.W%K_+Q7mf;QZG^S"]=`bXR2U^I8W7H;Y>K(FKsn&E8f]:P$i%r0/;sX1HeI7jG^f;<(YhJig99RfhhK=a+B-5WNqVOb9H@$PtrH>B?POm]3!ae^+a!TPAu<4kWq[]f=Qek_uPp`JE(E7/Q%S:cF=&%?0r<<#h?9IZhC*:VPg"d:5NB'7cUjc6aJ@;?B,njplMV"UI<keF)tiqSs5A=do$+u6QnI(/b#?4a&SNX=1p7),3J.@NRoKlQG%!R%&#Z9O(V495F$>>l%(TI=5@%;WNaU9,S4i-jN9*%mQX/\mS2TYO]]iSrf00S*g31"KD5;Zlg&nVGOjf/dPMk/U]nRE_`0YU^744b'%XUR)[L$*3*l4h`P87.md!k7Wu6Y?5C2bctC;W'^eM(p#u6'onk&c$"N`.tFV#3c.Y1fgf!'"??OQPSo>F=E12kf0OghtU0=XF;Ac%[SH:RFM!<ebbP<%)h$f)<<5(dfWkiq2do4:&pha&R4pI*6>^IoRdEt#)J<h4MEc(_L5m<>KM2qpOI]#l6.2<rD&g)KHO)($Ju]5=%.gk[NYq,uU_`:(?4ISh_5VZYHO0.u;mR*+a3;9^N^2g>J5/^BIPK'Rn4uc50'jR>B&JXbCm7--C@mdRlVaST@Gq$d'OaJYB\&M#d%T4CNk,/C8tP-=-?%=0d<RT/pIo$-24CNlepIp^(/M[NW3HnI7r:)+7IkQk4K$3ur#V@&+*KL<$DMR(dL(`SO%gu#+5/5G)Xm.C8=%!9D8rjn8:C@CI8lCqed#>:bR_>iGaDgCE/ES,.[$N>lbC]kl[7NY>4XnBRNY_>42]msK1O@6\oBqobMHp.[T%AR)Z+_pUYi&*K&[%:B%ul,HdUgoaqEEG"`+HQbf2:MhfKq/n6t`)%UX)qi,C0ZMBJaV^LB1m6Mf-H/_;r[uYpY@V)PmH/+=oTq""\b'E$:oC1"7fCEn6%aM467roMN5%o-^CF,lg8)rL!O[nU&oa625bT']`fFQ72p0Q)L]0l4XbSDU^4L$j[-*<4mb8%5NWS^Qe?Qo_(G\\opKrf=lE4^P<L%&%K&b,Qj)[*VlYCGK>N6g:6:D*n#YP93p*H]t15MqMa5FQ-#LZj4$3A6!_KP^g63'p=3%-S"KQNYMA%*Q/\Y6btIH\9MTQtQ[>]I%,])hDFuA6,S.cn/jZ1/^H)X:d28A*oo9VMpr.aAdCq/?=QE*&(=7msr3*bUH%[X$sCC\D7=e/W\%bI1&VS4TQ2`._Ch9HGC_VZo4%_9GuNb]U>C2na;`1\cio8h'GkWD3u?;]ROa<6#GDFZY8rmcoo7*;chl[@<3B\F$fGI_RF6=JCYAWPWR]#Jka=GmRF<[J9#G][n&e%hXY"IQ[#\mg2sFbdsIXU\rr0^H*]"]%GpEPY%.[tYOl/alFe7/f=-4hrf1omo/bsp]JatS?=0*SN;P`X@l<a%M,g\Q;(`nCS,AAk%Y"u%`SF=[:W0e'!AjEi2jl"(S0Wr!h`,46$_5b\[Qm#9Z-<I\_*C`2'f03^EWb9+/@,M>5#4sX@;o<jU3#[hl8*PgiD#ANFit3/j%Sr<p*`opXfM@cp3O6JIoYBn27j)M&Mr43q9%T_!](Zi]dqBIl4DV4_-Q\eL%NZLJ(<$.7NE#10sr2>\/qQ.ZDF3h!0*-=UuO8/bK%/NS0KT3[s=WI7-8Qdi_q[I<(Op+7,'$O5F=6+:7K/JrTSEO'!!D0nkj%([b(miGC)G"M1ePdEW2$<#.t2%u)Q(T?3NP>*R8mVtLk%Y9>l4lZ12%-M>t?=FAFX;1hrK<A[m.>s/U-rgb(tM(H`u7&T+aL6ikbp*'+clbeSa@0IUpW&7ih%.F(5$[/AqQC8-",f;eT^B:!h%W@GlmqRaJbqMZu'6C5)2]08"tGt*3tCfu7e9H%unS,&(YoVUJDf$<?Eo"2V9Smb,PHTJO,^=(U([dQPK)3^6%m7D]B`U\;FA^j]r%]m.M&1OO2jRXJuFP3l1)W@hn[0fEgBnW`fHJ_K7oQ_N&OH]k`Y?R;+2VU<noqffD0[#1&!@VFD?17:sG-<%oNn*&i@10u]CVfeQZ%5'35VM1h^iqi(iRZ#>W,%X;,ON#m'u4#KXHpS_Y=oL;u_0Fdo\Q(OTX("]^L@Q&M]/:o-;aau"s7hu##A!T6X_afpQhSISc-+3->%4]KV]X<p*/NO=F&S#V(jCU;b/5s9O-CR_tdBH=ZF4EC?s>6Ais7RnG(Fb-0lQLP%.QFQ+P(DF.AG#Z&MfPbT5H7iZCH:_GDcS0BW%dE='7P\JU:[gnGc8RmK$)"lf+2$`&8b"H15C[^R,d.%:MRaJ6AV5:&,C<*Y?AMo7O#O9.f?t`GAg)M5PBm2;R9iP(UFX1P*-VV>A%l,2)DE3m&<[GE,ug4VH]`,XgN3(D01d'5ggpc?,o*M#iu3>oEY=2EEJ5,pXbk#m1pK^a(;DKJ&]8E5GC:op9^10JJJK<&SF47SLR%c/e2<kLBCan+AYI-WbQBnTRjDcdt<is/K_i]KfrE,bqjjafgD+:^5X0e%c5_=&"<#QDBcj1n*^h`SoU1m"3Y(RXeB]*EAs.^a\72%-S"[tVl,uq:.*0niLV=6mn(q<ouMmA+>+^"3jO[4.5$E+o!)2H(T0rDM<tk@c(_'5>TN2j^`])P6K(nTM?K\+SZJIR1P%/6IOfk3%;*CfucjeY/nL7E*M6+f@SuKKtXm1]\p$Cqi!hJ1Bh),ls^8@lI9Og5loaGk/]0_oRY+gKlTf&nI'h(8uUG8oDC?jd+Quc9GlFiVi%N+o^iD"lJ%g=6ut=rMNPTg_p>Vi/T`fNtCE\4*:.g]i=>gXGA0Q"F5:@m-17ppAAXCQ8"k`Yn3ab6H.O\-f!sXg->'$cH1$(_,S6%^,e+oOg<6,k/ZJY;XFnI7_WuoLft?k:[6NdHdPM6:G&SNaITp,C(G&h7>])bTZ>ZiaM^dpg=dnB+'OH&%Z_TZeCFU>Eb)P]8([B0%l8)bqg6*_nqlssV.jB@NDtQ.o(mhsC;&+4hGV!R[5rlH\SE"KHV-@I*b0_Y$1rnR>`X-2j!*NW"%m(Pg$Am?9>]#,EnLV,"W\/^d%m:p\rl7'D,5haZS,!8B$mAV>HU-0YF&M';c:UiuX+^]SWFFGJ26i4fAj(LDAc,7o55M>lo^0DNWf$\KY]7skF3j'gOFIr1"8FB4X%U\W!o'&Is_\_+q-J%UtElo8a*LU"DtDY;<GY&B?Q^!XLYf8J:pWC6&t"n5hGQ23k*kIl_*ktAp@f-O+OfA/ohn+(#R3C`o6"4/9"%([Z9$g?7l?cf9nL^/7"R-.o[0qj(XI'(!4kfQU=boXbG'+ke(7a_$m\RiR*/WCGb828R"+K7.XYLq`6qpNM"[`;3O!2%lXe`_Z"[%e%2_`"ja?c="ac!jMr+X)_LI.Ro=lhRQ7/Fa"801ds*,:5ICQ4P#I3f^$BGtE0(.hmE5S'nBR#WK!0OTrj>OcoO'o'&U5nBCp,7X%UDcg58%S0S.-cM2q6[!SqK0R6Ho(T1?LrBcgN*dN[luc9I(glq%UE?QGaAQi-%U83i*?t?QNZ0aVI+09`MQuTGaAQi>F.?;.dN$.%R;QJ$1^!E),^u"1hFV7\:QcM<ND>R0OD5=PlSZccJ"gX:d:];S.CO35UB@EV&m:=l8/_q&f4_d^6T_<4-.R`^KGiP(n36Xrg-q%(%o%NJR8a(fL"]ie340(A7eFIWQaQk]:`sFE@'2@a?,"hY_3a\Z9V:cf]==O:@R_r3uS"i=$).>NK-=3!h"K,0s+h,Jc-=fPH:@A3d%Z/"*gD&5ar58!.!34>?\aG,*`7i3Vq7]d?mJ/O`X]%19kKa2PZkO.g.>^W`a@i1Mt8H,[4_p1e)I40uPd?TJDTIr"e-47'EA'%EO%P-eF/B&?L<M$5stMOZ8UV=3I:g7kJ>B`"g!ka;ks:X/+ciEd10-)h>PC4d=T,OBPRkYD87+K:=G?.LP2LU??8L(d8/oU).`E`H+"%C`-Yog'?8M@niK[;iK1@U"76':DH2R?=GX"7=GoZ;'&PUXtFF3Dhdg67n=t@Q"7[PNPoEi#DY\;(oX>n`LS1tQBmf"0o]OY]r@u4%<^m^Y?V'OUI[rC>kQLIG9eS*SFGesXoHNN<9EAu\0/m`gHS=teQC$oPk&@>h7%(d#7oar$Th1?K1:^02WbhI!PO#SKTFZVe,AkHM%P^*7\aR)OJi>LKpno_5HU=&&24WD#?YrK.rAjc<%*K720EX$9A>HYN$*TSHa(_3(E3&:*A,Z!5spgND<]&b4W]?HK',]gLIkYuWA%kgQW$h_eCUcIi44e)n$KD#1>9BQ#'(>^71=Jt-;$WZ/?`3H3+a@B$-R+t)H/90G$t9km()]0(9:`lE*EK]K$+[Ze&i[@Fk.*=#a4%&5KUC*k,8\?P,^!\1N\81\YsC9.g#Odo,T+HJCi5\=.6#gMtsU6^T^]ithIZP5GF*gGXS[d%Jd64)TuS-tZ8uIB1Dj(T+md.To>A%!(AX*RT\6DUsXkJ`tR9`1f>Y".s1HkFn.4E';/MIlY5Yc4.N]UW<l.Ejtn`5H[+edGu["*fMj?h7-'m%VQ?2h8^MQj"4ncq9MTM@%9hX<mg*gF(CIcZhD%S*YqCFgVVc"?]PdouT*]R?rbj!lMj+IM0<<l/d5aIRh>f,a&B23_%nq'<5jEBZNR&.qs37tbr9"o9AK[s8s%!:-=7>ao1aFJ;SIb!Ao9SRNLL<t?<U;^P@OUeHW<1=SZ]1"@qHK^kIoWmJ#fT2r#6HI]lY@?4CZ7h6W1EoLsRI@W:))AZL,j%E<6%FNU<a^7OP7kS,m;q)5kXbUJHB\1u[O:4!]P[SlFZ@mh3!qod-[iQ#LO[FiK7O!'1ZO4n2>Dc@mZ#::#9OW5jNX&7E@DeG(`kD0aT%%]`MICL1p$SCtF'<VmJW\^rr>f?PB&0B:d?aOt?6O(sar7+,4[bD0?K+['nhJki273N8Q0AOYaM&),=!dQcL<6Yea]LXl"M2lgO;%nY:"$d(\CCS@r$dI2?GO;+PCep0Ec.(M)D,floaU9ae8q&E6lTI2?GO"ke)cp3gk@IBUK[j\44ib:GlLefR6s\_[$(QX0%\m8EC^%X<(3%i2F15HW=@4!ZF0*Z;%'!9WmmH2LmT"jK)\YN;]fKTg6'\Q)U4j[G"^;!;Y#5o4jtClJ0Ai\STA_I:(?4s1OB-JhFY\Vb[0q%960<P&)b8LViFIL+ZX[!of"H#99&jnSt&snqFQ9RBZoWM$**]9-E+BD:ODDre!;J07HN`FJni#qk]H!sDC;AhnQ%C(F#Dr9Pe)2t%ipW8-RP%B4*?"B7K'G1^m`d&VNpQM`bkFc4pR;dp-Nj$rbkH@Q-/Ie?MnIh#htu``pQhF$WChA_l'D-o`CjpZ2ri^X"QTHO-Dq@)%qC"AS/BOkqLAI('H8fqKgK+Q_oV0l)M@+q,*h*DG=pKPKV"4<#@N.tHe#\2-;#4%q)3`X-m5k&?ZY@W8IU'i&1gF'N^%5jiP.fBV%1<I)c0".-aSfrO<`fGE`XSZsRMjj$s*s9W4);VE\nLQenU;MR+^,I;2$8Oo'mPo`s=\VI*[i"C2bmuUZbQ*aI[)HA"0RD:'bL_j2%(bP.P,ct`f6*F[!j-KP/n`+V);Jl?->o?W5+79k?^<g2bHKV5<Gg6TP[@GsZ'6.%TYYd2^lb1^jBUGXt-!RJQ)n4>[9V68"Ckpu3%Vb*n#5FTAMVAeW'd;?>AkDZ$oNRB7@hXGoHq&8pCMVZs(c8VBQq<M8)n!_PLYb"TnMjZ8j43>O2[$5tnn`P%YFZET6OpRTJYQf-O%^i73h]$1F8XP`8@.e.gLp,_nWY9Ud<q9>3ZHA0RIl8MrFoJo#.-t24MT\kTanriW=MfV+d*#+.AP(KNm>d?osOh>^*J`*`Ceou*'%f)3bJT"BLDF!87<[$3KMLoTGDm-VMbSV8BpOTXIl#m^uE\sNr`f9MiZ.?hcL9PUJ!"YT8PIamIoDt2j;;R#+8AFW90n^*H4;tmkS%j'k8L7Z1tPSrI!V\\KRWlKa=>iKLgTKcdhpUCi]ti>oCdVr?m%*a!NS,_)kfRosR9k$Wq_A@mhU]#"4M8236gW?PCF<7+XMGImB?%PN1Kg=gI424`(EP`c4Y":45%g'27X?[<t&=m-$W)Wba&.PAG72rq`/-psq<Z>M!Y*Vb1b->#1E0k'$,k)7S,Y%*rgq';K25T=WE\%ab^YbPNmu[DQ1s]nh;p-mmbWhdj1"N1r5PiM^HT-Suqdp=1(`Y29a1HDGFAn9uG^r:8Hc790Gl%BU4DGf@Eh8lGJ'-hZBnH7rud`%5A@C?.\/c#:!%)9f,qnC:KBJ[j;@E^a\)MDMsi$;%57XG+-mJ_I>;LmC'*V6T,k[-=g.hNdB<q$a:b(i]S'qSMt"rB*O9(./D)*R%G0'&<1CJBILDlaeYX=`Gb^EuV<%8p=d5HqdDoXH(>SJ>Up:8a@<gFr=LV'A+Zai3PNuL^;NQ:RdM3gXTQDM:Vg[l7-qeg!,XA9SY%U1i8oGVh_<e;$#s_P4]j=n-!.qi(KSSq/3VUDZRaeNe>q9p:sHddSpdXP''!2>4bc,Zpi[$b!2Hj/ir0UnGXFXV"qI=nAB.bs3>+%;O*>Z%4u:I.N3k-eV[=@KKl#.L&tT]IBB3OjK3=QAEA8V1,"(]p]6YjBP<oXW\p.1@>d*EiPsd[jW_B2QOVNR3o-r3U8V4k6fehE%8B7ZYB&D*ATP?GT,B2"saoQ_*[FU6;`auI9F8'U%/lLn=EdhN_GWdar!u6^5>%sN?b'P!m.uI@"\&+2@,gKBgj_CcuL;A[fiSCk\%1/"D).&G;]e69`X-"8,_&Ch`#."E3!M>"^m'F6ZKNR9Tm^.*\5JK!LT:^/55$74\PT;HIh`D^!77m`$Q,AS#T:h`8`l?'E$AaNm^%>WKgHhR:fXS[Vk%+PFF\=)PN'6=&8k='Sos7a]14[<oC'mbdqE>1lrtkF0c4*uGBZY3V9d1u2m\?F:6ZTn3n=&MGCaCG!b!7m>A@%>r?:shbY>cVJZ>_-XDq"T[dkCBml2/!65[17lbdnS1M[8U99Fn5t^A+WbTcreaf[l8h6,4:tl-S!+JpA/OE4`V-]HiOu%<<'I>E^%E'`so*fCa*631`\c]c@_O+uf2!>=?oqOIlqMWg[kP#>':TLp3n@Y.YUcj3QI;%Ben7s)?'4Mu`ei/;ED)QeOd)!j`P\?A7UGl>9n%CiCjRJqO3$#?=`R=tA.n$WU0aa>(,\$JRs;3?PrO'm*G,6mtOR[V<3SCQL),H"8Ta"MFdl>W,b&`F7LPmdTtd*WG]tpVe)cGf(>9%q"rtY:]4>!_M0FciWYs8#J<t_`l&8Q?`-0*4>]s;\=4;I^L($C/)L+l=g@njHGSX<?>s'FRpL&'6f*D2h!OG32`lB&rL<D1a6J`"%U0sVmkgX>N]P1\kXrS8c\8*Q.C]bN1IdhsHriQ(0^(jsnh[]tpDXi<C^>97S?02=Z(,,IB"b.OG\0$(67nI%HPRV+U\@<*EOH6jd%HGKb'H?**YK);+Pi4Wpq"%=E"TtK.g4ufdg;G@D)cftYB!0c6K_FE)'%rZ^2r`,#P%ig/5M'K@JIrUh%2jYF,B.#'WGVW2D]#JFr%UY>81M*.(D2Og!0]>?@a)QS>;>&]KZ]L#%<Ks/Pl_:.b9a.6Pd-[J#9D8h9EUMhdS5%jP32m-rJ?q<YiMV@$lNW#O@eWt6+`NE\?%P#>RJR%][nDiE*S*mC+?K")`tLB#WOTbge*-@6O@(.7o//$?i<ZSK'Q5Bm.ikGf%K]EoZ,e!mBKZO:9(AJ25rTd=K1,eKMmSJBdW%6"]FgBi9g"-9b,)Rj=)bMX>dh:URo3GY"Sj%kmJTXuJkA8%ck8W\mi<q,*n$@37\%[)*KSGi;(Pp8nPKKY_A)dHp*)I%pB0?Kh?F%:1HfNbWbdd\9,"/;0BPg3RO[_`_!Xoefp*KWG653PG7%`h*YDA[CG3;Xt)-_k>,HUSUPX/FF$gPIf*<:l(B!qiR(^[n<Y\Uq<%HP%q<tM:rpS;47j!0Qm-Np.CB+4^bNGoZ%o*Xa?(\=75(C")s7lH*XlPO=%ZZU2MPPXir9-t\r4\-=-S)ZPEO!"L(@(B:gXd3lqWO^=%%;"@$GK9@8Y^4,UPT0UJHuO)cp"uCT3de[7B0P>:o6RmkaOd?O+3u=DJ,/C)ii#PtqW0(HYP)KXbMZ/cnt'LTMGGZG59;6N`5qIu%jo:&;WOo=:GC$[OGdAq#)8EY-6gkJ304pZV%BI8\p&*]+p!V%8bff0)k*H$o]5PIWqKVTjo^\=m@_]PMj*:Ond3nt_o^)<Nr[=N7%U]'5*_gaAp]o9i"MiUr3HrZE+,+h'pX@VF0f(HmUSuD&Rf;%B3M/_dEk6FMT/%IoK58I\+Qi-ZbS%cMMql[VHs5<"diTN.3VpAZi%?!MCBViOlNHuj7UEV\@4ki0V:Y$X$@Gf.cJNN_AR\8(KjW!KS&A9!iLf/fWJ?*_s\T6u-1EK%Y9554j<oC"<Wci1`u(a"WH?Ht1;%>p#XQnbfKd;9tc_8)117E4u2DKC^=ZHQUG'H/c6HI_L995(3.qlhX\nq=CB0[IPo9hHU">\b-X#Sh>pV)W*lVFMUNg+^'=*GD)V>%k"Z0KcU,V;6I(qsj2]Iu%jF;jnu-L)^&3!c8hsjqIe*=2Qdr"78#q\?>s]@JdU\(2QJI(pH26Ipi",Y*0DV>Ygi(@lrcL*/j/+-l%a`uF(%Xb'.q<(7VF'-JXq:Y#9a6RZqjV;?.I=F/C#6&I\%Q:1#Xo7mPXiF4LlI-Iact^3\2AZ2hEOl#Dm;^r#r.OeT9;1)JH$^_g%MZsZ42a$)W5$uceh'ptKs-C:^o$qS5!,4O!4D"=Y1#%7ONp8RU_I]i]>P>iYs1!B#L[rsL0CI"qp&=%/f>%7SEd[sWl1pXHPJ?'P%<slIZm7jll46!uWk`b&%'7:ooEGVZ"B>;*lpfJl+lhnLn04+"T\ee4mHVqMWqBc,^p"Cua*@u.?7l8s2=u=.Mj81bbRdWTJ@FO$1%PFKnVLR7>Ar3effqUm[-,s6<Pj0qQ^_1cGTn,HWncaM<,Qj(pOa-WPfm-g!iZM!0^c$ihCs*c?QHsA8Qg!>*!nWWE3.=4n_R-nl2%hk$;8-DpC^-\(sTqX>6r^d%>F/RQ>p?OqTL48\9#mq1c1GRMO,c:dU!.f>ic*r!8Cb`9<=Y(Vk*Z8ahbrc>H+rbM2deiWQmK(JAW%4#3l^MJ:3tH4/S*,Vc)[d!/$lA,.4:\!uooHi<^M5hu;)q"WC]dHL\ERB+[5kLIBWV9\(jS@_4JoY6F3RM\bVlCck;P4;dN=k"((%hjQ`Pq&6$[L'M8Y0##F$dheF8O3HFa+W+8sZRjpAjEIb>C.DVHFVjLl0n0JCa,#?$`V2?%hrB>%_i*DlnN5U6lcJq@n+\&"I[,]c%cS&W1<rL>h"+2cGFWE"saK%8,ol&'@r1F82Fc/&!GONWI71&e1CB+(ZHM,f,)T(ig,B([LEo-Ns=W&R`nfO-MYo#eucJ;,G'iPG4%I?$4>/]H/&=Yi*Srq5ZPG;BFe"n?Tbi(t;G@ddb5-92dA$)h=eM_+J>:pBrrWf_62GpG^u)+>Nqn*X3Kh",YC6t9-U#ZqmZJ)q7:%LHG^EpT.!DF"sA78&i>e`61I>571:S^eiTN\oJ(n??jPDOSWWP$j'%;66-2mL]p]]TeiYI/(\(p.&iu'mUlsr6W&8)".,409QCN<%"-QhhpQ/iRW'%b6ft<G9F77C?2g`0t@8(lo6W2q#-esGf`p[KYbCDa7$%J`A4cajdD?eg#dhW]Dl_FJ2XTu%i0E,`t?@@$>o&@0I%=(;2)4P'l9Is[YGgFHObQ[PUU4FqF.E4HhYS!?0e3INg8q:o('oZb5BqVku/hLG.g/c,@lIu^Q\s6F0Dq2bRQBX@Zb2i$-To?i%M%5Ist?helAL/;6^hR<sANS/6]Idk:IiMuD28lY$(`/t1!oI]ne51g&;1:bVeEqY1o3B"U1Y)"R1+nTA3/YLf[u=YRDP7?t4\+9V;s%lGZQu32kHkluMBjA*.0S*1>bp=RUR@9r<g]L5qfoWQjM`0+WM;T3`N$od8hXE1i)c9@L)R.9k@ITF-GmIOKdh[0WY^3o3^5A[%Yb%r&<*:eJJ8JqUPS[q+q<uZ[Lp0>/2rRnYWe`s/59jo]nPuF3f+4^;HP+-mM5/[//W27Bn:>Oql0FN^_,d-5da*+UJnj+93foH2=N?%=1pLMY,(GYU,hBQ"_mD4<aVono$pfZ:j2Ac%Ghhjr5^IIO>3fu>@VFA<[oAEOQq#&g)*,n)\qt_h\SCS\R%C4gWM,9Z_gM^(sC5%%GW#cZ1<VEep`-t"EF!DiIK"5Glj!uHq`aimm(`82A_Y%c408HeO0SK"Z^3_L.><S0VBr+$>$Bf_kSZP^n:NLIY2o^@V&iEp&cqtY%$r45#s0R22MsHiVF-\XsBjK]S>KLYNK)">+e"(C)\Jm1/RX?MM/mi.QP_r7^W4ln6>(Us=CCRG1Ab37\YNH\C$UYnUXJYBaXYn@C%%6(2%5o+=Jk]XB4B\aZUkK_sd2"u1=55_)8opF7A[,d]t&eXL_al^c2;-&l42DW;7Mq"lQbh%""a-'o`5"^+b_.UGPdtr3M(WF*7%Aj'&f;1j$u#Fk&bAN^@%`oK`:@L@8uSbdL-[c?u8l`Wm*41l-50=&P)R\\p&bR>rsXPo:FG$Qos7^jiPe1C8m:lV@DBKN_@*?5)$%^F;C*-=QRjkrm]Y.fG6E4[e+\[HO.!>,NXp$tV?mNZr`$'tD(rI!qQ*'A>$"g7Tk]Db2qnG<b2_r'-C38NS0,]4&=EZY.hFRl/(L%*KuGj'am`M<&*.M%7qN0"aTdPo@%ehps.L27nNd*?T2^Kff+N]V>f.O9eO@$3LbBk;C^ZgP3A9[J)O5XU<pAl1%S5\$jk#?Wu@/E%,1moO^ERl&JQ@/DehbiWYoE7[VG-nQZ0Hib4/H4-[^jk]:3[$D38G>K-6(D]+#)i^'cKVYnIo&,rAIbO<%ubgZ>4Xc]mm*HM!GJ0%9<gJ1i[Jeh!*YqKIX;+*>fHY$fd!us5A;EQ=DtZ.P<NJLA,,$m]9N8=X]qS2ro0"+%5kM4]2$.bY&"OnNO(41##]90/q3Kd7F'cT%XV)V!-CW4?j3e<sKA1im>7m:0,\&Qe80+hUBR45`FjY?;]r"h5Sp%:dNjr@nXD6Y,(#!2J=k6oYW@_:W&mI5HZk[J"9qi#+Iqbga%3juG4B<qBl;[9k1Qe!_^Y).7W]r`^?H963'=WjNNbs86h/$&<<0W3+#&QD$F:6-DUD=#ZHP1;PnfgQ:>QXb<T[W7UbY+?]d\(6ph%]p+hHp2Ws-DRq93csj1;:g.elH&(bC5e;KS+u#E;Tj-Dl%R8QgeS:Et]=QbBRWJGO4Vb-&(7S8^pK"8t-#2-9btbS<-p+)Wh)X/?%"h0;gAS5T[1Z7l9:2>U3`i\O],ZS^7JgZ]SOJMrr[BF"%=Gr)FJ#h]h8b2^to'i(>kT=_J/`+m\DhcN>rq,aj+7DEYgcRaQ4>sUq%Cbf(5msifgO'KEho2fR:)Z=pPbHq0-Y7G"3Y%p8a/Un85I/DY_hj!Wb$jj>T.:Uh-#]s:;9J'+FJuR6kpMs@V`n16X;NF8(/H,9k%V5C5PFA;H=M7"1*Pa%bs^o)2L5>sf+U+RG\ZAMBWBgq$_00V)%V4u0%.N0^_qm0)Ms7!KUD0?WM[M;M(<AlOE\=r_.Jb<!*hY(BI%=/5fAmY/`3&KL*K0;6B6Z&k^#T_Ll`D__4@n("gMfDh3kNflr=)=5-(dG]]%P-`DeF"/X2Z?qS_mJgFRmNl/P0G[8jTM'r`RG"i]%eM!P3+Q1rqo7bG-+PkUc4k6tN<>%"<3$`E9&Am9M%=S+<F)*=0(Ft*brk$kj4V*A`ZhbF@XC,]7B[,C9qf;Xronm$c0!KugC;ZG,%eJ@ghM7I@iej"D.$JDK[HaSZOo4QY)rk#>6?*:>DR`=$TX6&r-.B=4h0?G1d[G[-g'3$RH\ct%<>GRNJ/d$0qFPbl(1OETe(i?qd%j&VL#CW:5@<%95FbScdFYF9:^4T&L^@l;rH(>cIF5MWhB<fb=o6`BS/dJ:baTBKlprjG4LS%L7QZE%lQF7ba4K`:'_SNF%N59@K9%kj7ZsO.4H*^Z)SlIrfX=6M0XuO.IHa^OPe=r9/\)rE&//Q/DT#ioH@(o>U_'qH'1G='4Fb<_Rr=Mo5M"K5Z3\S^>MDIJ4<8Zp$K1%Y]h*p4P@L%LDk"-^VpP'`FjF\Rl,#j^\m*\imm;U1V6Umm=0Poq>B=GeYs4"^&<H\ipcckX-];_*M-K-VtXp6#JKL^i'/k)O6s+I%r9OuB0j_Z;!ELhHQ_0;_0+Q=Cg&,Ubh!W.Vs-*b)k;3**>-:!Xb?#LXY:a/QbUtR%ZMA7iSQ!+@p>+]ijL`=9;l4SuU0XCepG[#/%-e84X>phggc0Wig%Hr148(Pg8ea;IbcIBUah]3bCS=FGfmD%:<5.H;'D>00F(ItAIbC+C*Vp1X3lcJ\`h(Gs:fK<LgqoAuTIrVuD%L>R0+EV91]Ts<98]6JM)J+hZ(qr6[Qo"UU"l?E5>'/s:18op7!DJUq!j#B9Z5<CtkptgI@oR(_/oUg1qG,(pTpH+!:kP6'GrQTif%$pWZuoCMA>ahbG6[TU=.4'?e!CO<WKqOQ5uc0>5,XjQslb?$@j0/qU#?[(2FlW_TorS5u%qp4Gmo6cfdI<M_'0DEf-^"0Rjiop4C%3Bo[;QlC*P]B?(^Hf"BYIG?r2F`F]M5'QYd>n_DYgQV-GiJX>q?eBZ!m,VRS"_[X9s$!'grO8Dnl[J\@pQrMlr04P+=6F&em32N-%nEg)F:hVD9s*j\m,lL5_Z847cq_h.*HcqEXqY&=7+2<-l@Qgu'g)Fi^p91ZJ3T>G\h3WmE`8>uOPPLSgr5Fu-HF`)&g+J!`Df]pn%Vi1FJq>/9U"oE0ti-"5'q^1Vf[`nX3=8)r(D$jDmi.&MIhctPIQd^/60=Gfk&V'T8nF67/-PmRH0>H<"DT:Mh[ETMk:6CLu)qd?C%?`q7crYBJ"p;?2A5MeX(DZBWmm1p%1cJ[ldTRCPgZME_[OiblnqKQ65St;J?FR@n>0pqC_bs5Wss5UGLdmn&+qi>*TSSa^.S#c5(%M\D;X^H+K*p#:@G0X#pkHYE-m^\u,as(mUn?2O?QX:f#U9E",:MduY#6iM/>]tJ=`p[9_A4D'Xus7p+sQaq0:Y4gf8iPke;]=e1?%%YVTu"5f4s@40Lkn+.Vf-iV0`nD?56mpH(Vi1$JXcd1/MkSC:2rLoe\Z_M01=.ZV$p#a!fm_/4?ZjG7!s5o#`iuq^q1!dMHRrA>_%nbMV`?CdQVHiK*Jn+8X>pFa?EL7?A[IsCFo2]J@U_t+u8i#'@mhdehJKtH8sWGQ="YFDHMPN0P&hA!**^Z@TGT@kr@>Ng3>HZg["%55aoi[l]KI06b7)+U`b?LZJsml0?pI^\[!jfF<'8oC`^cY5!&c;&&";YKdUf56PQmK,i@j/jGPkN`#AjZ_O^bNaLQ$Xk*FQg%%',%E6CE>g/5hC!*@ldRf>VWpSZb8o>dWhb+6:s7()-fQX]lDNG*M7k,?!SS@mGI%uX<H[e(ZoYh%[g*7sqg*R_j^dU&`@o+,V1QTgZ6%l.acAVuNAr[f:J/c@8^SG<?EqSJOiG*T+j5r8SRbHgOJX0u8@R]Dmb@hB)LVo.N"oXN@@:a3U[,rjp#Gb#<<OkgMJ8k_a$1+8QDt%fV:6P8A:kr+7fEEri$q,e//#>*NF.6=iQN"]Cu0MM\f_?^,S6b=>fi_o9FIL[_Mh$FT9/M4qk[?"C1VLdApVL:Yuu#T"\J8,6Rr,%[6VZ1:EZidKFdPa5/=:YIlHTLhf=57]3floiPXJj_sWTYaa8L6-F"UUG@,m``]Q@1Y46bV21B[l>[r!'T'lGPY7C7%N.kOjrUJ!@%BP2C.m'R)E_+rn_TMPT)hn/h7=-iCL';]@1RA[(nNF2\I3oB/Eh,E"h1k"oU-Qes#?[VD/R=4L4qkfpfg!8H3J_cJPf09#Lnc%ck%9V`^.ioE1Jc0nF%0>=t\j4Ad%IeYe(]tV)/-W.].EaVE#jp^$k-Ehja]'GrKhpn?%39V,TI(+WRpJNWYb@^YLaiD.p[.WqT(].k&%?7C2BcNEV0IWTOPnne?cZi0?pf0=TKGNM)7\eAQ-OfN[iVVoCVP<U,#TC3PhGNYa93&s/_pu^r(jl,=m5<h2Xrq\!:Y((rU1RG`R%g/F-34D[[1cd?Mipa4s_gRc#1EcU&n1l\"T@Na74),?TgqeN'<kIJdHG`?sXB+*A,];W6('X><R%o:mLgIP#PGL*M_Qco-f9=t0F%4YrKdT7*IdF6f3#42\OERMa3eDmenZh9e6c55[mSK)=^&qM)NHDnZ+-rg8nKI;C]M1@1&LBA\$fmEL[s1"50@cd,A#R`&cY]9A"q%cZc"Q*PFj/rFX+:\UW(AJ6-s>Na?jV2W"d\ESo&M.da4k#iH`87?d9&nGGVgT9J<]:L5"]h#GG76R_C#hQP69-0UsB]f<T`U3M<#%ImmVt^W\Lalh`2I^mg4sM]4_)D4d2Bp\6f\K'uImrJ0do)81%DQM[J8lPjLY^LH$UjRTm.\?BhK5O16'e83WmUT][fcX&h#o5oD,%I.6.Goa1Kd::Hm(Dp[1.m<h>s^3aHopAKoeVr,.5q<WA+kf*@)d_0!n$A1S3_5AZYYLcl?\)$T=nQ.)V,5_>7f\>TNq",N;i&7Ip%CbEF^gcTcli+D8TkF4\bF*P>XhaaHKCO?3on4,U<*(dJ==ME&Z3WCuf'L)>;$i8Q2fP0K]p>9pSG3--hT=imJR_c<b$$ODPZ#@tq%J*5E/T-#*>0n"7po#D^Hm.U6bZcP-B-bSX#E-!9d@t4)Z?]TUGhIur]e2ET8a`GVd=`6Mf[XE,ep$q.Ur4Dqc>F\dGj--Z!HZO;C%H$0$:M7%\SWt+G"4#f;_]f\E$89/'u*C.^3Qe;KW2p7\hY]`,+k4%&j7u)SAdn]8rd+A<mNHXE0'AfqbAPLn#J_p;#%I?iWUZ69"%s*`#9&,4E,5j>okZFNJ9I;uNAr7iit2k?sA_0"S:B?%sUl/>ZOh:_4cSc%m0p>*R,$X=ur,1#[UDVj;h^LC./o^F(i\rZS]*EI9h%=pFAS)t"0/RH`R$mP^R!qRuR9)6-IrFqt#HG+PkK1<+H4h!+h.%W^m@VXAl0qHmX^g*V8gI^+*9nnR!)mn_9PVoR\45T=Vo0mTsJ%s(tDPqXr$MpR\Vp:VQ[?cQq4jb3lmXo[$6+/It!kNF_n'ag8Zn7i*iQ\Q#_*rN-=bC6*OFITujPFLm57H2#odchCb!"0&V.h;$W=%E]t(XIfrSlTB&oMc<&;FgO")4Epr,3o6V0@\h/p1i_i:ZU\D2K3=.2Jm[_*S\C>H[aVs^#q)pmqgC:X)I88AlV]S&KrN\VGHf6S#%noF3KA\idU'WZYpX"</p_84gr]p#e+pV)"7?1?i[q0;DgCn4;I[.d7X9fm6Ir@:(D]8SUi_/p\sq44bEm6eHKX1*NUm.o?1hOuE8%5C^rWH?OS]h7;=](IHU+1Y.c=kHF<G[`_s&gGWXqFlVkjqAnC;G(e@jc)Ap2GV`[tdo4^rO1*bW%<l^OSX$bQAD=!#+h54ndiBXl%(*)b%p&3p-'^sZGr5o)u+WT(7L4biMhkQrK^Q&i>(2NVl-Ve$VV7M0qrLW+_#YGE5?W97VdegU5Z?J=#mkrkuX&m=HX26WWP`7,_%mj\e0h-Z\>13!$OBJ"Gro^dG'nQ0=64F_@c7,D(3'@Z0kmSbe*K4ig)ZF_`e.@9*(I:IPHESgr<\_W!6Sp=Z/CZPF+Y(>22e=+F1%PIl>&o6>TTe]D^Mi4_un$LTiL,dsIsKAW9V05CHC+di(oNQ_pZ%o-KeVq1]_%Z\le7#fr#<h$`PMWsM4qY]?l4?'19pK7ad^TI$a%rR8Gumd:r+4g"5pT?lo.4$VAIEOal9pBX`*\=NF)\,Og9p(a^j2W;9]5FtS+fA.)b@IZC8_YuWHp$DT?'6JH\^3f5`pQ(A2mb((a%!UQGj#(-)BYd/=![S-M/hg)<gNMXM;RbY=R)7`)3],pRqSYI^(e_R7ZlZJiU]CE;@n@mL[m_Q"f\GIi1<$Tt$*8c*/nDT9G=7P$g%':DbmI.Q_%c''rq?I/&LJ`t9o@)Er>n<JBlhKqt(\b0A+XZ9,5ol/aTQSjosodqN@m:sbZffGUH`!nCX^=e!bGkQk(o4pM"Ig*Im%pfa9Vh\TU1V+fi3rT<2-5@:J_\@B%J:#Fj*14^`r[/Tp*1QX7Y^l'$+<s.9&)aN^"-U5OtiWUW@s5Hb;E9k=<Y<"`jKQ,"WcL1_o%q6rklVE(^fZF^?n)SS"`X#'ZL-dQ`[n'(7#?%;D+-Qg$LG50hp:fk[qnIB(V?>eN-oAK/Taj&Vnq:&tLIi#0Tq:B!0Gg5DaLBg>9%`pcaLP\GUDMk2!(4MA$=49+lLMdINPeYVU37XjLGmI]:`hf&7ml#G;JjQVl/D3$m:K^:r9cnZCbgRQdhWARNHREalO[J9C9\fs(V%nKgifeL^=$85dKP[?F39\ANqQGmd^5OZ#,%</=>!;eZ-rfn6d,gJ.Ijk-O(Q_?4-"Jku=;Vba6@Uu20sId9(-q47K\f@rLDs#aCA%cp@[)Nt5RMs7_,/Fc=;-7!]B-MPgpRIJ#XQo?]I6S*1Hs"PEY4c`'7A74USR/a]BF@sr'NGq[*I=CWBFc__l)-1+!c@P);t_]fk_%C7WN'R`a:Kfi7Bl#;hH?UGq=9K7;G2_Q]mI]1TN/B((ee.HfPHNuu<ep0pdE,26J4N_PIH0DCj8.E/u$S+S#V]iG>31%.R.%q!Rm%YF!(,K=rqfb_#5iSCCO39$d3EXnH[VA?@<L("hj=X$,+-M,Ap3I@PG)PeA%E*=3G^N3GlHLTIHF<?$B:4IYWU,;j'^g-7sXP%(Y`%BRD[K3+)%"=<T?Vd2X=q+$:Ir?ABN<)QfXJ-6OVe[?g6u%j`!,Z>]D0LND9%E.?Q9p0sNXmZ!&IUaa^9P.W6Z:./$9(1TOChmZ*s%g'c#%G&+J($#scZc?lsQi>mJ3hO<el?M%6bB3MMW:=^d`-5dX>_59@1GafItB;:<W2eu$4$XAbD"Q`8'=R?dqcKpN:fsXe6]>bE%%?>FY9)9M0"m/s:3q.d,c)11ujl_Uj!EGm;[,tlmkE3cEVYu0V#RkL_Pp2=I%7U*0XA"TKp_kpp<cFN*KAi6t#j&=F%[Rs5Q23tr.%@ah*_L."slB"lt?)1)H4/8MQKB;RVJCs13$W9psBaG9prRmQ$!3.tJf?-.Q1<163g_Z$sODM*:L7fepZAA=#Q>8eE-;`)l"9HVpR%XYjtP#lgL(,n@$Db1L-@@Bss-%k1U&C^(6:=V'o#HhMsbPMN[\mBMGGgF.hO4JT8t[RZN%qVHtOXIZ4jksm53-RhDr',1[Ad>"'j%\+\*\>:/&O>,<[*1!@"WD*Z/QXbj1,'3i<LgMP5<J#HPVaT:r/4OdusA6WuA=^K@)E6KCgaL:^aEV>QdeQ=WBbA^X/n%ET+Y"(uS%)A"]A)u8CmNPu%[_dr(@qlTY>i7PC`lff%-R8&4R<14H$N.WKP\>5!%b6s,PgJt\Blk.g3-Qm`X8/o.0m?$KJoZ=`n^-5a7)_ATJ%08$UKd\TDlW\m4gW`CpY#:8++0S!u['Q2>nZ;$X:hJZ->IG;`9g\+/"jBP,*WYp\5@.?sOF'[u\8"hiu/dX/AS8AN,f!$LeX?Dr^%M.Ym7-i4U"6gUVc**X(T)m-G)OBC$hQ6(W^HdkGiM,fN9`keBfen*4;^`g*5m8,`$1ESA[S,8qZ[67iYi+Y%FQE?BIm4qb^0"A!L%/[]=V)b472>2(ICgT#[$:YN*cDi-4eZ?.EXZoMq8l;G#@%<=^WQL2L"9Lc:EI6g8uB$8h]QF!L7PDsl3h*28>)aZO7"rSZ#)fR+.%,HGZLgI6F1l%/T\#RcjIdrmaq8@IDm9<tboKr+?7[T0Z/Pt_r?=I^F%>?e]s[4maZFonen"9:Q1fa_RqlL:YOpJSGKQ_<AqE,,j%%'Bp8Tj*HM,j1<>Qd@k"%]cQ.&74Ko1+fA7G,_^9bS;?5h)2ondA9"1=#WaT.\B"kEC8J"9e1Q'ZD:qI9U`=#s1Yc1F,ElgDXaIeQ%HFrecF:JN/kNppQDjl4L4.G;5,1=heNM*^u<Z?Tq4P%H1!+23Yb&ont&K=(oZ"+M'9I6sEj'gkfgIuOeIo;hNZ9+aqNpQ2CRGk2'%B(R"r*&*'2;7hr&Ai=kAn!PHnT`Wj$is/iKd'1r#=g#%ZG3J9RM>fS=68r/\;6hD",4npgph3Etkc6Us[WOK^\LbsLBF+:FW<(^>%3tg+RG=W*`[rPqMR#Qr[7hpRdOX[!!OOu1l;8TkKHj$G6aI$)6qa2=EB$S\4fMn&qh:)dI1,2J;D50B(7uM4j\FXO0VLe/l%FWhR%:-IEM#cN\YM5,*l->S4&O[VePS!^M$8+"^,I;_VQjI15mdl5R"U<,H&m1hqC74mb^aTaqD\qcnLRmBnbdaV\M;j6HM2L*u7V?7=C%JHFQ@_1NL)\mk<DC'iEOB;a#8mdTff;5d]P\1KYS3<o6<is.0A$*#86?0aDbp*cD,!nnniYg7'_M[M>q/#@BJZpJu;2Np[NE780`%9?C.hM&C"c'sIHcD-JRW_2'!Y`P=Z4O/adBW18pm.WDSYH8G;p>q)^8a9L5+CAmM+Lrn7l6^p\!#;Mnl<:o7F\(RsX3p4m)Cj2^1%'q'd?2;oTQq]6qU)YC'f629`fP:_#a1t%1'&>_R%#Qnp@9bUdi#';07PYu9`-SK?8Q#?P8>%.(o#INEjTIEU4_t#3BY;bSQ[RB8[%/1dfNeL!*7/6*ZN7$B==j4IZ8Y-`nJ6%tG@_H!'Oc'n%?i@Ugm=D=YB0AOtK.f7CMDbU\K*VD0W1q^!9J1`LOgNIL(4#-\5eWji(%.:GS^bZaZe$O;tJYn]q=%_XHO$2;#FPpquUN&#oIA+gEof[T/4X([O<,\_3Za5gY_PJQV2Jc<SAS%[B0=#FRa6Q[)H`,$[&@A4uW%I2%eKFa?DFkV<BZHPX+4S+\;?]%rgXcM1I&bgP'u'u3L8"2aQ6s+p8C9a_-E*h"]kEa2MHToDrdls[;iPPrq*;=[`\O57,8B]fB"%n21q>..'m?=k>%*!\b$s$G%*i_NLQ:VZ0Za>&3+MW_&7d624a%+D*[FPIp(/f$q6iltpA1(%8A4)p'utdo<V'Tk^Zbk%<@'_UPS4%QohFlQBflqeq>=_fRqEorh@B2S2\o(9qn'4MahGrY_uReAK-okAXA-C1qIJ/Re0%eCFYL!".i_4_Ql+[%G:`>3W6FRFr?U2<T)M4%UKugiOWuOMZKQMK:2V^G0T.b^IMK1g6.>Thi@IZ2m5\r.:"?.R^2!5Z-C1-W8("sV(-tBRL5#W$.q'$gWL)n^!@*Jf+`VEu)SYj;%-eTtS$RV))V?hKtmKi$.Y#9isPV$eG4_a4-8]J_PAWKHKkkpI;5TJHF6g8BL/;s1&gV,ArlE/me=a.1m%=AJu,p$6iM.YUA-(oij%\2;ErUrelK=Jp'^6d/bG5VhuKk.lZ1;gd@1UhKp&qHW9`&i,D_XY>\"D!gIdd4ie;hsbJ]qIsYQIHNVd5gjI*nQ"=rp7:,3eDql_%P7=^O9le:_M-Y,F:gs<dNe-j8,H)<E,<Er3>KC,_58m*$CqDB&h8(r%/Zn-A/t'+X^OqEMZ)o5$4Pe7;!2?+4R%u7]=F6OXedc`i%h]X+aBME)cdsr-9LXoEQn#sj?Tn=n-c]fY2A-h0:Emk_E:)ltOWuq&9KM?>+[Dn[5$[**N.hk'_F/XDS/Psi#[f.Zic6nO3q_FuQ%'`PNneU8>#DF:'?*ML6?@]0)-6sj/*f<C3rEIf;U3\7$W1a.$0GGuh%PWakVYO#n^Z>'0DMsQbn&gqi,mB&a".sAm!Y'(I;g4!90%;:5as0Wj(DHb*\:A@?kpZ+HGcQZo$)@'+h(L,'[)7Ddf4er:_[k"!h2WZPA*MZkthF2mU%F@*)A%l";l#4Y'-&bRsHUKh.4%h)po%2G0Qb\)"Rf5412.##.C-ZHX4V'L@<I!Tukg9F+SM)!GT*M9beR#;W55$V_Y1A*^AT+%)K*kJerJV]/,<2iS_#AHg`*VW)`:K&G1J%\3T^;e,=*&\4R?!*M2\S*KLgp:ZkM/Oer0,[nX]1fR*:)V[`j0]e+/(k5qa])dHYlEe_*ZC]iD:@`l5N9I&@d&k+VllEP#[W.lF)%@W]mbA,@K)$T_m.Q()%aA!*+oP]#dt<st'AM3Gq>pRcHdCmD85MOYqsG,)DgK8Ub(o@5Z'/1@iHMU"6*LOG!!,,=$<k&'lQ[H&l0%QjF27,unD/ZcP[EAps:LdGP#Ee4rR;V*cY;R)0#P3]C-%h.p2Z"K&W#.6!XTMsH-/VtO/&$Ze;[+^A5LpbJFRhtGal&%Q5L1L`kQ%WlQ^YVL^Y*O4rP7EohH.FMXFb%Me:Qn)0tHUh#`os3^:WF(9^Xgh^YJ\q8=H9sRu%U;k+)&RB+m<d16HJD*K3)/H/(#(nbt*$V_L%YppA$3HT9bkN>]H?EPNF&.J)^As*]]D.,eSgoaB$e?`j<6&sA;^?`0=^U"r^AaiQc3p$km2D`&=2S5`_+Cp[HJiZsb55lqt*W42[%$D]-D(qqnQr[m-u`!irBmp9fe;f4H28)t>l/Q7`VLeNuV9aYi4USfp_4u:$Q_p`-GNN%hrI:G%[ej6#Wahk9ZP,G4V"dCkb)Q`no%\V1o'AVaH`J]gMLY894rm/mCD&"+>UZQ;6%Z-!lDY*IE,,#U)XVQ`u4nC^9K)`EU3<Bk"!$8G)=+oW7WN=^qc*AC)kU':QM-]9La%Ef(0="Orh"H;Efo5G\<9f;KMZcV>n-N^rG6!d>UBKf:5nVlA^>^tj>n$M4&/='gn3N($_q9Zp_-=[m+nKp?6VQu-PhYcWtL/!c(j%j;8]3Z7k;pOjftr^Y?VApfWrh9_[UNR86jb_%r'2*W<k>Q8O7mbP"'$lJcf>8jiZ)P6cucLQ=2pj[YE;XE.=qIWtO':2,GN;O0!j%n[Ni58!Rn4I+eF'd2t2+duElk&'7/T'nm<3f,=:5@S$l4E!8f?@mH0S-O$c>m#OPg+fTQ(hm^H;I4="e]!b]")W\3p6(i?G]+:s_%Zk0"0r6Wl]6:mOQ-4]\o/gQ-KCbQb,3A)2pMN*/JZF;07c_TLQfr@$:%jWrGPM-kXFpK%,O?Cf#&8g!<`6BJtW'H6Y'[C=(?_/%f%E@-`#1n-GG.?CAoQ!>$9ZHH3'KPr[s5_KEPMc)=;i]$Bt3LpH57@"4oMF2s+N&PQMoFA(&HVX+FX)#Wj:^,p77J:>WK=SRg)FI[l%9J/3q(SAdint;?YD:gZ>U79(_IYI""8Y"Be9U>m"-=#AbS=_W,]+6g0`6HA&,RCT.j=r`_nff+rd`uFM.p?@nM"TY+Qr&k=rN1o>%/.X\B1Tb<0hh2/"R)lFJS0`?q(O;-g1<?]Y%!*`TRd?8a;'WurT8d(-mIUDQ4ce=b:oObT]L(1'mBna]Beh@V/ofX7.4!eO8ZpT1%*(4S_^9-t3AH",95WeII1!Un)*kT>`^HH;/[o-?p9e+=u:SJatD`#G2R7:!g@Rf(5Q(XsF:V8#'pdYE-B"9`YaU3r0a#a;2=pAPo%4Go'S6DK__7?\&uRFW&hWQq(AP";8\2)T5///8GgBJLmIq)QWV!XLc$9%?mMXqdF3'X$67*1%[!FKhp"?\gFEm8;SGP\DPn)eCT:%[!%-EBX*sqSMPQ>>WVU+T,Xrk,%i2+*o6>5WFq4cVS*"Ud0X'X'5lg85W-_sCau&i_^sMrd1&q$+buLUDpq#]W2!I6`/+:ma-?CO%D8bWgWgIEsPJ"90F<&pq)5c/mfH*edPHrabRI-5M!d&[h>?0#=:DSfBJePk3Obl.Rab].5[j8F$(*Y=Y&R:#Q\ndeuFKj0A,Aqn+%b]J9dLWF&8:h!MjcD3P)0+g<AneL)(8bb9t0KmSp7))*PZ6;qq8c-B`j<mo5W'qU,?iskT%BE"!+kIc(c8Z$rG/r8KRT((u<E\Cu%_VMsTDU_pBe_:/[3h%=hb$7geA!Xur:$j]iD/,[T$P'XcG*U[FZuY_3moK64RV'nM>rJYjMN9Vkge7`%=%G>c'Ml""R$pk%Iq;5J%RA&*oH,1$o0VEjGV&7tc7"l$:&\F3q/'rGf'QgHj[9=N^+M(cR\SCbFfd_>IBU[hU:$L8-nG?QrY[*Jf2d2=_W[k#NF;6-VLaiFk%W4gA#R^;o!33J,k;=%i%1Fj-N/T8LGeE!\to,eTrW5`,7GM\[c"GW8X0@C8aQag+\))9f+&pmp!8l[`UR0>f=9eFHi^c]JP7Rt&@%J2f&K%&u5un*$@*,_uNXBGs0u>IR6C+'n(7@M75AB@LqD>KN)8&>:K*B@8d8R>bfA6p6u<qbjCqZ:J?<qb\AF".G";iF1FaAS`jl%N@?I$*D4:6P%a_>*MpoG>,FhRILc25?'Z1ncuC(ue(h*H)^@H8!dkJ)XVRd+CfLNO_Jt*RaRePMTt='R9dVN]>n]5l*e4T2EKr_d%*>gk(QjUBBCrNdc-2WFt[q7V*$A0OHo50UFH8NUF?;<5r]Ap^I8R>))>T68@--=Gp@3X@aPkXcXNT*JH*9T[#+A$"=PKiJ.(L9=l%iRjt,CL=T2N,-\S6Sb@9N*>t@9;1G+bb0%L+PPRh1RBWG0+S2-8&N?9[V3ZX.!4ofk/tZ"@o1RRN)QR>BdQY2D8V'F67'0T^EB5'%WK8;bd-Us8-n$:_Ph6Ee*RW:HFA%SR2$#M-eUo3i5WnCH.G5;:IKQefC$H%ul?<s\GghaV9bZ!&<W*J%[a\G#'Uo5@AHeu;QB]U@%"`^MLE^mAoPCuRt-mGlNB'Z+;TN&-QJ?HhH5,.7:<%sI@J^=d<TCuJuRi$b0)!D!<PstBpRM6RN?t'XtHC:Eu]$Dg(M7BlRgeM#r%g.O"O`B1]KMp_a.n7$od>*1fIXt.UMbg.akaMMq]OY3RABEXdD:tN4=YX@f@,hsm6*)1,uEcDEt_Qf*=('k&9jUGqir+^cXo,D!'%14LA_"a$@f4,&d.h<9)RjXICi[u>5Ba!t2MTlG2V*^L:g/glij5f#>aLU@`Nf.tuu.arCnjkn)+-T7k)-WH.G#m=QG<Cm[,+:Td@%4mKo'5mS@seHQVPjnDI>ACt4!"A.p\-MM%ib3d(7hIr+(s,MqJP%ZVI0kd@W5$pPb[_po5C_F#[pot+0@VUsO0Z[N>(`>.5a.t'`%P9M>Sd!d*2+Wh9Z-<&g.s%\]QK[4Qk&[,OFFOh_MQ)m/fA6"ge)*0nL(*YpFF<Ucd`d1;jhA&j/mUo``WQtj!4/8:F!W#=6eCBd2%8.C-Q_I3R%Jng;Y!?Z2,<m8\F==QZ#-?sOfg\L%S&oUXZ&1>$1m,F"W+=n\E<n'.fR!?5*^*8517Io^"_'L.WQ5Y#]#qhngk:.lR%fi-:,5+m^g26l,:jl-$;9afNk\/%,aL*T;b"-d@qJk+G4+@ltXBU7PFYmN$SUJ-)&+3DP17^(bF`dn[@3`b(cca$IBNrBY9+=]ll%@/'jLDU<\Uf&Y.HNGB[fAn)dO8nX/h=oa[VQt?@$g#rmu@Y2/T31pt?71iZ+B+%Y$!sGrHINknSg;3ro#WOPS"i+um"[=ktDq].m%)*es6&n/3(Gr";+-Q\D]2^Q>V<P\^j3-[65qeM(YJOu&S#_^#>_@0;_il#6n</,"!n4*ih[PWLA6jI[La9$!A#"9,XZ(XTDi3[tQ%:t1RH3<sRi;+`/t#GV$k*o\%Hnd,V*`nb;=Jcf6\'-QS:=@j5IUH<_KA60A_`O0G</Zm7l8X<SSJojNj+Ct;pFib4/,`"g%;-qT#%,mPrf1u6&P#+07OG#j^RM7ZgI?A6(@^?nuZ.T"F]7K&2'Y,k*7D[bod\HtLNAGqMA\i5=Jh4=[7<9N]cN*u"T*6S1"[Cp-$iTt`d%"p1.7JiJ;Y,5A<\bMne$Ccco)>-++8@$("/QU%$POXUbQmpNO;-,hEumNeTD6sbHn;;(c#":g_p*)hPJEH!B`'%&&q;K,X1UEHA/%2b;rgLe,KbVW&<k*RRu/.H8BfN%%;bJQ8#H!fQNhKXN(hVD[':X^/j#fDTnbEsWnF6G'TU:%&=F*MiROnbVSRCg6N4%"(4[M.Dl-%%`Kt1%Bt!a+<2tI6Cp0oKbGofV*LmTD@fF&O%IKN6YE1[Gh>\pQ2!(tHZF'[lP"N1\O`*`1:/V8^*oDkbb\cN%'+?]nIuSJ;+h-u%`OZ=uW<_g8ao+YM<2p$U,pLgD&/+7I!Wd_14^]YJHB[/9MA11ufCG-a2o3V;7t"JP(7DX_6Q!//Nf!%*"<d=pW^Z4"'eLl+)1`ss%`6ga_#-uC.M@+)KepKf#pG*miiIVS+0O&YN>,Hhe`Gcq^TKh#`hWHi:dG9@:goB5<aF-1YEd>s16LhsKRBTBHEc[<oK$rd%$"5bI%$UF7_]AFDNc=%p8;7&'_FX>*X0Ec!H<JQmBbY)*'Loi)X/WiEr&P4_8B=aCGZoXPj+A7'j_l=@WdSb*&f+&9C1gC]#Bo3EPc_=s%%AJJ^j;-e7FEiW`5ZI^M68eT\sP9baFUF?EgDK\?he0BrU@PQfJ,Z'=Q!n9i3X^T\POqqJ_!D,>4)ZRF2:q@kIi$(nRPCu7IP`*!W%c#lmR<JY8pD]VFN0#b:UEDlVDWWG!IY(.9QX)*5T/D8K7:d,,XlKU(^-EXHY?@lKPKSZYfW2N]#(T-"R-#pUU!hbW-:p@C5d70Dd%!n`j@%5c>hC*eCm,/XUR]?*?0n?=#n2#&5-Y:0tcH`[Q_ga<$UNg)'sV*%:o!N/8o?`>D%8cd$`qQ+g_j&I0LEph/!Pj5%-5s?ta%R:$I,L$qE8J[-T-<i#D!!k(?s:")mr0[#TBK)Gge6XO]IR<CNgQJ?mXJu?>e2/WAI$)`fYk\(F)4cH'Eq:Va2/`fg;]4MlgG9+9j%F`1p>hf37k&8ABq%13SD_Uro0.`KpY=eD0KggJXb#s)!OJg0!U4S^C!d^2"NfqH9MNuXUq!,4)\[V6,t5"RLB4Lkc\W@*Pm#FC!T%W<,]P>%Ef%6?Ll.a[#r!P>l\jfPX0*OU=[G;bW38D-S,NOG'DV!+(:H`Fl9RJkX\#apYgU&!DtZ-S4Kf;D)o#%;^0MN_E8nfC&#i%$nFH.i5.im!%f1(cAMX\!pA5Wm9(8.k)j?E\cnqd&k<;bPm2e4R)k_[,Ftl7c_O[?_Ef:[m>d[_hMg?^VM&)$o2k0S8>N,P+2cJh%(T8H^GeV8-`uV5F:gQa>jFUoTRg(0AnDora7K@Qs`!:(s<YuhCW[;OmDRBN1X/[6Ac.Wl)-+R_"/d)cG__jDQ*W.>LopZGHl+37i%Lpu5ul[ShUs+.;4%0GdSa`#d7fXuUYcsMrfNLTuD9#F4Mi&JJMX;9UOiip`Q!3\)JLb(t'JU2tXfFi\56?RO-\BC@Ye.s&:-^Rue%P@td'%H0##(t021n>@:lO`(;kCX$'WQjIPB.q5]?mMtL3$U2-)@4[6*RgQQ;T]R6p6.S[MNjYCsTfi1(NDEJp\.R[`?A=BaIAr.q%\-03-<s_2Y/DYs%J7Xt:?qno-V-+To*.g*uWJ!dPfno(bW#[WW+Z6\'-fior9$WeKOD7C3\VoS4Q0K%\UQiZ.=F^I?ESW'likerb%!NLuNc>\dm(-eI_78U6?F1?*+Q^06Kfg/b!/WF6PNXa==#rVZV@8Q=MQinl"8lg0=T>=c0!m4KL<bu:IoK^m"5S9l6!lhg5BJ:A>%D/8p_g"6fU[;Fg=^1\"f-0f,eNg`LKFO9Cd\rK6o9_>B,l-LVG6/OIf3cC@Wqk4"\EY21nAXS+/J9c'sK79J_'Qgo,DL3"QOraLi%JYq[/TOt\H4Goh8>d.`ARM-qn!8T!/Y27mN0#a01Hk+3Yd7_tGTt\,M*cfKR?T^Q5/gfn(-oha\mASaI)-:DS0[>ZEgu%"qOSgML%g@2sebF!-3>a5F7Qlg[STt1%3J1^h/!aZOs9WDe2,f-kk_Wo]c1P+E;!jM1R+)O8A"O'_bOF:/]b]Z027\74:2PB.?CD"i?&qCJ/%#b.""5\"e$rim(ARY(#Kg;7kZ?K*)G/B*^FR`od]Nc/VFQoB-Cc@[8G!`lm<6\9];&]Rn&TP0A7B",p5&Mi%EMS>RTni2LONfef+%?lf;K#=g,WJ\q>b"2G$T`0#VYS!Q-,AgZ8/c+[jXW3CR'8QKtnHd<>5WA]f"mugag,NV>S2SmR0<$\FM]"9/$"3Qj;CpNR:mPY(W%&JIe5.\L:KPK[RiZ?S4^3lt^(Bh6hu^s7Aoi%p'J.KNUB5Cq=9XomIK..%qNe56C!cn<l0>ltD)FaFLpUl.ufD6-G:Q[7@Cl7L*%%'&4sYKJ]%C"E2He%<+<_IdPJ.BDgMkRAQk64F@Re9WhqISjcM#E0<b+N`ZYf<P/n:].3DY@=8f/$N>8sb")kIOZnS2:;%?HKLB?K%=QG^sKA7\OR>snt=e`\`EZo#9L.2)'R\GHSE&#[_Lq!Eg:0+NX07u0.,X!AGU`6=.,WpqQak]lMYjR`0es$33%$6:n@+Qdh0.6EF%Okmp_EV&&e/"p)!q+1o0?FO@`m%lX1V%q#/=XXWV.]i]idPe#JB<UaTGXudik[k#X4GK#9$1tH[BTdP^p;Wi$6$Bq([2B/>5S#cH%km3W<NBrIsdo>ADq=)4p1J(4_E6ElN,5>iioa!n1dno0"jn>RN6tt!BLQ]T\L(ojn<XI^9VGX5AB@DGoKVmmlHOW6f;+-E2/c*II%#34W9)S)<BVc<::(Uo"HMU=8sJZ$J=WtO)iPl60.EWH=JGZ$.NpNeI>mf3?IT(P0-L*k\eP>@JM_CD6r!6$PBL;O0dXosjNfeTn2%Wc)%W9HF_[RfXO"Z_qLo_)2ocf-K;[&YKj&0$h'iJJL*Db*2u:kE5WXM9DeJ@u?WU>>'":aQQOE3:k/H&S)T_J[.jQ3bFA:`dkY'%'GP,`,[hE(:EEA^)n'[Gd=oha2k"1XVVPj\D(LP`MOjhB;&.YTg"o$?G6`:-YgP;ZaN1fZ*NXICb+?NWi4e7>*,R$dHL)'"ZZM67%U)4QO@%O3-7No01:Q`P#_*iCqmW4WhN$shER+V]!^d0,%9MeXCn=Op8RA/2.NAH)@6>I%Gl[bD4_geTkBElQe8u;#&eBkVh'qLN(%63[u]!Cb%%WN)MF6r?(jmP'AIQ!tUeIDUDT&^7C5*e5i&2H*s%.tE\Tb;Bh5^,J'IMK3jP&bQ<o&h9a-.)+CLL-cjHH5ja)(#ffl%;rTY_2K:![-B(SE]eiKk4_`d$UB64CjCID=K>g^:UL4M+!_#f5J<\)J?senT[Z`fL$m&@oeOB,#_C)pFKhN/gIO"2eho]6(WMD(t%_L*o614lDt9=sUaL+6(S'K/?t\OGkfJio'IKI@lRi4s1qa_Mh!YT5"!)2sI_a<\:T^I6S)INC,XZ(=+\TP;E^R*)(EW)<(UMqb-h%2ZTBB73hne;p3B@X(XFe$PDI,kCO6*equRVPQo:JE=)jn]-Bioj\dAIQOrlM(5tt+`Hr;=E]NcQaK5PqbRc$*kR)k]8/P3W!%<<j%Ro3WgTHG6#@KJCk3Un:CRjV<Id+Z8nVH)XB>8;`E?u$W.20o0.pPjS8FD5np+)DN99;2JiU&-2U$P"jP$OK5*f1)c1`BGGE>ic7G%M5$u]2Gn+u?W;?3s/Mb:Z)*^GhPUu%\0%Hn*i*i7LdiFRjeN376D-*V1lM9I'69HW&$c4X_4mtKjbbieYWaLHVMmI-9nY,91A!Q<%88>dZ74MD>%)NKh<1\\8"]R!rs2gZaO^]?_R!^0NBHcQGc';T#pr_'=Qt;mpiQ8Ia](/b1aD:.hB1KQ[Hus=aA:ZqlD3W4X1Bb^W%"kT%UA5-Nt*#*2*kljqF9oOptR5lN;`4ei=&;g%NJ\V]Q)j;pI=hJ:'6j6\YR5MNShtJ5uV/LnI:Mp)K31*J2f]Xt=1R58XHR]dW%]G=#PFcbFap*p!+-&lu.!=VbQ;K-SJn.TT+NKJME=t+p).Oh<,&9PMBq-9HF\YK?NAVX=F,$>cbmqG3@@R+lU/Xfu`]%TMR;`^"N%QBIR8*DuNXeuFj&T:mIX(B@<tI#;&06F1G>k@nJqUc\knE/I$pddf?&ASUsjMC_>2Oat<=.Y8%#MIH2I/jq!V.g;SuCm#+?p#,Rn%&YfJS&\+gPT--6#G3!a@!SR0Vl^)B$bD_NgR-J(V,&dk-a$>=g@[QX@AXu!Nk`GA*,_oG/Y0'=R!rGGOO#$B5g'R^H6Dd*@q!q#i%aH>51:Q"S\Tr-JS[_\Ku_Jt'uTVWIQR,+(H?6&g,I$)S2>7`@\QJ2OL&o#p<-nlk>W$5e,h2\QS#;4/#0U*]D'`LOX6jM[tCf)3$%<#UdND@#KQ==oeOgb"l9RsQSM;hXEs4Ya+Z`J"(">rbt)Q$'Q)#98T=Uc+=)Uch:X+K6R-9gkpgEKEYXj&A,b.Nfk@NX_Zajm_15%q.OoF;km9Mo\grRR^+&:8N9K9$cG`%>iQMa"X#sk-M04O*2*%k<]*p0Qo($bJVV?W\8Y=L#IY73Q6cRj"c;1T!MT^Y#$\<FP$^:,%HkV/$"R[h'4=LV)i01*.:r&@t/ncq*Z21XBHn78aOGNlIB%SN<R?J7qo8M3&dcQ(@.ZJ^ob7l+(0u)>l2.W%MVW)2sEX(S*8T$NH%M7?F(0m$rAX<+Abs!E*`8eoKJj@2R/:7[O,'-cQH#>gG^BW2iQ6JT(&l!`uA*,\=SbeeRsAe#nsSGO]BB$c9EUdm]Yi`l`eWd-F%%j:D5<<g*Vl3ZMUh`*Gi;&MJek)/9k6<E,&],F,4Kh&F>86hhql.NqX<5i`TO.G`mB"Rl=<OfFl$-p0V%2BbH(@iT?/*&bp$23ZZa%X<18BJRM1bm)'S^VW)m.CcI26_u7qmp'bisXDa8!j2Ml(@eO#r.8<QU"@>.!SM^1q9D3@_<bT\t*Jj+P4672lV$_0B?FD]JpL(Xf%StRC#ZfP#>ehjD&@k+o<p*-HC>%:j5pW<"08SJhQ#Id,51ms8*JQr7?g6M/la@]hL,*$CC*A8IAa7Yc=RdB6um]]('X^JKn@.S%q%cnbEQ5Z8qUh2K%)BoG$D0\L7rLLXlR"9j(k\osHm.;s7'-,S!Mfr:-MVZI\f,&q+nFa5Ml!bt>kQR.3L8=I=P_u+Yj2O:(?A*DW7%`0di_I/mLQo#=X'!phZ_$Ps^UmTO-oB#g"NkbP96Bsjti#+C5h492W@7_ha29WGSiM14/p_/W#Ao`C2_fl#eK!*GGm4Yl(!7:XBF%*ffCn*#HTn+nO+MJ:m^*'utSBGs_#'Ta5nS)R:a72K<V+ZmjMJKJ-^W,Q`ArP+L?)RYbpW3GfVo+CO&a;C7-J[#iK>M2ek#Od84Z%Ute>[.q7UWY>ln?G!D&pgR'g*hB3(jP_W2lDcGn`d5%1j[dNF.l")%]<5)Pt_J$[)UWP`l`94X(#rPgCm[CXZijK!r(lk:<4M&&X%L.c?1>,0EW,o`9L_Bdk=20DW<PBAHr#SP]e4W=;?JLu].i1n\rWXo\8=U]5kp@RIAWTpNa;5^hHP;>ZC>V:kp-gRMM>t[HBlL;Em%5fk-*&V8X>&W9`7"Yh?i9sLqno%lpc(\p!e,6T/&CeE)U>t>%6/W8f3EK<&Tf.lklac\d0-;8-OgI9K22LdWAltl,=Cmr9Qd+=NO%*8LXL\%u+04q90C,5f^]qQbK&+G)oo@SsoQ!OGp*;dB2(HreO<m[;)6:VT%?O^1#<UJ\QZ^7Va;#,;BkUq:S:LI`c2gER6$!.7M`%&[me"UM0;$EtTgQC8GWX;dpM%3tn"K+HIC4<u937bgL"_J`-r]"'gFsP;:t+ZT]#>PW_WoX#gRFE<.u:M+LH1#a,ek"\gP(=U"k+%/cmr)5PXakSk0-`ULeR1#X[!7F\TGa<mmFG24XM/T"6m8>Mr@haj;)FZM[9A=#bZW@]&E<*#c%)Ql!jtj?9>.rUhh"R8Eqo`Ie2U%M%\B"41!QA6##:L<kMcIiug$oBb%L[2EWW]oSP[:TUbQ2MmlTP*s/0FT-Pj+^+N553C*Xc6Sp?q934<C6>S]Fpm@a/iJu6uOd$[B%dPD1"k8gOH/$T)E.RUG]eD-E&H\H],dk[F?1en`BK!A_+@fK*P/,l-XZjH<9iggei:K$TjNc&`'3G_q-+$53K<[LKQPR+Cu/tP0p%R])Ei'!_PlL_F!_Z,t\=m&Z'*DKJs;@p>If&q=e@`D`9VNfJ3F:1,qJ-S=C58Jq=Q>#+i_*1-l?W(V[5R0?$C)2qQi_-R'J5q\`U%#8=(%?$Q4m5ENfXDKpW..#Ip/o'^_+60XgLi`4KI(`$D3Llt0&YS0DoTJf+8W`r"SaCga%PVH3>8*iX^F/s-eUQ>S$_qt5?K0uC3%d<TG:j`+)/PVY8XAJ9QLI$IGJN3oC[/4pt_g)APJpl4KoW^AKnTEnj!,]MPS^/3aWWD63U[Dfs!Lu9)Fnr2`qF8u?`1ji2-1k$fC%LDYTMCRXbNo$\1F>D-GE'1u1(q\5M(+N8kY:fM3:4ISm*KhP*^'=aE!].`IS=X$$W]hRotd6B7X;ZW!G83Q3+U.0`nXeUQB?q,E@%`;Jd8jQ>;72p7br8d\?IPC0+0?"gO9($@[C3811:#d)I<!ha',FHil&3e7u9RLjVAne5\OAAP"Y-IL#`1nn5$&o5pD5U:SP\3P3f%j%%]^0/.+K8b:E#I-$#VRqK-L$D[AG9kGqF$(I<NdIWHo7't`Qm_]ZoV+>W_!h$$U'Got9DP8h2jRCFf\-6Y-a-P`$;'&G"\MAC9%/r@aj8u$ttJ.SGT-)M"UcogQ+GcHX+NY.]cR[Rp2M!GPI%QP8oI#t##4D+b8Z4t!,0<B<rW2qs\gk>?%oRq#E@8df$_t4>^/,cVC%HjXZ#<3_b9P!kUYj1OUZPJ)bnLos[,^B*:#;&npBAD<lLEa/DR'I3s/$TZ!&YZu27$L*'So.92iaU&_FW'rg,'>,E<J)Hdi0KVhL%kkV$M[PTA'm',<_Xq\mA<08I@];,9D+sKSQF4TuR7Hss_&P7jGNejMMEWXp[d)&cf)(b=p.RZ`O<kOO2NflXTDA>Z,!6$.D=+r[M%6T84VlA:=C"?EBb@N2QoM^2:7Nsnlh6!35_LT7j6du3#ARAL7MSn7##c1=>;,,^Tb2Wm^A@VF:;'kRA5`u1\OA.d7i"NCu]=WCM$%)m=9ab44ZB^sLOu<!8;%hUEo0:[/*cPO>[gmXjA5@6k+V$u[OsK\To^#(]_b:bhtJlLY=UK[q#W,QnK4#gfF6e8StZ[6)dkm-/KE%mR<6FD.q@0SH/^s`)cf/g8'Q=KoJFaT$fR;6t)JD<(r?B-*oBJ<B2S.Skcl6"X;Y$F@?4/1=XQhh'hV71+7#`E?to?/Wa!FeXlo3%>kIIF*M.lR=E2[JW#!cHOBdJmdcj<46dVP1lkW,56.Ed4`e?+Ubh,eV1Y4<B4,`6pM!H1J'l`3dGAsJgX%+NNQk&8g%;592>!Wk"%4\hfLP'kkT:(O+_JNT+*+0qf^:XVra4;"kIF1X!/Q38:tr#:/("I=`IdV$$N;*-TL/aEP9iIm^`$BL=Q+"fU;__=]2_GTL+kLe=B%pH9dK'mI?8GB)OKQ4Oll/a`&6g`5#l?[@oj%h!'>G^(4FdX?rr!M`SJ[G7oU/bF["jHp=pA:ooB5`q=K99*1VJ2D4VT[u`L8K6<d%,$P'^ZI45bO"f413Tih0BdWjQd:+Mlc"Zm].1!Bh,p80++@oa<mO^`qJo`?%N)bdtJ>G=/]#aU]-iH@7qc\-7$@jKjS/u<.?[7Cc%02krP&C%:H'D],8c080(=5YFmNa#?*Sa.P1MbkmoEj7p9R\!]9+Y`jiFE&:uQ#4qoVi]i98-0*g=U<e(Pf;It2CZ"b2.7B!oe_4#%Z8R7f$0W$NY:D1G@K`D>JI4iY[hMV!'?Q0bpk!/IE@)$uhR]#DS/(EDA6kmrU5R6@G1=1#jd.X7aVH<:!,BV\&9EZGP&S++b:58A%I/niC=Y#RT.P*/@<b+2CQ[-k.W&#G].#-gN&/^<eW[Oi5ZtbIo=/C2<+I/cm%nJeuTD!pn(VMCk`c^0?73r8Wk*Gtd^4m^\M9-8/%N7[jdK;a)4&jeRH3VJ-D(V^6?>#%p-`PpS(]&^f[`!%GGa@JY>'8=$gFMo%jN]/Wp=5iu9&r-;_31BuGaWF%N"&=3HH;OfLmr#gb%XVJgqM[D2[8a!@km[+i8#O3Qo`ApXhX3T@"*lT?9:aq2sKCg.3JXQS`$$+E)E/C:gM]td3GYQ"]Gp3(-D^TcCNo2CV85NM5&b9-f%>o_LQX;!rok/MRo#XE0e.O2^3;"6C40$]A*c;c]I=PDSFGSFu;j9bXcU8Uip:=8EuF\Y/+`GjUF!3XK`"G.gQ$ooQDK=`)*-25hg%-\5d2:GOT;^PH(u[lj;_G`[Qq/4_(h\0FfsF[^G(F,%,T/`.a`MS0?L)DZmkicMBD6M2<N='#^d47hGl:4_=$`_^,a`8:!./WOi#%YF@WJY;JVB`aEi*+<l&^Lno0PXE9>U5t'uNBfaNO!#-7@%O"^b'HhA^>Ui&k25QITi8=YeE_::4JiJlR=1/^_W0jnqP#Wcqr!nU9%,$J52=&f][5Vtkb,\2$8QbX8,n2lZJ!):'_(6<@,+UnZ<.:]c4;^Ti/RZc,D4B>dY<"srVK3U9OEuQ],ifJpaLkB!F="b\jTW?00%%!`eT):XA)<:pY^#5GD6B:+rZPUI*(Zu#Q9fGTO5R<UES1If/$J,r9nGgPcmSRdFQ+RA$MSK&.WS+7:#hpt6ObEH1t]mBfU:/:Na%f8nN/!'p[,T%(e3A4mX.Ff9&D3&6TR8Pt3nA?tDS32U53Td2I75DCo*7gu's3Y]88Ncme*4q[%uU:<V^`1kTu%9>2#MjOs`-/!jk%ST@4n(W,p_&r=T-HJPOY.)<]VW[^%R(CctJ./l)deI,r@LMT8DM0`4"[Yf(__&)@>,%$4gjQQ;'+d&V2s/Z<X;3S5k.%:N.,qaTl%2't=V<&b.+UK:krWp/$QA.o_97.l4+7c7-?nT/lab-:\naK-hX?tS]Nmum8l7&X=_A0CRlJmh5PoHG?QoTgCenrL,1"I.XO_'f:\%<(#.oq>0+?47\B)O:er,e1f<DI+,F.\>Y:H6_<$i&ZkI@i*<B?].9)e`4]K)=d5]5VD]l4PKoRsE\C%-Pu5DD8Q,,q`@)ORb?$Z_%U@;V-3`E&3X5&M@7gfC*5[b@h[u2iDF3%X`Ee$9lJ5ocrKlN6:B\o,A'Xrm@I5n0GG_Y8g+c'6c^HT][6(.5t^JpuG=i_cgE[)[?%oIHp*TW.!L<Y^>J;'@5M$?m&YJjFWRWP'NPSKgR7PP<0UX(:,Ub^fK9PQB(q(?!Q6rb8rlpqeH)!Be#>6(4T'GfgrJ'K2.V0?D2"%6uORW.5!PV"ZU(e39OqGZ>s\-%oUu1OXB,ADE*/#n\ets`OrF5SM3j"25S)SYRG_g&PoF.-6W"k2U9Tg+kF`]7,ipe'((Pl#n/;D%OIi86a^kJlJ:PK(SLE9JmS!bRTMYaLJQ#=?^;Mt'06!Pa5#.<YKkjnjaQpj1eL;[T8hcE7!cJZhGu5TQg:T`URQqYo!@kO@=%*Eu%,mAoDYpqm=Yh*rF'a@]a,?L8-.b%-.:-d\e,0Fss&!B&$D4-\)`"DI/'+&)Q7tj`(]Wi848$T/FQ][Jhe`X_,NMQoaTQHCUgmX.B%<%<14K;"Zai_73n-E_@.S?jSoMu0DGG?)MmF1Q`fJ7/#bY9VA`J6.hVVC"KFkIaVNhJ5kcVchLdjBn(LN@M$;Os)-YNKRt1n$g9X%=h%>(o3s".;htMCL$?Zd^;@I,UFn,qF*KIS!)(GI"W>O9gs,8kEM!<A*?]9U^qq'_(fHB2j]flQR[fsB)(m,<%4+$fBQ<kRl"1#`%^FMTP[^s"<VG%e:%00Q$1.ECbk\hZV]N!taNsj[oXq-]ZoT4Jn1hr\P^/VMAOI`8D\2Kq$QNRg=-:EGn4RR)$)lYV5MKFK[!J]\[%&2T?Ep.LZkB%ZP13pbA%3,Q)H4/*T9a@=!$F:I,4!9H@U\u8AbUl5,.(#a>m1$XrfkTc6WjaoOuCA6@qXm<0:;M??,Rg^)M0G5`\%P%tE6MH)s\_1cq^!?IuJ.P-n7o^L>n<.ckrf.oLS&MPh]EZ4MpE0Iep0,TK-ISki]F"%JbXHd<IZQI]Fh8rQ"PrfPW-$uRr-no'r%n>D"dS-:0.q]=%?$QDM*b)b=+bN*eC7O>:@akrc(Y:-2R$477n1I6k$M?GSiB+"f:kh6DOd8]4HY7@.[*^h=U/:/qN3Lu71oe]\9%@u8WmRP*SpE>]X,1tsZi[S]r^"cRX?UK%Kh4Pm)!HsK/3YrNO1mKMKu5]7Y/JI-n25ult)11(efK"bgJ^H$72Uj[,K`99tZQP+:,%M":maM_mu0l$BKu:tVcrR3RWM'%hMI!c8JQ$$%&LoF[AV0315r8AIM[6DWh!7",`7M0j@4-=:SrlU9%1ZrP(@U-#m@iT,*2T^g!+%O.m"'.Se_eXQ[=!7;'T'#3)%+?9s8ZJE#ZkPru/oRjNS\orYj_"hYkZ-<\teVZAlULmSJ-Wg:;"(jZ@n)3b\dRXeC<\s`UL.H:Sp%Qfu0X7AY3A_mgCr(G(4(=V4kLS_RQ"3E=HSk,IK$2hbYZ,gf!?9kB^s=lr2Oabbkq+-A2D]ME#4Lgjd8"<odtAs+hTi/0#66?VZN%HF:R=Jd&"@ONNMP=VJ>j2)R">W(@r>.AMp)El"ai$h<?_nWXaX^UZk$SJ=0bCl^44QB9k;ahtn-/"[:4fAq'P8>.<R0%:blOq^`Z%1/.7k1UIP9XnC2@`%<Gr^3aKS(QM[^/&H@ReDs(^g!4O^W(Dqh;6l?::RkGtri!b_=kj"/Q%uOjfg6m<(T/snYn2"Ik>)/b0sqB1%0m=C6"^m`-!Rm=H+`n[dYnAY!jbWo4#s=r)'lP\CZ/e#lW<+B"J@HEe+AN(RPn5Mm^)%DqGg^BKWB:6M2dW+eaR):IT;n5L.?XL$%>2mo&aC4Z9MGrV%`CW26!4<cj=.;HHekW&QF,5`\q8e5r=q=riKZ21lM7oU:iSff;Gj'?&%``](I3/CYdBdJj5o:oG2]-bkb=.O9%Oq![V+J1HiW5Q^/Q"QXJ.-3QKTB(g)H^7o1gYt)hH$IB@ltWA`::<BkAmVEo?)d&oWn!ahQsYsfbb?Lf#^%e,);3-+[4"=$OA4DS%Wp%kbfPt_-kN/]W?I7f=UTm:lPCc<!H^2MrMZ?A05ZjRb?P6-=>T;3LUJqjs:'@SfOVOWH4TtDS@i_goEtA6$"A$V"mnP_GH$.-F%UbR5(@[25elEYfK`!L<(WTApMek2cKX*Y!=pBlkSC0]/1b#0QWGu.EP8R)t4idT3-Ks<_)glNmI+)IIg/`hjcb.g2@_Q+HcEq%T?%%j&6=_5m$64d&Yk?C3G:oGr=8G$4F*Y4F2i=eh[XJ/Feal'5aJMN3cn?4dK2Vle1);'E3Eb%tPHBe%^m[,MIeD`'ga5YI7.&V*Ya%R[5R(hI>uG#X#9jEd#eA'k@j\*_6SIZ'SB]6kFrZ1.MDSj%#]&+Padm$[L?u&7eZr87r.r@O;aQT%Fkm/lF9dKM73Ifc@t@Q]p5!%1HZGX7H-!;`rapR?"FI3GE#BWH?@:i_I+"agdT?,,(lLn[T6V@0_lhUc]'OOf9RL-MrPtW,A,`3mPb_PL@dqif#]cm99rtWGR;J@%QKk6[L<B7!P,Uc6<qSX2dIE:7f8?='mQY5J);[-;!gkGDTs=ru2?`+g@YsM"MDEn=\oS-fT5k;Y85)7i:"I=A-imRj'TQH3@P4g;%f3,j(a4-KCdAQ:T&<15(LpYfS%:IUrEgKT3Jrk:.9UdF:;&i'!1P^?Z7Jq\lX+995?'I]uZnZ8sdg:T&VZOjJYoeAt]cjAm)B*ee%7EgIW[RDe[hi:97k+`(o^#S$]33!151S<^*DX64\_HmORmTKVn&d25-\jYQ*>.cnNBW!]4"gf?M*&amcR^2L>5kL4XX;YbTN:]_G%Vm6-]+RkT#s)&*qO[UOU?O<S9iPi$<g8sKI&YU$,(;ZquVkWm".Y+:XG=96u.]Cb7Mj?>b%3*MBa!f#q;`'B\&&PWAqqWo\"ZX(D%.$,M)J\>fdXL_$.qn[ro_D-WZcM1iRMe)P_?tRr=Pg:JL.VD3^\5Y0qfXP=/CpD5m@d?YT#3oEu(D,OT_#j]@4NJEFA$m#K7SF:Y%&FY7<0p.No\47m/MTHY;6ut+Epu)?=('7uC.1M>9Ln>jf^5XZS_\2n:+eb_ljE&!hd_@])FfSN_*qpeBp_C*=BOt@d>b%QbAQf#i%V>A80ER@_^</qb0>9s#mE@&2CeS.IV("Yj9=&hE8fWm-c(ai?Y<E>C@%KLC/B0J9Ur:F(&X;?Z6oM)Ak"\llB;$YX7(i$(F2WeSq%X-QcA(j-&HPYiX]K^A\\:t9krSCL%__fD?%dRlBaL=h$\;S:0[S7BDFOT:TlW2krU7N#j"?7[SW-W:OA+<##S(M'[c%78IHb93m%%Z+f/HWNl,8m>*i..2S@o601A!8pO)aEdMgJ9P&OkhC5[\3'4Uubn@BbFcdjVN*`Ar<FL?_.#^g?EaV#)%>CbM(6#Of_3R&pAk43a%#Q</hSa$]*$c:Ac;&1gHSt\;lfcfc6Ub#YIq'*[!;>%WtJncVF1"MA2W.JVL_,-\E=8D1<4;3NW)k%4nV:8KR4h-?YO?Osh9Z456%KoFanUf;fcgm.rS./u)m-39ImYX5*Ta'dI)4c/!S0nBA\4;7HC7VHoKMd+F^0aTlBM.AEZ%<_m=JO:8qEghDr'tTa:#Y(0")d#5k%N(k.Hf4lZb<0A!B+nm!`o]Xs<@_d!(DHi;MjE('9p:6NXC6^1^-+CHIV^9.kBK0^r_Aa8&&!_/gKp`lK:0DO(F8!PYl?RN]%!7AS%dpmEg+s3lXWd-Y\D7_=hKj*rG2c7DGQZArM-S\^B7;]3O/iGUd`[*a<pS8NlFWZ=l`:u`m$KETn?X[(/+E;iZGu-@*eC9`jNmcVH%W\;1+UV%c%]it!F"mBI>Z:l(3('fOB:=kf+c`5GR`9,To7rWOFX2m6q:.iS:fA/K)QU9Q<lupFl?:&iKmTi+G1h;jP%V^5'3fFtG%3Q^i)WN_VM,?4D/?rG:,-sVY.=m,MIfQ=KVO\;E+B>rp7qG?Q#::`&u`BBK)`MjWc<B#h`9A#KR=`G1q?`'VO/\5-"9R0R"m(MbN%`RP>22ao48VFsPS?3DIlB[S<8+I$BYbHVeKA_pt#e4#.=7L>'K3_&-":m'0F1HTgQddc&^7tM!2nrJe.%!;7++"S-n94Y5/749/r%/VuM8JUPQ,`p^L3F%XLU[\t<FoRoGPi$?IA9V?30YC50D(ok/,b"I^C335;e:K:D/67MOt=34Yb?2qh#F=(p&Sn,-_olA9hc9D'G%Ko_Fcm;b4clC0Os4>Cde+1JVG1Ab:H[[Y?LS`tq>V_D/,,#qd/FdB+DSmLKp2QSTnS7d:X`Qs05E`P?b2Mul18;_?(H*&!6#==g#%`^2=jkic'HX`W4t\_j\DCBR6ABLSSG>T*6iQtHPZ9E&Z/lE[jVB`@Z:Ol[t0a[pE,icQ:u8N_oD6`[5-ocR"c-E8gBZ..Eq(Z.m2%X.[6t,"f/;p\-Wn@7O>B;/I,I[<IgqpjfMb9g@"AXE*ioqqQ^<Fde2##a5tc6l7bLWS_"4<EL5cS!1k>e3O)^UsP1>khX^`a>@j2%I'?rPV%oTjbKR$qJBu/)me#c)GinF!l""Vr#(l2Ql-='LUco0[6P`[&p7W7&/D/rTbplYm+:d/+.",^OF:?uT<0Q7ko6rqT!uJR>%fb_,!a=4p9`<RbhN>>Ph^`loO`/7#d_qgo"2l=KVQSs-3[.59/^TeZR*/Pk3dB;J2>lGn[?ASnGs%qr&OhFFDYr5"iS&Gj\rWf\Q%CCm5N(&.qTejtug=<8X\s-=P1#=TOX9/JdCUTcPA&Sn=F&#ScKD1k*<'H&ApMmj$rXKm=RG.f44?j`'<84f%9+f\SPdm;0PN9ot\%L<jk]-liu$V`+*V=B<Q+-o@4aY#(CHU9A$BVXOm>^T/J/^D".^OjeHKp!Hp8&U]S)n,]9G,h,g1JP+?)B<PA,Jj7m-Q:pG^4b$qL%>Im^rjLl8JekfrYH1k.7P,p"Nduj7_?mBsCpqNA.PGo:Ml'D"4^=9C.:Kg'B%!SO[R=/LW$c:^V<J+8)eA.E>Y]]I,.p':-Pgj#=%@]DKbq(0B[_7bGsMOmHob2J2?$Ib[o&tIK'MHXm<`4S.D`NQ2KObR+@=<UHTWHeLTI-#XpZU.\#]_ahV<1<rZTRK//]Qd=o,6c6m%K#.r=h+)?!N]`9%+`*])EmaJr)6;)W=k(AjUf3\A8;XL/Ga0_E!pjUSch7OjNk)$>Lj=EH2o7I++#mE6E^nH2&Yn"LcE!nE8=6".%IOBiRQP?=6?3D)MJ<g?B#7]2:4G-!8qTprVc7ULk>1jlLPfR'#!.7Y+-rKl_B1u&BTt)_iTed(N)%8aW(ar!8,rD6kB$d'D*j)j]%7p/kY`fgg@YN):=nLd<si]**@GjQjrb=(=1ELfHcd?T?[G\VWuSR&9'<JnR@q>SEC^_&"Z\^39\)@/j4Y19`\l6HUP;*AJ#SErPe%V5d=3/o1*\!+nN16kJL=lsk#hKm?Wt@cum*:'"Uab`:d"Z_&7<I[0h*r')44WH)'6Q1"40/=<Ci<+nC$MM'`c2q#5..;MqK$P-JI%32Y]M/PL%T]04bWFs:p;o&mQGH;Y?8J:0H5)GH??'B@mr>c@u-aTa2[:fh,.Q?GWChE*6q"*@3)CQ[B:X9qg(dTO=8WD#(:+>e\!%25Ub0E,A9S9M_[S7^)ZV8k`O9a3>Kj1CcrFWcJoA$%I%H@qs/Q0I5Gb7k1utkY0tJ&ne2\pV#lhk/gN;WG*2aWls-D!*&[+]8GW2%1.r:g;\92/DDV2kUn%lH;o1Y6fupI?Y83iW1K&8ojd<HPF;h.q.ga>0!@j!5Z0I)mAqQ>H,+8$R^+t1>kn?e^r]!#__<#`ZUcs"8%33c%L/HI"J)B0IJ2,Cad_n'V<W\_9<Xqaoe42i+"dn_>/%F.R.:M0c`Tb]@i+QiMOl35d*<Ig!$9&+^'D]QbZ-:n@313/grG[fQd%TfX200!INTHR._JMJYfh3iq"rabeNiE@hQ-#=*Jj6q21VWF*M]j+rJ.j%bT-$03Mg)lV8DGk&g*T@&s=527J2i_V44N_'I5O-$D.%ZY]IV5mZ$Gh1,/[-KDIn];7r:kKQ+lg%"H9'/'`9&_\6qQhgr095Dt-UGIZqEPOnfD=1UY(ps\!nqouf+T`'$c:$NT8S5]3DA"/)%:\!",AlSJ/g^[$.Z0jUF'R27s=PMr50jn(=JQuM)JcaZO7"p7?E>pmL]gsJ$fkp/;L$FURNTr!*GHTf7$>&j4FqHW7Q[7I(I?nG6%V[m?4-#Vu8q^9uBY1N\EP3#mI\V!lT?/.S0cnD_oZr^ha;bb3K""T51[pEU%&A_YK3CI=R2)eh&Nq$Ti2T_]LS)j$FpKgrkf09H'%V$`fE/f['>%f#CekI5Q:$]/(T$G'o1App*6eTGuMkNrH1-AJmQM+UW.(G?blOpb1(p;64NXK*6cqH(?[.#P6a\egWlBG5RWnu"IB%O+X@:Wui<]?iW"m'kWXF;5@<!+0*ZF0O675l-Su0Z5HS@OD+ajW;1JOI7K&F>?gE:7LI3]Q7rme"YbR,O[Tigs$W2Ok@sa3:!7`n%C?ZcaZUVT6AFQOf7SNf<li?00o(#LA;"AT<1a,D$.;ea]lF(64oHaFeAZr3tiKh1Q;S-+mIPJ1e$DF:&pF`9X](nG6K9I@>6U=4a%6BhYT1c%7:Ho!4lR\o"n3NQZ<Ha5jS+h!OU>"AYE(Zs%J:D1R#\4S5;isK<SThs2Y89K[.R*4c>9.kh\=(HM2%6)K)^/UjtAP&af%]bM&R;9j`5g2Iur,,(G:1lW\U*)?e76(s+#`tc?_pN-Qr+Xg?.=Q++^)tl7+Q0M`TWuZi:.hJnT'D^!\jbCJBP,t"Om9mfMm2=Ys%dT4gT0"<B0fe/BM%e_(/6_BLb+_;!U)+S&4D?,8oS2-Z>!S1!c:\^Qp(3UBlXU()9FUsu\c0XY'W6$ho'PB*ZjI9MI@p)cqP&!Z"%$-m9X$4?F6/6^P7/YKbX\&I>L,.U^YUSXh&@2Iu+VpS(QdNh9aR@]WJL=4]7q?(^\a-s*9\p3cu;'oFhU,k_0<[@o>Dd&ruHV%uh%HqSR>%9uo4o5u?.agXr3Te&)J2W+iTWN'_$%VH0"hnhMb?=GH8/o+[Er^)32>)YXKL%0.4B4hT;?W$"OFPa!?\_#8`+W+3OZiQcU%jk9P=-Pa2c-UEjeF,1@)FD43`NsM$VVb:g3KKq/R8qhUXU4P4CguFjp`LB9YS2[pYbr!UDr5.]\PP[<B$-2?M*TV.5CXGbLba-F:%n8)&Ui+,"cXntcA7O_e@^usM3\ffCCA_nu`2$#sVEF13#KedFfK^$EK@_RHm5H\o"/.?tBJ&ihI")>2FL1@,8eNB!bmXj'1&V_Y`%dEJ)So*EM3k[5u[YV#_mR0KZ=XJdQ(HpK^4[>TWYdB<`\e:DAKNp\NKLt'ArYrF=fW-3c-gS3?D(Fm(*M%a.V`,hsH8N9!i5'Ok/%H.2u7_QgMS&iQht"-k?<4Jo(B1mEjuOuoG+!:Pe(aXJAs3O/HA.XPp8jQZdU!7mN`SlCm]=p)md/ZHWBH9%,jeQ2/W6(]DQO0f<M%g:EQo2j'QJK-c11"`GQ"]/q5GLiMG4U<<1e[nnCqQuCYHlfROW9N,_k\N?:.[2g2h'$2dAA/_rEjW@GpK5FSMNhU8a-)k&da%lO_%WY(RVNBDAjlVoD0!1K)KPSF_,Lki#R7h1DE'bTNIW/=2EkGef7@(gE_O$%'WGb&3!IuoXB_AGgW_;FR&MH>tS;^mRN<,"$\&e`_m%oWQE_:uqi1&7\gPbZ+KD[*pTO?)LNH$#-PN3\`]A%8+#")sMAM=7"*-6NuYoaN0QmUndRp<+C-$D$Uo-huGbY,'+t1T0Q]!D7'Wk%W4]"+=rUq=;TP2b.Ts2O;/&5E!?"IT^3lJtIgo;f5i*i!![)n9LUP=J+9DUA6['9cniHFH>&t8]SOP>X(8V77/-RDe="k7BZo8`U%M4d\12'7IFp%5[#77-$"4MWQk<47HM72RPD/Fb4U"3&HX@G0^(HQn1Lc)&SHW<-\bgbQG+WeF=J.LtlU-qRn%k%QHu)XU_f,_)8c%<,Hto8t/OH?nK\KJ[(*>4@`0PK1_r>NZ(W_Y]o,F?CWaITIjjn-rH;M,RWa7E/!ka3GCm*+KKrj]&UM:Yt<e1dPCRg^oIWeetPQo%=nT\(UcPfO01D!Z\NcPp.I648-rUPTqNJ`_r[+Sjj19GE%/D)Um1SD]E&/6[V/eijH%o!+oFakcLacFsHB^2;W2hF=/-rW,"j\R]%*%BQ/[MlVKmp%^O*H"/=*Oq5p/6?#,OTUk[C4XuT<Kpr:\iS@qo8&MU4!M!j!3Xme#BXTPMGa[A@oYE-hNTa"Y6FAD^_U\G=Fu<g%(--9F>]80)dS.m(^U^k4Tm8UaTKXoC*"b>0C'X8Sh!"$n!#qac?^M:XB0Eb!Cuu)[5W]I\A_jfLnVc"B69IgKb]q,mCCJMp)aYBE%J+-`j208gV./R+2:*A@,_:/ml=H_]=#b?cZGJKrJ3%m;Ti`WtbdA[RVOVTLj>4G66AY?MgO:h0+Z?f+YpISllUYXgEo-]B%Dp55H%%LbP0)86qqrU-o(MgVo"^M**r$fJUll#s*Meu$>;D&meFqYF/2g)YO`oE`a'cLdIf,]$PPKQ9cYkqd$Z!J`/+U("o1jIEp>i$U3c%_G8\:<Q*)rkY.R*do6Q;`5f)VJl.m7<Co/ZQ7?Zm1<OD5P1+\WO:1GWKbl,mUki8i6sPie+5G+C-Vl,q.Yo\qK&RUol%U0j@S;NQ%:^qiH#3SIKC^.%N0n2Xd:ld/p1j;j_mSo2sgAjMU<G`4,WALSt\Mt=#f%WeG&VY_00o+m>+_Qa/@eH09SZ6A>;k.siO-STM<2^^F%$I2c(Q#j'"`q""W/MqSQFBFN_VOQ*b@&OW;#CN)fNddj/"6`)sY@WiS91bA?U$Pp1TbZa"'ACF9CRI)anE'fi5rY:3O[`SG++^IA%X'+1\S79^)9"1_Oe/#4j9S2l1En=bK>F\$ZGfaQ<Cp<<Z8@?N--.U2\UXIXl=Qc@EY='Cb(pMlX[SlCEQ_MQ:AIe+N[@EcX-"r-!%d&Kq#f\EcXV_BZBa=,3aQ1o5Ti41uUmPbi5CkDF=nn"4+Z9E&Z-8@DtjP[<0Ek<Xf@JPY7??H>0`[P:m1Q&f"J-UtW&(GUTQ:+ZQ%!TlJK,)P0icD;-]8b>N.@ZAam-nqJYdJ0MVU=I4#8(_8Xl&[YYgsX-*0-\Rg?Gci-.afbb[3Z!kR5BIeI#SpgonrO6F!]POm.3B1%p6G7%4ci=-mHE;Wq@#O4>(A'uc[m"-S2YXOCVcN4=SX9o=l+2e"t)YL/V*>t.ajH#S853FYNjRoh]:^XCd.UuLIC[t(NYpT0*Mm1%gQ*R[NgE7Kf=M-O7c*mVh$9r/b_[k^Gd(ArK0E/3r[V+EarX^SX&(s[X32s,#Qc`XPHIH7>WfI?I>*E*otF><?CaL%(%M\J_Tgc)%nUM5#derFJe5RYYD_+K7/rA_B!^W%]-qZafUD&N\f%-8>E;]A#H"<u>l1eQG'WJ)/#C=lLV/=Pao-='`_>VbjU+aeH(KC!leJ,]b%,_C,CeV*\P:L,Pdmc:8D/mh#6kG!n(Xb['u$EtiNPn12L4d3i9</D0#VACWp&8qoeC\to8V']\JRanY'$$/+n*A3-Y\pL(m#p5o@%_D=;i]ApBYc;8pgoJS[\PZFaEPE2'QFk*Z((;VfLQk17?3\03&9.C#iI_$K1@?&gH,Vp'V4Dc7SARU0C4if);7KN5&2?M<_d8!P%%P]nDq=r`b*4$sZ(?I$2=LQd?f<(0GD2<[K7I+PYX`VDg[W6$&sZ2,7rZpKB)OH9UdA?.B_./Q`&M<h!oObA57k(7uql3\^X,k9sN%COPaV("j[#*[S&r"0liY+b%Gh!qsc%[fN:mF'2H5.,2%dWE,&<\g,T4q2X(r8+8d\h,f6AORmK^:Lq%Ka)S6fBR*P-pe<m40A`Hf%o9u.N"seXg90a]?X@l"A7oWI5d@$ol&E.,l+1'aS=//@866++E-_2d;Y+n$2p>U5P;//FhR`'f8IYX@ZV3P%$Eq2+<=_osk)J7Ic%U=$-G0'GhZ7JjD<H2%r1_HQ:EB'UNpN$m"t?!t<mi-_\r)ibO0FDk&&;UPg;rjn>7=T\Z'VtG8eH.5ImA!Kr?ga]-WQl\C'BbluL%MDj!j&I,iIQ.33ZRmgoPB5gJoVDclqL%0R*K[-+>bf[k-_qKciaDR)0eXOE6-UWT5Q%5Q.d*%S227E3qS)M+o>pQ5g[4<cRH:9I1%P3[I73klE.*d:5r-<><gX@9TX>2;fj^2,+UmRJ/>Y9/_JgHXEip,D]s>JGOZdFlL&UP"K"PN2VJml0^_o\kr4]m9A"(QUfZ[$N.q%#:Ih.2a;c\<rU52gWNCMqrQT0+905+DnZ*Xq,.+DO7Pkgs74J2HV[$.mGFO!)i+ImhS7Tj=oRIArncPFs4.!Rs!%H[:X?d<rL<HL%+9(5!55iB_oCVr&5Pqo;Hb]FBigl.fgAf2@5QBsiI\2,ec9H^SjS@!h_1T41q":D[?iHk8F8l/#hgY-7s7,0tj.H;4gP:jdZdZ,8%q=)S"[!-uqq#C3UdEd;`Z6.p`G]gCke&Ph`V+6%8\,R&4*1sm/Ier';^#bmcjmd]@cen`P#N:lU5PRhHpV6V(YEuH0s7mc*r54lI%5C;mcrNAGuptPZ2T@Nke#8\JYhtNc:D1DQX;1!c^o+1lq(I.0Khu7mSI.H72r9Ngh-gBme&,3edotSq1rV&Mamp&!SLNfA>raC6L%l+b69+$]boaX?fKhu51!*^+d0^Z+_]J"D/h2a9GeGjk)bIT$/&^@Ta9s7N.os5N5%j59n6ZTl*DHLaYZcf]fWjlDWG8,<+]2Xnc%%qsdmohYtVeIs:J<^UJE:r.1a'h;eM-HV=>6jJ1hmnof<Jf(/=^^].j='ji$]o#\Kcr-_6D-ZB%6UHcEaO2(VfUF2]5DL(uY[/]Ra%hnAdP:VV9mH0`RRDs_uHiO=lo_fGPJ?FdBeO4pMXIeM^%m<&:)a1qYnHiO$)X/H!i`;XJ`rV2lUZdU9ds7q0B^[7P,>H1:0a$5.4%_+T#%0AqQTQ@OLn]r,]t.mlbq;PrG;cZsRqq\dIqk9U]Xjp`u<Eb<nH>6!Iuk(32-"a1/lV]G2ALe$+S;k;i/Z0_Ft-/$d:>qo?g%,KtL]q69--*ba>bIp("N]llC046<AYlAlGC,r;0*]AC>&!Q]C\)alabW@o(MfeL;SrdOn</=iEH;U_5u#1M0PTZ\W9SSaa5'D^00%;,2RhN]]7u%P!b6jHU*Cpq>;D:pD?;n3#n"7MpGJ!+\6sGWpLqL$)[c(`R4T4^:(u4L&=:3Btj=V1+G12qntf*bN>KmLM$FYi9A>%P+.NGXd)bKjHWjl5U@=XT/r%!F*'tlGmJnOO5j]pH^Vb-;f<d1RQ7*:S>RTm%C1eRdUdQ2f\1p-#qu`MGU^5&`&q.57cC^!\u>B2%+H#0?IcJ+?2Al)Ye)!MqAFc:7DJf$t=IuZIJo2ngVB\L\_8d8b;AZb*CS%\>*ia`Fo"8%%ZZ9cSdI"!*aNHu^Q&sE)3@\0uSSN"?%/eZcZGHsdp5)]DW@'pOl'0GX!`.g]C(W1<Uio;lEpPl?,H7G,9bLX!d)VeW`([Af.c)qpilCu14k''^(qOQ"+pac$>+luf6L(2lQ%NmF@GA2Y]tr4Ht,-<]c9S&EG8,dYnfQn<39D1bOK:!UR=49mr4op2^<krL=+huh-HN2^e30GBGElUaWk*Js0/49;TjGLaN1E(+aF%8LX`)Nab'sBEaf$P41*9JAm(fCq74I9j:,K*5I2kRs1'D59[F%SSZp,9RRi3de]Bd?hq!Ldmk^V$5;u]*7gKSnKtVHc_n$R?+-n/%3oPLP1%7Wfl;P65nMRoIa)8]-)+Wa6XsEPMRSj28Z+n`Ghqqj\:h)5KiArU>+2^E]+Y,F<Sn\T[H_0)/?Nd>EWrnO>>d=KqY>kF;%VmGXp[P/#$=fW%soB,ZW%(mAkC"#`j)jGkSh$:**HemC`kY/.0*Ag58HSQn#aP1`VaGQs05hgg3E;m@#R,eEp*0857XP.`jhj;;.%e"\'l02`WCre1U1?L[!P-)mjDHr4dtapI#`f-kmUS=dWM'FF2t)i:BjZ6_$q?.LeQc7HR\gNFUtBDKZ96p.=k#R3cBC!cKu,Bh`3%`p9o>!RoP"s+ZG^#%%d(i2DHGSfX%ICC$<.5$S5tqJmPWa%&hHoItDj+b2h+BF#U=Mf&Y+MV+NbU$JEsJ4b5,#TW8j*X%F\f^A"K%dUhTmcm2nU6U5;&%Re*O?-o1_Q!]Ubf^"G=#TOL4m0LMT"mp"D/csaS3>R1@,GkbJLq96BNC-(k!+1aO^mKrF6NFPIBM[YB&3//U%I0^Z,YoaN272N>/EJ"kMjibIG(`fmK#ahS!g8C]8+eV&/LEHRcQOO'kcUtQ?7h%`AaG=Ou!1kf<jQA8):IgI5^kdg67f]hI:?:Rm%Zqj27,@FWlIRLs[?(B!^@q_Kpl9W5<M![OE6sYat?*#toLu25TL&_?^[NJt$<l.6iM_BnD<bk/)Q7h&,5dDb)69qk1Lu26K5ldo;%?O3=:,9)]Z@D3k5>J17BppqjZ+?ki(ML\\iW5BFPH4ZYD3t\]s#L-0H0EeKB6!1^#eUpoqTN+-g<=^9PIh)T]oq4mf=Oi%)oq5;J%BN5Qe;h#egX*W-7oedn#<=cst72#aJRi!pjgeor[SUAGgE[NarHKY#t@]?:*/o=]@C%p'-7+bf`$QZKf^FN@OX<7m7jU4^bTt=dm%p6rB:m+sr7(70).H-l095K;V5H7"9qO02(DoC_2n"ic;Ef<H+ceh%1-MR,R`L1(gj0@jdQ?nBT>rOMDfZjUej'3UF9GL0gfcc!@V%R>LXJ2#0Z;":Y+mNaZ1\\,?ha;nV,~>%AI9_PrivateDataEnd